@model ChangeHistoryViewModel
@{
    var request = HttpContext.Current.Request;
    var sortDir = "desc";
    var sortDirText = "a descending order";
    var sortField = "effectiveDateUtc";

    if (request.QueryString["sortby"] != null)
    {
        var sortByQuery = (request.QueryString["sortby"] ?? "");

        sortField = sortByQuery.Contains("-") ? sortByQuery.Substring(0, sortByQuery.IndexOf("-")) : sortByQuery;
        sortDir = sortByQuery.Contains("asc") ? "asc" : "desc";
        sortDirText = sortByQuery.Contains("asc") ? "an ascending order" : "a descending order";
    }

    var sortedDescription = " is sorted in " + sortDirText + ". Click to change order. All other columns are sortable.";
    var unsortedDescription = ". Click to sort data by this column.";

    var tableColumns = new List<Tuple<string, string, bool>>
   {
       Tuple.Create("effectiveDateUtc", "Date changed", true),
       Tuple.Create("establishmentUrn", "URN", false),
       Tuple.Create("establishmentName", "Establishment", false),
       Tuple.Create("fieldName", "Updated field", true),
       Tuple.Create("oldValue", "Old value", true),
       Tuple.Create("newValue", "New value", true),
       Tuple.Create("originatorUserName", "Suggested from", true),
       Tuple.Create("approverUserName", "Approved by", true),
   };
}


@if (Model.Items.Any())
{
    <div class="top-pagination">
        @Html.Partial("_GenericPaginationV2", Model)
    </div>
    <table class="edubase-table sortable-table table-tight" id="changes-table">
        <caption class="visuallyhidden">Establishment change history search results</caption>
        <thead>
            <tr>
            @foreach (var tableColumn in tableColumns)
            {
                if (tableColumn.Item3 || !Model.SingleEstablishment)
                {
                    var toggleHide = tableColumn.Item1 == "originatorUserName" || tableColumn.Item1 == "approverUserName";
                    <th class="@(toggleHide ? "visuallyhidden js-reveal-when-no-filter" : "")" scope="col">
                        <a href="@Url.SortUrl(tableColumn.Item1, "#change-history")"
                        class="@Html.Conditional(sortField == tableColumn.Item1, "selected-sort") @Html.Conditional(sortDir.Contains("asc"), "sorted-asc") @Html.Conditional(sortDir.Contains("desc"), "sorted-desc")"
                        aria-label="@string.Concat(tableColumn.Item2, (sortField == tableColumn.Item1 ? sortedDescription : unsortedDescription))">@tableColumn.Item2</a>
                    </th>
                }
            }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td data-label="Date changed">@(item.EffectiveDate?.ToString("dd/MM/yyyy"))</td>
                    @if (!Model.SingleEstablishment)
                    {
                        <td data-label="URN">@Html.RouteLink(item.EstablishmentUrn?.ToString() ?? "Unknown", "EstabDetails", new { id = item.EstablishmentUrn })</td>
                        <td data-label="Establishment" class="table-tight--break-word">@Html.RouteLink(item.EstablishmentName ?? "Unknown", "EstabDetails", new { id = item.EstablishmentUrn })</td>
                    }
                    <td data-label="Updated field" class="table-tight--break-word">@item.FieldName</td>
                    <td data-label="Old value" class="table-tight--break-word">@item.OldValue</td>
                    <td data-label="New value" class="table-tight--break-word">@item.NewValue</td>
                    <td data-label="Suggested by" class="break-word visuallyhidden js-reveal-when-no-filter">@item.SuggesterName</td>
                    <td data-label="Approved by" class="break-word visuallyhidden js-reveal-when-no-filter">@item.ApproverName</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="lower-pagination push--bottom">
        @Html.Partial("_GenericPaginationV2", Model)
    </div>
    @helpers.BackToTopLink()
}
else
{
    <p>There are no results, please widen your search with the filters.</p>
}
