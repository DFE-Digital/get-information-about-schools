@model Edubase.Web.UI.Models.DataQuality.DataQualityStatusViewModel

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width"/>
    <title>Prototype page</title>
</head>
<body>
<div id="data-status-summary" class="data-status-summary">
    <h1 class="govuk-heading-l make-modal-header">@((Model.Urgent) ? "Update your data status" : "Data status")</h1>
    <table class="govuk-table edubase-table retain-columns">
        <caption class="govuk-table__caption">These dates show when each of our teams last updated their data.</caption>
        <thead class="govuk-table__head">
        <tr class="govuk-table__row">
            <th scope="col" class="govuk-table__header">Establishment type</th>
            <th scope="col" class="govuk-table__header">Last updated</th>
        </tr>
        </thead>
        <tbody class="govuk-table__body">
        @foreach (var data in Model.Items)
        {
            var updated = new DateTime((int)data.LastUpdated.Year,(int) data.LastUpdated.Month, (int)data.LastUpdated.Day);
            <tr class="govuk-table__row">
                <td class="govuk-table__cell">@data.EstablishmentType.GetEnumMember()</td>
                <td class="govuk-table__cell">@updated.ToString("d MMMM yyyy")</td>
            </tr>
        }
        </tbody>
    </table>

    <div class="button-row">
        @if (Model.Urgent)
        {
            @Html.ActionLink("Update", "EditStatus", "DataQuality", new { area = ""}, new {@class="govuk-button", id="data-status-update"})
            <a href="#" class="govuk-button govuk-button--secondary data-status-exit">Exit</a>
        }
        else
        {
            @Html.ActionLink("More info", "ViewStatus", "DataQuality", new { area = ""}, new {@class="govuk-button", id="data-status-update"})

            <a href="#" class="govuk-button govuk-button--secondary data-status-exit">Exit</a>
        }

    </div>
</div>

</body>
</html>
