@using Edubase.Services.Enums
@model ChangeHistoryViewModel
@{
    ViewBag.Title = "Edubase: search change history";
    ViewBag.bodyClasses = "search-changes";

    var recordCount = 0;
    if (Model.Results != null)
    {
       recordCount = (int)Model.Results.Count;
    }
}
<div class="breadcrumbs">
    <ul>
        <li>
            @Html.ActionLink("Home", "Index", "Search", new { area = "" }, null)
        </li>
        <li>
            @Html.ActionLink("Tools", "Index", "Tools", new { area = "" }, null)
        </li>
        @if (Model.Results != null)
        {
            <li>
                @Html.ActionLink("Change history", "Index", "ChangeHistory", new {area = ""}, null)
            </li>
        } 
    </ul>
</div>

<h1 class="heading-intro">Change history</h1>

@Html.ValidationSummary("Incorrect or missing details", new { @class = "error-summary" })

<div class="grid-row" id="change-history-app">
    @using (Html.BeginRouteForm("ChangeHistorySearch", FormMethod.Get,  new { id="change-history-form", data_record_count = recordCount } ))
    {
        <div class="column-full @(Model.Results == null ? "" : "hidden")" >
            
            <div class="button-row">
                <input type="submit" class="button" value="Apply filters" />
                @Html.RouteLink("Clear filters", "ChangeHistoryCriteria", null, new { @class = "button button-grey" })
            </div>

            <fieldset class="inline">
                <legend class="heading-small">Filter by establishment or group</legend>
                <div class="form-group panel-toggler">
                    <span class="radio-button-wrap">
                        <input id="searchtype-establishment" name="@nameof(Model.SearchType)" value="establishment" type="radio" @Html.Conditional(Model.SearchType == "establishment", "checked") />
                        <label class="edubase-button-radio" for="searchtype-establishment">
                            Establishment
                        </label>
                    </span>
                    <span class="radio-button-wrap">
                        <input id="searchtype-group" name="@nameof(Model.SearchType)" value="group" type="radio" @Html.Conditional(Model.SearchType == "group", "checked") />
                        <label class="edubase-button-radio" for="searchtype-group">
                            Group
                        </label>
                    </span>
                </div>
            </fieldset>

            <input type="submit" class="button" value="Update" id="update-search-type-selection" />

            <div id="establishment-search-filters" class="panel-indent" style="display:@(Model.SearchType != null ? "" : "none");">
                <div class="expander-panel open-expander">
                    <a href="#" class="panel-trigger heading-small">Date</a>
                    <div class="expander-panel-content">
                        <div class="form-group inline">
                            <span class="radio-button-wrap">
                                <input id="date-applied" name="@nameof(Model.DateFilterMode)" value="@ChangeHistoryViewModel.DATE_FILTER_MODE_APPLIED" type="radio" @Html.Conditional(Model.DateFilterMode == ChangeHistoryViewModel.DATE_FILTER_MODE_APPLIED, "checked")>
                                <label class="edubase-button-radio" for="date-applied">Applied</label>
                            </span>

                            <span class="radio-button-wrap">
                                <input id="date-approved" name="@nameof(Model.DateFilterMode)" value="@ChangeHistoryViewModel.DATE_FILTER_MODE_APPROVED" type="radio" @Html.Conditional(Model.DateFilterMode == ChangeHistoryViewModel.DATE_FILTER_MODE_APPROVED, "checked")>
                                <label class="edubase-button-radio" for="date-approved">Approved</label>
                            </span>

                            <span class="radio-button-wrap">
                                <input id="date-effective" name="@nameof(Model.DateFilterMode)" value="@ChangeHistoryViewModel.DATE_FILTER_MODE_EFFECTIVE" type="radio" @Html.Conditional(Model.DateFilterMode == ChangeHistoryViewModel.DATE_FILTER_MODE_EFFECTIVE, "checked")>
                                <label class="edubase-button-radio" for="date-effective">Effective</label>
                            </span>
                        </div>

                        <div class="form-group panel-indent">
                            @Html.EditorFor(x => x.DateFilterFrom, new { title = "Changed date from", disableHint = true })
                            @Html.EditorFor(x => x.DateFilterTo, new { title = "Changed date to", disableHint = true })
                        </div>
                    </div>

                </div>
                <div class="expander-panel for-search-type-establishment" style="display:@(Model.SearchType == "establishment" ? "" : "none");">
                    <a href="#" class="panel-trigger heading-small">Establishment type</a>
                    <div class="expander-panel-content">

                        @foreach (var item in Model.EstablishmentTypes)
                        {
                            var name = ChangeHistoryViewModel.BIND_ALIAS_ESTABTYPEIDS;
                            
                            <span class="checkbox-wrap">
                                <input id="@(name + "_" + item.Id)" name="@name" value="@item.Id" type="checkbox" @Html.Conditional(Model.SelectedEstablishmentTypeIds.Contains(item.Id), "checked") />
                                <label for="@(name + "_" + item.Id)" class="edubase-button-checkbox">@item.Name</label>
                            </span>
                        }

                    </div>

                </div>
                <div class="expander-panel for-search-type-establishment" style="display:@(Model.SearchType == "establishment" ? "" : "none");">
                    <a href="#" class="panel-trigger heading-small">Establishment fields</a>
                    <div class="expander-panel-content">
                        @foreach (var item in Model.EstablishmentFields)
                        {
                            var name = ChangeHistoryViewModel.BIND_ALIAS_FIELDS;
                            <span class="checkbox-wrap">
                                <input id="@(name + "_" + item.Key)" name="@name" value="@item.Key" type="checkbox" @Html.Conditional(Model.SelectedEstablishmentFields.Contains(item.Key), "checked") />
                                <label for="@(name + "_" + item.Key)" class="edubase-button-checkbox">@item.Text</label>
                            </span>
                        }
                    </div>
                </div>

                <div class="expander-panel for-search-type-group" style="display:@(Model.SearchType == "group" ? "" : "none");">
                    <a href="#" class="panel-trigger heading-small">Group type</a>
                    <div class="expander-panel-content">

                        @foreach (var item in Model.GroupTypes)
                        {
                            var name = ChangeHistoryViewModel.BIND_ALIAS_GROUPTYPEIDS;
                            <span class="checkbox-wrap">
                                <input id="@(name + "_" + item.Id)" name="@name" value="@item.Id" type="checkbox" @Html.Conditional(Model.SelectedGroupTypeIds.Contains(item.Id), "checked") />
                                <label for="@(name + "_" + item.Id)" class="edubase-button-checkbox">@item.Name</label>
                            </span>
                        }

                    </div>
                </div>
                <div class="expander-panel last-panel">
                    <a href="#" class="panel-trigger heading-small">Author and approver</a>
                    <div class="expander-panel-content">
                        <div class="column-third">
                            <div class="form-group">
                                @Html.LabelFor(x => x.SelectedSuggesterId, "Change suggested by", new { @class = "form-label" })
                                @Html.DropDownListFor(x => x.SelectedSuggesterId, Model.Suggesters, "Select user group", new { @class = "form-control" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(x => x.SelectedApproverId, "Change approved by", new { @class = "form-label" })
                                @Html.DropDownListFor(x => x.SelectedApproverId, Model.Approvers, "Select user group", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>


            </div>

            <div class="button-row">
                <input type="submit" class="button" value="Apply filters" />
                @Html.RouteLink("Clear filters", "ChangeHistoryCriteria", null, new { @class = "button button-grey" })
            </div>
        </div>
        
        if (Model.Results != null)
        {
            <div class="column-full">
                <h2 class="heading-small">Download change history</h2>
                
                <div class="form-group padded-group">
                    <span class="radio-button-wrap">
                        <input id="download-csv" name="@nameof(Model.DownloadFormat)" value="csv" type="radio" @Html.Conditional(Model.DownloadFormat == Edubase.Services.Enums.eFileFormat.CSV, "checked") />
                        <label class="edubase-button-radio" for="download-csv">
                            Data in CSV format
                        </label>
                    </span>
                    <span class="radio-button-wrap">
                        <input id="download-xlsx" name="@nameof(Model.DownloadFormat)" value="xlsx" type="radio" @Html.Conditional(Model.DownloadFormat == Edubase.Services.Enums.eFileFormat.XLSX, "checked") />
                        <label class="edubase-button-radio" for="download-xlsx">
                            Data in XLSX format
                        </label>
                    </span>
                </div>

                <button type="submit" name="@nameof(Model.StartDownload)" class="button" value="true" id="download-continue">Continue</button>
                
                <div>
                    <p><button type="submit" name="@nameof(Model.ClearResults)" class="button-as-link" value="true">Show filters</button></p>
                    @Html.Partial("_GenericPagination", Model)
                </div>

                <div class="changes-list-wrapper">
                    @if (Model.IsEstablishmentSearch)
                    {
                        <table class="edubase-table approval-changes establishment-changes" id="changes-table">
                            <thead>
                            <tr>
                                <th scope="col" class="cell-urn">
                                    <abbr title="Unique reference number">
                                        URN
                                    </abbr>
                                </th>
                                <th scope="col" class="cell-estab">Establishment</th>
                                <th scope="col" class="cell-edate">Date changed</th>
                                <th scope="col" class="cell-updatedfield">Updated field</th>
                                <th scope="col" class="cell-oldvalue">Old value</th>
                                <th scope="col" class="cell-newvalue">New value</th>
                                <th scope="col" class="cell-suggested">Suggested by</th>
                                <th scope="col" class="cell-edate">Approved by</th>
                            </tr>
                            </thead>
                            @if (Model.Results.Items.Any())
                            {
                                <tbody>
                                @foreach (var item in Model.Results.Items)
                                {
                                    <tr>
                                        <td aria-label="URN"><a href="/establishment/details/@(item.EstablishmentUrn)">@(item.EstablishmentUrn)</a></td>
                                        <td aria-label="Establishment"><a href="/establishment/details/@(item.EstablishmentUrn)">@(item.EstablishmentName)</a></td>
                                        <td aria-label="Date changed">@(item.DateChanged?.ToString("dd/MM/yyyy"))</td>
                                        <td aria-label="Updated field">@item.FieldName</td>
                                        <td aria-label="Old value">@item.OldValue</td>
                                        <td aria-label="New value">@item.NewValue</td>
                                        <td aria-label="Suggested by">@item.SuggesterName</td>
                                        <td aria-label="Approved by">@item.ApproverName</td>
                                    </tr>
                                }
                                </tbody>
                            }
                            else
                            {
                                <tbody>
                                <tr>
                                    <td colspan="9">
                                        <p> No items</p>
                                    </td>
                                </tr>
                                </tbody>
                            }
                        </table>
                    }
                    else
                    {
                        <table class="edubase-table approval-changes establishment-changes" id="changes-table">
                            <thead>
                                <tr>
                                    <th scope="col" class="cell-edate">Date changed</th>
                                    <th scope="col" class="cell-requesttype">Request type</th>
                                    <th scope="col" class="cell-urn">
                                        <abbr title="Unique identifier">
                                            Group UID
                                        </abbr>
                                    </th>
                                    <th scope="col" class="cell-estab">Group</th>
                                    <th scope="col" class="cell-change">Change</th>
                                    <th scope="col" class="cell-suggested">Suggested by</th>
                                </tr>
                            </thead>
                            @if (Model.Results.Items.Any())
                            {
                                <tbody>
                                    @foreach (var item in Model.Results.Items)
                                    {
                                        <tr>
                                            <td aria-label="Date changed">@(item.DateChanged?.ToString("dd/MM/yyyy"))</td>
                                            <td aria-label="Request type">@item.RequestType</td>
                                            <td aria-label="Group UID"><a href="/groups/group/details/@(item.GroupUId)">@(item.GroupUId)</a></td>
                                            <td aria-label="Group"><a href="/groups/group/details/@(item.GroupUId)">@(item.GroupName)</a></td>
                                            <td aria-label="Change">
                                                <dl>
                                                    @if (item.RequestType == GroupChangeRequestType.GroupChange)
                                                    {
                                                        <dt>Field</dt>
                                                        <dd>@item.FieldName</dd>
                                                        <dt>Old value</dt>
                                                        <dd>@item.OldValue</dd>
                                                        <dt>New value</dt>
                                                        <dd>@item.NewValue</dd>
                                                    }
                                                    else
                                                    {
                                                        <dt>Establishment</dt>
                                                        <dd>@item.LinkUrn @item.LinkEstablishmentName</dd>
                                                        <dt>Link date</dt>
                                                        <dd>@(item.LinkDateUtc?.ToString("dd/MM/yyyy"))</dd>
                                                        <dt>Type</dt>
                                                        <dd>@(item.LinkType?.ToString() ?? "not recorded")</dd>
                                                    }

                                                </dl>
                                            </td>
                                            <td aria-label="Suggested by">@item.SuggesterName</td>
                                        </tr>
                                    }
                                </tbody>
                            }
                            else
                            {
                                <tbody>
                                    <tr>
                                        <td colspan="9">
                                            <p> No items</p>
                                        </td>
                                    </tr>
                                </tbody>
                            }
                        </table>
                    }
                </div>

            </div>
        }
    }
</div>


@section ViewScripts {


    <script>
        (function() {
            var panels = document.querySelectorAll('.expander-panel');

            Array.prototype.forEach.call(panels,
                function(el) {
                    var trigger = el.querySelectorAll('.panel-trigger')[0];
                    var checkBoxes = el.querySelectorAll('.checkbox-wrap');

                    trigger.addEventListener('click', function(e) {
                        e.preventDefault();
                        el.classList.toggle('open-expander');

                        if (!el.getAttribute('data-checkboxheight')) {
                            for (var i = 0, len = checkBoxes.length; i < len; i++) {
                                var chxBox = checkBoxes[i];
                                if (chxBox.offsetHeight > 64) {
                                    chxBox.classList.add('long-label');
                                }
                                chxBox.addEventListener('click', function () {
                                    if (!el.getAttribute('data-checkboxescleared')) {
                                        [].forEach.call(checkBoxes, function (cb) {
                                            cb.querySelectorAll('input')[0].checked = false;
                                        });

                                        this.childNodes[0].checked = true;
                                        el.setAttribute('data-checkboxescleared', 1);
                                    }
                                });
                            }
                            el.setAttribute('data-checkboxheight', 1);
                        }
                    });
                });

            $("#update-search-type-selection").hide();

            $("#searchtype-establishment,#searchtype-group").change(function() {
                $("#establishment-search-filters").show();
            });

            $("#searchtype-establishment").change(function() {
                $(".for-search-type-group").hide();
                $(".for-search-type-establishment").show();
            });

            $("#searchtype-group").change(function() {
                $(".for-search-type-establishment").hide();
                $(".for-search-type-group").show();
            });

            if ($('#searchtype-establishment').prop('checked')) {
                $('#searchtype-establishment').change();
            }

            if ($('#searchtype-group').prop('checked')) {
                $('#searchtype-group').change();
            }


            if (Number($('#change-history-form').data().recordCount) > 20000) {
                $('#download-continue').okCancel({
                    ok: function () {
                        this.closeModal();
                    },
                    cancel: null,
                    title: 'Too many records',
                    content: 'Please filter your search to fewer than 20000 records.',
                    triggerEvent: 'click'

                });
            }
        }());
    </script>

    
    
}
