@using Edubase.Common
@using Edubase.Services.Enums
@using VM = Edubase.Web.UI.Areas.Groups.Models.CreateEdit.IGroupPageViewModel;
@model VM
@{
    ViewBag.bodyClasses = "create-edit school-details";
    if(string.Equals(Model.SelectedTabName, "governance"))
    {
        ViewBag.bodyClasses = String.Concat("governance ", ViewBag.bodyClasses);

    }
    ViewBag.hideLogo = true;
    ViewBag.Title = string.Concat(!ViewData.ModelState.IsValid ? "Error: " : string.Empty, "Edit establishment group");
    Layout = "~/Views/Dfe/Layouts/template.cshtml";
}

@section BreadCrumbs {
   <div class="govuk-grid-row">
       <div class="govuk-grid-column-full">
           <div class="govuk-breadcrumbs">
               <ol class="govuk-breadcrumbs__list">
                   <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
                   <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Search", "Index", "Search", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
               </ol>
           </div>
       </div>
   </div>
}

@Html.Partial("_ValidationSummary", ViewData.ModelState)

<h1 class="govuk-heading-l gias-landing-heading">
    <span class="heading-preamble">Edit establishment group</span>
    @(ViewBag.OriginalGroupName ?? Model.GroupName)
</h1>

<p class="urn establishment-fine-detail"><abbr title="Unique Identifier">UID</abbr>: @Model.GroupUId</p>
<p class="establishment-type establishment-fine-detail">@(ViewBag.OriginalGroupTypeName ?? Model.GroupTypeName)</p>
@if (ViewData.ContainsKey("DuplicateGovernor"))
{
    @Html.Partial("~/Areas/Governors/Views/Governor/_DuplicateGovernor.cshtml", ViewData["DuplicateGovernor"])
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <div class="gias-tabs-wrapper">
            <div class="tab-wrap">
                <ul class="gias-tabs">
                    <li class="gias-tabs__list-item @Html.Conditional(Model.SelectedTabName == "details", "gias-tabs__list-item--selected")">
                         <a href="@Url.Action("EditDetails", "Group", new { id = Model.GroupUId, area = "Groups" })" class="gias-tabs__tab">Details</a>

                    </li>
                    <li class="gias-tabs__list-item  @Html.Conditional(Model.SelectedTabName == "links", "gias-tabs__list-item--selected")">
                        <a href="@Url.Action("EditLinks", "Group", new { id = Model.GroupUId, area = "Groups" })" class="gias-tabs__tab">@Model.ListOfEstablishmentsPluralName.ToProperCase()</a>
                    </li>
                    @if (Model.GroupTypeId == (int)eLookupGroupType.MultiacademyTrust)
                    {
                        <li class="gias-tabs__list-item  @Html.Conditional(Model.SelectedTabName == "governance", "gias-tabs__list-item--selected")">
                            <a href="@Url.Action("Edit", "Governor", new {groupUId = Model.GroupUId, area = "Governors"})" class="gias-tabs__tab">Governance</a>
                        </li>
                    }
                </ul>
            </div>
            <div class="tab-content-wrapper gias-tabs-content">
                @if (Model.SelectedTabName == "governance")
                {
                    <div class="tab-content">
                        @RenderBody()
                    </div>
                }
                else
                {
                    @RenderBody()
                }

            </div>
        </div>
    </div>
</div>

@section ViewScripts
{
    @(RenderSection("ViewScripts", required: false))
}
