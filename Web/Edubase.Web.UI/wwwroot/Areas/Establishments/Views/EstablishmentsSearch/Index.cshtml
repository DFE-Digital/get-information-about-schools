@using Edubase.Web.UI.Models.Search
@using Edubase.Web.UI.Helpers
@using Edubase.Common
@using Edubase.Services.Enums
@using M = Edubase.Web.UI.Areas.Establishments.Models.Search.EstablishmentSearchViewModel;
@using System.Web.WebPages
@model M
@{
    ViewBag.Title = $"Search results for '{Model.TextSearchModel.Text}'";
    ViewBag.PageClass = "search-results";
    ViewBag.HideLogo = true;
}

@section Head
 {
    <meta name="robots" content="noindex,nofollow" />
}


@section BreadCrumbs
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-breadcrumbs">
                <ol class="govuk-breadcrumbs__list">
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Search", "Index", "Search", new {area = "", SelectedTab = SearchViewModel.Tab.Establishments}, new {@class = "govuk-breadcrumbs__link"})</li>
                </ol>
            </div>
        </div>
    </div>
}

<div class="govuk-error-summary hidden" id="js-filter-error-summary" aria-labelledby="error-summary-title" role="alert" tabindex="-1" data-module="govuk-error-summary">
    <h2 class="govuk-error-summary__title" id="error-summary-title">
        Incorrect or missing details
    </h2>
    <div class="govuk-error-summary__body">
        <ul class="govuk-list govuk-error-summary__list">
            <li class="open-date-filter-error hidden">
                <a href="#open-date-filter">Please enter the open date in the format DD/MM/YYYY</a>
            </li>
            <li class="close-date-filter-error hidden">
                <a href="#close-date-filter">Please enter the close date in the format DD/MM/YYYY</a>
            </li>
            <li class="option-select-AgeRangeLow-error hidden">
                <a href="#option-select-AgeRangeLow">Please enter the low age range in the correct format, for example 5 to 11</a>
            </li>
            <li class="option-select-AgeRangeHigh-error hidden">
                <a href="#option-select-AgeRangeHigh">Please enter the high age range in the correct format, for example 5 to 11</a>
            </li>
            <li class="summary-radius-error hidden">
                <a href="#option-select-radius">Please enter a radius between 0 and 99.99</a>
            </li>
        </ul>
    </div>
</div>

<div class="govuk-grid-row" id="search-results">
    <div class="govuk-grid-column-full">
        <h1 class="govuk-heading-xl gias-search-results--heading" id="search-results-establishments">Search results for establishments</h1>

        @inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

        @if (Model.Count > 0)
        {
            var query = HttpContextAccessor.HttpContext.Request.QueryString.Value;
            <div class="search-results-download-link-container">
                <a id="establishment-search-results-download-link"
                   class="search-results-download-link"
                   href="@Url.Action("PrepareDownload", "EstablishmentsSearch", new { area = "Establishments" })@query"
                   rel="nofollow">Download these search results</a>
            </div>
        }

        <div class="gias-filter-toggle--container">
            <span class="gias-filter-toggle--icon">
                <filter-icon />
            </span>
            <a href="#gias-filter-container" role="button" id="gias-filter-toggle">Filters</a>
        </div>
    </div>
    @if (Model.SearchType != eSearchType.EstablishmentAll)
    {
        <div class="govuk-grid-column-full">
            <p>
                @if (Model.SearchType == eSearchType.Text)
                {
                    if (Model.TextSearchType == M.eTextSearchType.EstablishmentName ||
                    Model.TextSearchType == M.eTextSearchType.Unknown)
                    {
                        if (!Model.TextSearchModel.Text.IsEmpty())
                        {
                            <text>Establishments matching &lsquo;<span class="govuk-!-font-weight-bold">@Model.TextSearchModel.Text</span>&rsquo;</text>
                        }
                    }
                    else if (Model.TextSearchType == M.eTextSearchType.LAESTAB)
                    {
                        <text>Establishments matching the LAESTAB "@Model.TextSearchModel.Text".</text>
                    }
                    else if (Model.TextSearchType == M.eTextSearchType.UKPRN)
                    {
                        <text>Establishments matching the <abbr title="UK Provider Reference Number">UKPRN</abbr> &lsquo;@Model.TextSearchModel.Text&rsquo;.</text>
                    }
                    else if (Model.TextSearchType == M.eTextSearchType.URN)
                    {
                        <text>Establishments matching the <abbr title="Unique Reference Number">URN</abbr> &lsquo;@Model.TextSearchModel.Text&rsquo;.</text>
                    }
                }
                else if (Model.SearchType == eSearchType.ByLocalAuthority)
                {
                    <text>Establishments in <span id="la-list">the selected local authorities</span></text>
                }
                else if (Model.SearchType == eSearchType.Location)
                {
                    var displayLocation = Model.LocationSearchModel.Text;
                    var lastIndex = displayLocation.LastIndexOf(",");
                    if (lastIndex > -1)
                    {
                        displayLocation = displayLocation.Substring(0, lastIndex);
                    }
                    <text>Establishments matching &lsquo;</text><span class="govuk-!-font-weight-bold">@displayLocation</span><text>&rsquo;</text>
                }
            </p>
        </div>
    }
    <div class="govuk-grid-column-full">
        <div class="date-filter-warning warning-message @Html.Conditional(!Model.ShowDateFilterWarning, "hidden")">
            <p>Incomplete historical data means a number of records have no open date recorded and do not appear in this search.</p>
        </div>
    </div>
</div>

<div class="govuk-grid-row">
    <form method="get" action="@Url.Action("Index", "EstablishmentsSearch", new {area = ""})">
        <div id="gias-filter-container">
            <div class="filter-form" id="filter-form">
                <input type="hidden" id="client-only-searchtype" value="@Model.SearchType" />
                <div class="govuk-grid-column-one-third">
                    <h2 class="gias-heading-xs make-modal-header">Filters</h2>
                    <a href="#results-container" class="govuk-skip-link">Skip filters</a>
                    @if (!User.Identity.IsAuthenticated)
                    {
                        <a href="#" class="add-clear-filters" id="clear-filters" role="button">Clear all filters</a>
                    }
                    <div id="EditSearchCollapse" class="search-result-filters blanket-container">
                        @if (User.Identity.IsAuthenticated)
                        {
                            @Html.Partial("Partials/_UserFilterSets")
                            @Html.HiddenFor(x => x.SavedFilterToken)
                        }

                        <div class="govuk-option-select js-collapsible no-scroll" id="option-select-sort-by" role="search">
                            <div class="container-head js-container-head">
                                <div class="option-select-label">Sort by</div>
                            </div>
                            <div class="options-container">
                                <label for="sortby-selector" class="govuk-visually-hidden">Sort by</label>
                                <select class="govuk-select trigger-result-update sortby-selector" name="@M.BIND_ALIAS_SORT_BY" id="sortby-selector">
                                    @if (Model.SearchType == eSearchType.Location)
                                    {
                                        <option id="distance" value="d" @Html.Conditional(Model.GetSortOption() == eSortBy.Distance, "selected")>Distance</option>
                                    }
                                    <option id="alpha-az" value="a" @Html.Conditional(Model.GetSortOption() == eSortBy.NameAlphabeticalAZ, "selected")>Alphabetical A-Z</option>
                                    <option id="alpha-za" value="z" @Html.Conditional(Model.GetSortOption() == eSortBy.NameAlphabeticalZA, "selected")>Alphabetical Z-A</option>
                                </select>
                                <filter-skip-link />
                            </div>
                        </div>

                        @if (Model.SearchType == eSearchType.Location)
                        {
                            @await Html.PartialAsync("_RadiusFilter", Model)
                        }

						@await Html.PartialAsync("_SelectorNested", new SelectorNestedViewModel {
							Label = "Establishment type",
							Name = M.BIND_ALIAS_TYPEIDS,
							Items = Model.EstablishmentTypes.OrderBy(e => e.Name),
							SelectedItems = Model.SelectedEstablishmentTypeIds
						})
						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Status",
							Name = M.BIND_ALIAS_STATUSIDS,
							Items = Model.EstablishmentStatuses.OrderBy(model => model.Name),
							SelectedItems = Model.SelectedEstablishmentStatusIds
						})
                        @await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Phase of education",
							Name = M.BIND_ALIAS_PHASEIDS,
							Items = Model.EducationPhases.OrderBy(model => model.Name),
							SelectedItems = Model.SelectedEducationPhaseIds
						})
						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Local authority",
							Name = M.BIND_ALIAS_LAIDS,
							Items = Model.LocalAuthorities.OrderBy(model => model.Name),
							SelectedItems = Model.SelectedLocalAuthorityIds,
							FilterRefine = true
						})
						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Religious character",
							Name = M.BIND_ALIAS_RELICHARIDS,
							Items = Model.ReligiousCharacters.OrderBy(model => model.Name),
							SelectedItems = Model.SelectedReligiousCharacterIds,
							FilterRefine = true
						})

                        <!-- begin opted in filters -->
                        @await Html.PartialAsync("_OpenDateFilter", Model)

                        @await Html.PartialAsync("_CloseDateFilter", Model)


                        @Html.EditorFor(x => x.AgeRangeLow, new { title = "Age range low", id = "age-range-low-filter", bindalias = M.BIND_ALIAS_AGE_RANGE_LOW_FROM })

                        @Html.EditorFor(x => x.AgeRangeHigh, new { title = "Age range high", id = "age-range-high-filter", bindalias = M.BIND_ALIAS_AGE_RANGE_HIGH_FROM })

                        @await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Admissions policy",
							Name = M.BIND_ALIAS_ADMPOL,
							Items = Model.AdmissionsPolicies.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedAdmissionsPolicyIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Boarding provision",
							Name = M.BIND_ALIAS_BOARDPOL,
							Items = Model.BoardingProvisions.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedBoardingProvisionIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Diocese",
							Name = M.BIND_ALIAS_DIOCESE,
							Items = Model.Dioceses.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedDioceseIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true,
							FilterRefine = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "District",
							Name = M.BIND_ALIAS_DISTRICT,
							Items = Model.Districts.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedDistrictIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true,
							FilterRefine = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Further Education type",
							Name = M.BIND_ALIAS_FETYPE,
							Items = Model.FurtherEducationTypes.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedFETypeIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Gender of entry",
							Name = M.BIND_ALIAS_GENDER,
							Items = Model.Genders.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedGenderIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Government Office Region",
							Name = M.BIND_ALIAS_GOR,
							Items = Model.GORs.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedGORIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Nursery provision",
							Name = M.BIND_ALIAS_NURSERY,
							Items = Model.NurseryProvisions.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedNurseryProvisionIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Parliamentary constituency",
							Name = M.BIND_ALIAS_PARLCONST,
							Items = Model.ParliamentaryConstituencies.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedParliamentaryConstituencyIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true,
							FilterRefine = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Registration suspended",
							Name = M.BIND_ALIAS_REGSUSPENDED,
							Items = Model.RegistrationStatuses.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedRegistrationStatusIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true,
							FilterRefine = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Religious ethos",
							Name = M.BIND_ALIAS_RELETHOS,
							Items = Model.ReligiousEthoses.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedReligiousEthosIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true,
							FilterRefine = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "RSC region",
							Name = M.BIND_ALIAS_RSCREG,
							Items = Model.RSCRegions.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedRSCRegionIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Section 41 approved",
							Name = M.BIND_ALIAS_SECT41,
							Items = Model.Section41Designations.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedSection41Ids,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Sixth form provision",
							Name = M.BIND_ALIAS_SIXTHFORM,
							Items = Model.SixthFormProvisions.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedSixthFormProvisionIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Special classes",
							Name = M.BIND_ALIAS_SPECLASS,
							Items = Model.SpecialClassesProvisions.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedSpecialClassesProvisionIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Type of SEN provision",
							Name = M.BIND_ALIAS_TYPEOFSENPRV,
							Items = Model.TypeOfSENProvisions.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedTypeOfSENProvisionIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true
						})

						@await Html.PartialAsync("_Selector", new SelectorViewModel {
							Label = "Urban/Rural description",
							Name = M.BIND_ALIAS_URBRUR,
							Items = Model.UrbanRuralDesignations.OrderBy(x => x.Name),
							SelectedItems = Model.SelectedUrbanRuralIds,
							AdditionalClassName = "additional-search-critera hidden",
							IsExtraFilter = true
						})


                        <div id="additional-filter-wrap">
                            <div class="govuk-option-select js-collapsible searchable-filters" data-closed-on-load="true" id="option-select-additional-filters" role="search">
                                <div class="container-head js-container-head">
                                    <div class="option-select-label">More filters</div>
                                    <div class="js-selected-counter">
                                        <span class="js-selected-counter-text"></span>
                                    </div>
                                </div>
                                @* <a href="#" class="clear-selections filter-clear">Clear</a> *@
                                @await Html.PartialAsync("_SearchWithin", "more")
                                <div class="options-container" id="">
                                    <div class="js-auto-height-inner">
                                        <div class="suggestion-target"></div>
                                        <fieldset class="govuk-fieldset" id="filter-type-target"></fieldset>
                                    </div>
                                </div>
                            </div>

                        </div>

                        <div id="filter-additional-controls" class="filter-additional-controls">
                            <a href="#" class="add-clear-filters" id="clear-filters-additional" role="button">Clear all filters</a>
                            @* @if (User.Identity.IsAuthenticated) *@
                            @* { *@
                            @*     <a href="javascript:" class="save-filter-set-link js-save-set hidden govuk-button govuk-button--secondary">Save filter set</a> *@
                            @* } *@
                        </div>

                        <input type="submit" value="Update" class="govuk-button govuk-!-margin-top-2 gias-filter-submit js-hidden" id="filter-submit" />

                        @if (Model.SearchType == eSearchType.Text)
                        {
                            @Html.HiddenFor(!Model.TextSearchModel.Text.IsEmpty(), x => x.TextSearchModel.Text)
                            @Html.HiddenFor(!Model.TextSearchModel.AutoSuggestValue.IsEmpty(), x => x.TextSearchModel.AutoSuggestValue)
                        }
                        else if (Model.SearchType == eSearchType.Location)
                        {
                            @Html.HiddenFor(!Model.LocationSearchModel.Text.IsEmpty(), x => x.LocationSearchModel.Text)
                            @Html.HiddenFor(!Model.LocationSearchModel.Text.IsEmpty(), x => x.LocationSearchModel.AutoSuggestValue)
                        }

                        <input type="hidden" id="selected-search-filters" name="@M.BIND_ALIAS_SELECTED_SEARCH_FILTERS" value="@Model.SelectedExtraSearchFilters" />

                        @Html.HiddenFor(x => x.SearchType)
                    </div>

                </div>
            </div>
            <div role="alert" aria-live="assertive" id="results-notification" class="govuk-visually-hidden"></div>
            <h2 class="govuk-visually-hidden">Search results listing</h2>
            <div class="govuk-grid-column-two-thirds" id="results-container">
				@await Html.PartialAsync("Partials/_EstablishmentSearchResults")
            </div>
			@await Html.PartialAsync("Partials/_EstablishmentSearchMap")
        </div>
    </form>
</div>

<div class="search-field-wrap">
    <label class="filter-searchwithin-label">
        <span class="govuk-visually-hidden">Search within @Model filter</span>
        <input type="text" class="filter-search govuk-input" />
        <button class="field-clear hidden"><span class="govuk-visually-hidden">Clear</span></button>
    </label>
</div>

@section ViewScripts
{
    <script src="@Html.Raw(Html.GetWebpackScriptUrl("search-results-bundle.*.js"))"></script>
}
