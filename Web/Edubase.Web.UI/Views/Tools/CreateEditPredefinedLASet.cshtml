@model PredefinedLASetViewModel
@{
    ViewBag.Title = Model.PageTitle;
    ViewBag.bodyClasses = "independent-sigdates-edit";
}

<div class="breadcrumbs">
    <ul>
        <li>@Html.RouteLink("Home", "Homepage")</li>
        <li>@Html.RouteLink("Tools", "Tools")</li>
        <li>@Html.RouteLink("View independent schools' significant dates", "IndSchSearch")</li>
        @*<li>@Html.RouteLink("Predefined local authority sets", "PredefinedLASets")</li>*@
    </ul>
</div>

<div class="grid-row">
    <div class="column-full results-heading">
        <h1 class="heading-xlarge">
            @Model.PageTitle
        </h1>
    </div>
</div>
<div class="grid-row">
    

        @using (Html.BeginRouteForm((Model.IsNewEntity ? "CreatePredefinedLASetPost" : "EditPredefinedLASetPost"), new { Model.Id }, FormMethod.Post, new { @class = "has-typeahead" }))
        {
            <div class="column-two-thirds">
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x=>x.Referrer)
                @Html.HiddenFor(x=>x.Mode)

                @if (Model.WarningNameClash)
                {
                <div class="modal-overlay" id="warning-modal-overlay-0"></div>
                <div class="modal-content" id="warning-modal-content-0">
                    <div class="modal-inner">
                        <a href="#" id="warning-exit-overlay-0" class="modal-exit allow-exit">Close</a>
                        <h3 class="heading-large">A set already exists with this name.</h3>
                        <p>Saving with this name will overwrite the existing set.</p>
                    </div>
                    <div class="button-row">
                        <a href="#" class="button mobile-full-width" id="overlay-proceed-0">Ok</a>
                        <a href="#" class="button button-grey mobile-full-width allow-exit" id="overlay-cancel-0">Cancel</a>
                    </div>
                </div>

                <!-- Set to true ONLY when 'Ok' is clicked.  -->
                <input type="hidden" id="@nameof(Model.SuppressWarning)" name="@nameof(Model.SuppressWarning)" value="false" />
                }

                <div class="form-group @Html.ValidationCssClassFor(x => x.Title)">
                    @Html.LabelFor(x => x.Title, "Name", new { @class = "form-label" })
                    @Html.ValidationMessageFor(x => x.Title)
                    @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
                </div>

                <div class="form-group @Html.ValidationCssClassFor(x => x.SelectedLocalAuthorityIds)">
                    @Html.LabelFor(x => x.SelectedLocalAuthorityIds, "Local authorities", new { @class = "form-label" })
                    @Html.ValidationMessageFor(x => x.SelectedLocalAuthorityIds)


                    <div id="la-id-target">

                        @foreach (var id in Model.SelectedLocalAuthorityIds)
                        {
                            var la = Model.LocalAuthorities.First(x => x.Id == id);
                            <input value="@la.Name" type="hidden" class="form-control user-selected-la" />
                            <button type="submit" class="link-button font-small remove-suggest-la" name="LocalAuthorityToRemove" data-remove="la-@id" value="@id">@la.Name</button>
                            <input type="hidden" name="d" value="@id" id="la-@id">
                        }
                        <div class="floating-text-field-wrap">
                            <input class="floating-text-field" id="LocalAuthorityToAdd" autocomplete="off" />
                        </div>
                    </div>
                </div>
            </div>
                <div class="column-full">
                    <div class="button-row">
                        <button id="edit-submit" class="button mobile-full-width" type="submit">Save</button>
                        @Html.ActionLink("Cancel", "IndependentSchoolsSearch", "Tools", new { @class = "button button-grey mobile-full-width" })
                    </div>
                </div>
                
            
        }

    

</div>

@section ViewScripts{
    <script src="/public/dfeagiledevops-typeahead/dist/typeahead.bundle.min.js"></script>
    <script>
        window.localAuthorities = @Html.Json(Model.LocalAuthorities);

        (function () {
            var canProceed = false;
            var $modalCancels = $("[id|='warning-exit-overlay'], [id|='overlay-cancel']");
            var $modalProceeds = $("[id|='overlay-proceed']");

            $modalCancels.on('click',
                function (e) {
                    e.preventDefault();
                    var idInt = $(this).attr('id').split('-').slice(-1);
                    $('#warning-modal-overlay-' + idInt).addClass('hidden');
                    $('#warning-modal-content-' + idInt).addClass('hidden');
                });

            $modalProceeds.on('click',
                function (e) {
                    console.log('proceed');
                    canProceed = true;
                    $("#SuppressWarning").val(true);
                    $('#edit-submit').click();
                });

            
        }());

    </script>
    
}