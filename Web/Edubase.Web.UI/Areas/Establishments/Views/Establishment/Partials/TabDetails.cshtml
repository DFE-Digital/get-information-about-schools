
@using Edubase.Common;
@model EstablishmentDetailViewModel

<div id="school-dashboard" class="tab-content">
    @if (Model.UserCanEdit)
    {
        @Html.ActionLink("Edit", "EditDetails", "Establishment", new { id = Model.Establishment.Urn }, new { @class = "button button-grey mobile-full-width" })
    }
    
    @if (Model.Establishment.Location != null)
    {
        <div class="map-container">
            <div id="map" class="school-detail-map"
                 data-latlng="[@(Model.Establishment.Location?.Longitude),@(Model.Establishment.Location?.Latitude)]"
                 data-school-name="@Model.Establishment.Name"
                 data-school-address="@Model.GetAddress()"></div>
            <a href="#map" id="map-toggle" class="map-toggle">Show map</a>
        </div>
    }
    
    <div class="detail-summary">
        <dl>
            @{Html.RenderPartial(@"Partials\Header");}

            @if (Model.DisplayPolicy.ReligiousCharacterId)
            {
                <dt>Religious character:</dt>
                <dd>
                    @Model.ReligiousCharacterName
                </dd>
            }
        
            @if (Model.DisplayPolicy.DioceseId)
            {
                <dt>Diocese:</dt>
                <dd>@Model.DioceseName</dd>
            }
        
            @if (Model.DisplayPolicy.ReligiousEthosId)
            {
                <dt>Religious ethos:</dt>
                <dd>
                    @Model.ReligiousEthosName
                </dd>
            }

            @if (Model.DisplayPolicy.ProvisionBoardingId)
            {
                <dt>Boarders:</dt>
                <dd>@Model.ProvisionBoardingName</dd>
            }

            @if (Model.DisplayPolicy.ProvisionNurseryId)
            {
                <dt>Nursery provision:</dt>
                <dd>@Model.ProvisionNurseryName</dd>

            }

            @if (Model.DisplayPolicy.ProvisionOfficialSixthFormId)
            {
                <dt>Official sixth form:</dt>
                <dd>@Model.ProvisionOfficialSixthFormName</dd>
            }

            @if (Model.DisplayPolicy.Capacity)
            {
                <dt>School capacity: <a href="#help-text-school-capacity" class="icon-help"><span class="visuallyhidden">Help with this field</span></a></dt>
                <dd>@Model.Establishment.Capacity</dd>
            }

            @if (Model.DisplayPolicy.NumberOfPupilsOnRoll)
            {
                <dt>Number of pupils:</dt>
                <dd>@(Model.Establishment.NumberOfPupilsOnRoll?.ToString() ?? "Not recorded")</dd>
            }

            @if (Model.DisplayPolicy.Section41ApprovedId)
            {
                <dt>Section 41 approved:</dt>
                <dd>@Model.Section41ApprovedName</dd>
            
            }

                <dt>Open date / Reason:</dt>
                <dd>
                    @(Model.Establishment.OpenDate?.ToString("dd/MM/yyyy") ?? "Not recorded")<br />
                    @Model.ReasonEstablishmentOpenedName
                </dd>

            @if (Model.DisplayPolicy.CloseDate)
            {
                <dt>Close date / Reason:</dt>
                <dd>
                    @(Model.Establishment.CloseDate?.ToString("dd/MM/yyyy") ?? "Not recorded")<br />
                    @Model.ReasonEstablishmentClosedName
                </dd>
            }

            @if (Model.DisplayPolicy.CCOperationalHoursId)
            {
                    <dt>Operational hours:</dt>
                    <dd>
                        @Model.CCOperationalHoursName
                    </dd>
            }

            @if (Model.DisplayPolicy.CCUnder5YearsOfAgeCount)
            {
                <dt>Number of under 5s:</dt>
                <dd>
                    @Model.Establishment.CCUnder5YearsOfAgeCount
                </dd>
            }

            @if (Model.DisplayPolicy.CCGovernanceId)
            {
                <dt>Governance:</dt>
                <dd>
                    @Model.CCGovernanceName
                </dd>
            }

            @if (Model.DisplayPolicy.CCGovernanceDetail)
            {
                <dt>Governance detail:</dt>
                <dd>
                    @(Model.Establishment.CCGovernanceDetail ?? "Not recorded")
                </dd>
            }

            @if (Model.DisplayPolicy.CCLAContactDetail)
            {
                <dt>Local authority contact name:</dt>
                <dd>
                    @(Model.Establishment?.CCLAContactDetail?.FullName ?? "Not recorded" )
                </dd>

                <dt>Local authority contact email:</dt>
                <dd>
                    @(Model.Establishment?.CCLAContactDetail?.EmailAddress ?? "Not recorded" )
                </dd>

                <dt>Local authority contact telephone number:</dt>
                <dd>
                    @(Model.Establishment?.CCLAContactDetail?.TelephoneNumber ?? "Not recorded")
                </dd>
            }

            @if (Model.DisplayPolicy.CCDeliveryModelId)
            {
                <dt>Delivery model:</dt>
                <dd>
                    @Model.CCDeliveryModelName
                </dd>
            }

            @if (Model.DisplayPolicy.GroupCollaborationName)
            {
                <dt>Group/Collaboration name:</dt>
                <dd>
                    @(Model.Groups.FirstOrDefault()?.Name ?? "Not recorded")
                </dd>
            }

            @if (Model.DisplayPolicy.CCGroupLeadId)
            {
                <dt>Group lead centre:</dt>
                <dd>
                    @Model.CCGroupLeadName
                </dd>
            }

            @if (Model.DisplayPolicy.CCPhaseTypeId)
            {
                <dt>Phase:</dt>
                <dd>
                    @Model.CCPhaseTypeName
                </dd>
            }

            @if (Model.DisplayPolicy.CCDisadvantagedAreaId)
            {
                <dt>Disadvantaged area:</dt>
                <dd>
                    @Model.CCDisadvantagedAreaName
                </dd>
            }

            @if (Model.DisplayPolicy.CCDirectProvisionOfEarlyYearsId)
            {
                <dt>Direct provision of early years:</dt>
                <dd>
                    @Model.CCDirectProvisionOfEarlyYearsName
                </dd>
            }

            @if (Model.DisplayPolicy.ProvisionSpecialClassesId)
            {
                <dt>Special classes:</dt>
                <dd>@Model.ProvisionSpecialClassesName</dd>
            }

            @if (Model.DisplayPolicy.FreeSchoolMealsNumber)
            {
                <dt>Number of pupils eligible for free school meals: <a href="#help-text-fsm" class="icon-help"><span class="visuallyhidden">Help with this field</span></a></dt>
                <dd>@(Model.Establishment.FreeSchoolMealsNumber?.ToString() ?? "Not recorded")</dd>
            }

            @if (Model.DisplayPolicy.FreeSchoolMealsPercentage)
            {
                <dt>Percentage of children eligible for free school meals: <a href="#help-text-fsm" class="icon-help"><span class="visuallyhidden">Help with this field</span></a></dt>
                <dd>@(Model.Establishment.FreeSchoolMealsPercentage?.ToString().Append("%") ?? "Not recorded")</dd>
            }

            @if (Model.DisplayPolicy.SENStat)
            {
                <dt>Number of Special Pupils Under a SEN Statement/EHCP:</dt>
                <dd>@Model.Establishment.SENStat</dd>            
            }

            @if (Model.DisplayPolicy.SENNoStat)
            {
                <dt>Number of Special Pupils Not Under a SEN Statement/EHCP:</dt>
                <dd>@Model.Establishment.SENNoStat</dd>
            }


            @if (Model.DisplayPolicy.Contact_EmailAddress)
            {
                <dt>@Model.DisplayPolicy.MainEmailAddressLabel:</dt>
                <dd>@(Model.Establishment.Contact_EmailAddress ?? "Not recorded")</dd>
            }

            @if (Model.DisplayPolicy.ContactAlt_EmailAddress)
            {
                <dt>Alternative email:</dt>
                <dd>@(Model.Establishment.ContactAlt_EmailAddress ?? "Not recorded")</dd>
            }

            @if (Model.DisplayPolicy.LastChangedDate)
            {
                <dt>Last Change:</dt>
                <dd>@(Model.Establishment.LastChangedDate?.ToString("dd/MM/yyyy"))</dd>
            }

            @if (Model.DisplayPolicy.SENIds)
            {
                <dt>Type of SEN provision:</dt>
                <dd>
                    @Model.SENNames
                </dd>
            }

            @if (Model.DisplayPolicy.TeenageMothersProvisionId)
            {
                <dt>Teenage mothers:</dt>
                <dd>@Model.TeenageMothersProvisionName</dd>
            }

            @if (Model.DisplayPolicy.TeenageMothersCapacity)
            {
                <dt>Teenage mothers places:</dt>
                <dd>@Model.Establishment.TeenageMothersCapacity</dd>
            }

            @if (Model.DisplayPolicy.ChildcareFacilitiesId)
            {
                <dt>Childcare facilities provision:</dt>
                <dd>@Model.ChildcareFacilitiesName</dd>
            }

            @if (Model.DisplayPolicy.PRUSENId)
            {
                <dt>SEN facilities:</dt>
                <dd>@Model.PRUSENName</dd>
            }

            @if (Model.DisplayPolicy.PRUEBDId)
            {
                <dt>Pupils with EBD:</dt>
                <dd>@Model.PRUEBDName</dd>
            }

            @if (Model.DisplayPolicy.PlacesPRU)
            {
                <dt>Number of places:</dt>
                <dd>@Model.Establishment.PlacesPRU</dd>
            }

            @if (Model.DisplayPolicy.PruFulltimeProvisionId)
            {
                <dt>Full time provision :</dt>
                <dd>@Model.PruFulltimeProvisionName</dd>
            }


            @if (Model.DisplayPolicy.PruEducatedByOthersId)
            {
                <dt>Pupils educated by other providers:</dt>
                <dd>@Model.PruEducatedByOthersName</dd>
            }


            @if (Model.DisplayPolicy.TypeOfResourcedProvisionId)
            {
                <dt>Type of resourced provision:</dt>
                <dd>@Model.TypeOfResourcedProvisionName</dd>
            }

            @if (Model.DisplayPolicy.ResourcedProvisionOnRoll)
            {
                <dt>Resourced provision number on roll:</dt>
                <dd>@Model.Establishment.ResourcedProvisionOnRoll</dd>
            }

            @if (Model.DisplayPolicy.ResourcedProvisionCapacity)
            {
                <dt>Resourced provision capacity:</dt>
                <dd>@Model.Establishment.ResourcedProvisionCapacity</dd>
            }

            @if (Model.DisplayPolicy.SenUnitOnRoll)
            {
                <dt>SEN Unit number on roll:</dt>
                <dd>@Model.Establishment.SenUnitOnRoll</dd>
            }

            @if (Model.DisplayPolicy.SenUnitCapacity)
            {
                <dt>SEN Unit capacity:</dt>
                <dd>@Model.Establishment.SenUnitCapacity</dd>
            }


            @if (Model.DisplayPolicy.BSOInspectorateId)
            {
                <dt>Inspectorate name:</dt>
                <dd>@Model.BSOInspectorateName</dd>
            }

            @if (Model.DisplayPolicy.BSOInspectorateReportUrl)
            {
                    <dt>Inspectorate report:</dt>
                    <dd>@Model.Establishment.BSOInspectorateReportUrl</dd>
            }

            @if (Model.DisplayPolicy.BSODateOfLastInspectionVisit)
            {
                <dt>Date of Last Inspection Visit:</dt>
                <dd>@(Model.Establishment.BSODateOfLastInspectionVisit?.ToString("dd/MM/yyyy"))</dd>
            }

            @if (Model.DisplayPolicy.BSODateOfNextInspectionVisit)
            {
                <dt>Date of Next Inspection Visit:</dt>
                <dd>@(Model.Establishment.BSODateOfNextInspectionVisit?.ToString("dd/MM/yyyy"))</dd>
            }


        </dl>
    
    </div>

    @if (Model.UserCanEdit)
    {
        @Html.ActionLink("Edit", "EditDetails", "Establishment", new { id = Model.Establishment.Urn }, new { @class = "button button-grey mobile-full-width" })
    }
</div>
