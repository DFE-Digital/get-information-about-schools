@model GlossaryViewModel
@{
    ViewBag.Title = "GIAS: Glossary";
}

<div class="breadcrumbs">
    <ul>
        <li>
            @Html.ActionLink("Home", "Index", "Search", new { area = "" }, null)
        </li>
    </ul>
</div>

<div class="grid-row">
    <div class="column-two-thirds">
        <h1 class="heading-xlarge">Glossary</h1>
        <p>The sections below give explanations for terms commonly used on this site. Select the ﬁrst letter of the term you're searching for.</p>
    </div>
</div>


<div class="grid-row">
    <div class="column-full">
        @if (Model.UserCanEdit)
             {
                 @Html.RouteLink("New Entry", "CreateGlossaryItem",null,  new {@class ="plus-link"})
             }
        
        <ul class="chevron-accordion">
            <li class="controls">
                <button href="#" class="button-as-link open-all-panels">Open all</button>
                <button href="#" class="button-as-link close-all-panels">Close all</button>
            </li>
            @foreach (var group in Model.Items)
            {
                <li class="expander-panel">
                    <a class="panel-trigger" href="#target-@group.Key" aria-expanded="false" aria-controls="target-@group.Key">@group.Key</a>
                    <div class="expander-panel-content" id="target-@group.Key">
                        @foreach (var item in group)
                        {
                            <h2 class="heading-small">@item.Title</h2>
                            <p>@Html.Raw(item.Content)</p>
                            if (Model.UserCanEdit)
                            {
                                @Html.RouteLink("Edit", "EditGlossaryItem", new { id = item.RowKey }, new { @class = "button button-grey glossary-edit-button" })
                            }
                        }
                    </div>                    
                </li>
            }
            <li class="controls">
                <button href="#" class="button-as-link open-all-panels">Open all</button>
                <button href="#" class="button-as-link close-all-panels">Close all</button>
            </li>
                
        </ul>
    </div>
</div>


@section ViewScripts
{
    <script>
        (function() {
            var panels = document.querySelectorAll('.expander-panel');
            var openAll = document.querySelectorAll('.open-all-panels');
            var closeAll = document.querySelectorAll('.close-all-panels');

            function removeClass(el, className) {
                if (el.classList) {
                    el.classList.remove(className);
                } else {
                    el.className = el.className.replace(new RegExp('(^|\\b)' + className.split(' ').join('|') + '(\\b|$)', 'gi'), ' ');
                }
            }

            function addClass(el, className) {
                if (el.classList) {
                    el.classList.add(className);
                } else {
                    el.className += ' ' + className;
                }
            }

            
            function hasClass(el, className) {
                if (el.classList) {
                   return el.classList.contains(className);
                } else {
                    return new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className);
                }
            }

            [].forEach.call(panels,
                function(el) {
                    var trigger = el.querySelectorAll('.panel-trigger')[0];

                    trigger.addEventListener('click',
                        function(e) {
                            e.preventDefault();
                            if (hasClass(el, 'open-expander')) {
                                removeClass(el, 'open-expander');
                                trigger.setAttribute('aria-expanded', false);
                            } else {
                                addClass(el, 'open-expander');
                                trigger.setAttribute('aria-expanded', true);
                            }
                        });
                });

            [].forEach.call(openAll,
                function(el) {
                    el.addEventListener('click',
                        function(e) {
                            e.preventDefault();
                            [].forEach.call(panels,
                                function (panel) {
                                    addClass(panel, 'open-expander');
                                    panel.querySelectorAll('.panel-trigger')[0].setAttribute('aria-expanded', true);
                                });

                        });
                });

            [].forEach.call(closeAll,
                function(el) {
                    el.addEventListener('click',
                        function(e) {
                            e.preventDefault();
                            [].forEach.call(panels,
                                function (panel) {
                                    removeClass(panel, 'open-expander');
                                    panel.querySelectorAll('.panel-trigger')[0].setAttribute('aria-expanded', false);
                                });

                        });
                });

        }());
    </script>
}
