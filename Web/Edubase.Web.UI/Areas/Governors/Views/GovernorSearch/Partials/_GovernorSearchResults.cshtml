@using Edubase.Common;
@using Edubase.Services.Enums
@using Edubase.Web.UI.Models.Search
@model GovernorSearchViewModel
@{
    var startResult = @Model.StartIndex + 1;
    var endResult = (@Model.StartIndex + @Model.PageSize > @Model.Count) ? @Model.Count : @Model.StartIndex + @Model.PageSize;
}

@if (Model.Error != null)
{
    <div class="govuk-grid-column-two-thirds">
        <h2 class="govuk-heading-m">Error</h2>

        <p>@Model.Error</p>
    </div>
}
else if (Model.Count > 0)
{
    if (Model.PageCount > 1)
    {

    }
    <div class="govenors-results">
        <div class="top-pagination">
            @Html.Partial("_GenericPagination", Model, new ViewDataDictionary
            {
                {"resultsDescription", String.Concat("Showing ", startResult, "-", @endResult, " of ", @Model.Count, " governors")},
                {"maxPages", 5 }
            })
        </div>
        <ul class="school-results-listing" id="governors-search-results">
            @foreach (var result in Model.Results)
            {
            <li class="gias-result-tile">
                <h3 class="govuk-heading-s govuk-!-margin-bottom-1">@result.GetFullName() &ndash; @(Model.GovernorRoles.FirstOrDefault(x => x.Id == result.RoleId)?.Name)</h3>
                <dl>
                    @if (result.EstablishmentUrn.HasValue)
                    {
                        <dt><abbr class="unique-id-label" title="Unique Reference Number">URN</abbr>:</dt>
                        <dd class="unique-id-value">@Html.ActionLink(result.EstablishmentUrn.ToString(), "Details", "Establishment", new { id = result.EstablishmentUrn, area = "Establishments", searchQueryString = Model.SearchQueryString, searchSource = eLookupSearchSource.Governors }, null)</dd>
                        <dt class="attached-entity-label">Establishment:</dt>
                        <dd class="attached-entity-value">@Html.ActionLink(result.EstablishmentName ?? "--", "Details", "Establishment", new {id = result.EstablishmentUrn, area = "Establishments", searchQueryString = Model.SearchQueryString, searchSource = eLookupSearchSource.Governors}, null)</dd>
                    }
                    else
                    {
                        <dt><abbr class="unique-id-label" title="Unique Identifier">UID</abbr>:</dt>
                        <dd class="unique-id-value">@Html.ActionLink(result.GroupUId.ToString(), "Details", "Group", new {id = result.GroupUId, area = "groups", searchQueryString = Model.SearchQueryString, searchSource = eLookupSearchSource.Governors}, null)</dd>
                        <dt class="attached-entity-label">Group:</dt>
                        <dd class="attached-entity-value">@Html.ActionLink(result.GroupName ?? "--", "Details", "Group", new {id = result.GroupUId, area = "groups", searchQueryString = Model.SearchQueryString, searchSource = eLookupSearchSource.Governors}, null)</dd>
                    }

                </dl>
            </li>
            }
        </ul>
    </div>


    <div class="lower-pagination">
        @Html.Partial("_GenericPagination", Model, new ViewDataDictionary
        {
            {"resultsDescription", String.Concat("Showing ", startResult, "-", @endResult, " of ", @Model.Count, " governors")},
            {"maxPages", 5 }
        })
    </div>
    @helpers.BackToTopLink()
}
else
{
    <p>There are no results for your search. Please change the filters to adjust your search, or go @Html.ActionLink("back to the search page", "Index", "Search", new { area = "", SelectedTab = SearchViewModel.Tab.Governors }, null) to start again.</p>
}
