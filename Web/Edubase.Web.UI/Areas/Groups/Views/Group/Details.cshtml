@using Edubase.Common
@using Edubase.Services.Domain
@using Edubase.Services.Enums
@using Edubase.Web.UI.Models.Search
@using Microsoft.Ajax.Utilities
@using System.Text.RegularExpressions
@using Edubase.Services.Security

@model GroupDetailViewModel
@{
    ViewBag.Title = Model.Group.Name;
    ViewBag.PageClass = "mat-details school-details";

    var request = HttpContext.Current.Request;
    var sortDir = "desc";
    var sortDirText = "a descending order";
    var sortField = "requestedDateUtc";
    var RE = new Regex(@"^\d{1,2}\/\d{1,2}\/\d{2,4}$");


    if (request.QueryString["sortby"] != null)
    {
        sortField = request.QueryString["sortby"].Substring(0, request.QueryString["sortby"].IndexOf("-"));
        sortDir = (request.QueryString["sortby"] ?? "").Contains("asc") ? "asc" : "desc";
        sortDirText = (request.QueryString["sortby"] ?? "").Contains("asc") ? "an ascending order" : "a descending order";
    }

    var sortedDescription = " is sorted in " + sortDirText + ". Click to change order. All other columns are sortable.";
    var unsortedDescription = ". Click to sort data by this column.";

    var tableColumns = new List<Tuple<string, string>>
{
        Tuple.Create("requestedDateUtc", "Date changed"),
        Tuple.Create("requestType", "Request type"),
        Tuple.Create("changes", "Changes"),
        Tuple.Create("originatorUserName", "Suggested by"),
    };

}

@section BreadCrumbs {
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-breadcrumbs">
                <ol class="govuk-breadcrumbs__list">
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Search", "Index", "Search", new { area = "", SelectedTab = SearchViewModel.Tab.Groups }, new { @class = "govuk-breadcrumbs__link" })</li>
                    @if (!Model.SearchQueryString.IsNullOrWhiteSpace())
                    {
                        if (Model.SearchSource == eLookupSearchSource.Governors)
                        {
                            <li class="govuk-breadcrumbs__list-item">
                                <a class="govuk-breadcrumbs__link" href=@($"{Url.Action("Index", "GovernorSearch", new {area = "Governors"})}?{Model.SearchQueryString}")>Governors</a>
                            </li>
                        }
                        else
                        {
                            <li class="govuk-breadcrumbs__list-item">
                                <a class="govuk-breadcrumbs__link" href=@($"{Url.Action("Index", "GroupSearch", new {area = "Groups"})}?{Model.SearchQueryString}")>Establishment groups</a>
                            </li>
                        }
                    }

                </ol>
            </div>
        </div>
    </div>
}


@if (ViewBag.ShowSaved)
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="pending-updates-message js-dismiss-message js-trigger-aria-live" role="alert">
                <div class="tick"></div>
                <p class="message-text" aria-live="polite">Your changes have been saved</p>
                <a class="cross" href="#">
                    <span class="govuk-visually-hidden">Dismiss notification</span>
                </a>
            </div>
        </div>
    </div>
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <h1 class="govuk-heading-l gias-landing-heading">
            <span class="heading-preamble">Establishment group</span>
            @Model.Group.Name
        </h1>

        <p class="urn establishment-fine-detail"><abbr title="Unique Identifier">UID</abbr>: @Model.Group.GroupUId</p>
        <p class="group-type establishment-fine-detail">@Model.GroupTypeName</p>

        <p class="govuk-body-s establishment-data-download">
            @Html.RouteLink("Download group data", "GroupDataDownload", new { uid = Model.Group.GroupUId,
            state = UriHelper.SerializeToUrlToken(RouteDto.Create(
                new RouteDto("Search", new RouteValueDictionary(new { SelectedTab = SearchViewModel.Tab.Groups.ToString() }), "Search"),
                new RouteDto("GroupDetails", new RouteValueDictionary(new { id = Model.Group.GroupUId }), Model.Group.Name)
            ))}, new { rel = "nofollow" })
        </p>

        @if (Model.IsClosed)
        {
            if (Model.IsClosedInError)
            {
                <div class="gias-establishment-closed-message">
                    <p>
                        This @Model.GroupTypeNameForClosureLabel was created in error and subsequently closed on @(Model.CloseDate?.ToString("d MMMM yyyy")).
                    </p>
                </div>
            }
            else
            {
                <div class="gias-establishment-closed-message">
                    <p>
                        This @Model.GroupTypeNameForClosureLabel closed on @(Model.CloseDate?.ToString("d MMMM yyyy")).
                    </p>
                </div>
            }
        }
    </div>
</div>


@{Html.RenderPartial(@"Partials\GroupConfirmationNotifications");}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <div class="gias-tabs-wrapper">
            <div class="tab-wrap">
                <ul class="gias-tabs">
                    <li class="gias-tabs__list-item">
                        <a href="#details" class="gias-tabs__tab ">Details</a>
                    </li>
                    <li class="gias-tabs__list-item">
                        <a href="#list" class="gias-tabs__tab ">@Model.EstablishmentsPluralName (@Model.Establishments.Count)</a>
                    </li>

                    @if (Model.Group.GroupTypeId == (int)eLookupGroupType.MultiacademyTrust)
                    {
                        <li class="gias-tabs__list-item">
                            <a href="#governance" class="gias-tabs__tab ">Governance</a>
                        </li>
                    }

                    @if (Model.IsUserLoggedOn)
                    {
                        <li class="gias-tabs__list-item">
                            <a href="#change-history" class="gias-tabs__tab ">Changes</a>
                        </li>
                    }

                </ul>
            </div>
            <div class="tab-content-wrapper gias-tabs-content">
                <div id="details" class="tab-content">

                    @if (Model.CanUserEdit)
                    {
                        @Html.ActionLink("Edit details", "EditDetails", "Group", new { id = Model.Group.GroupUId, area = "Groups" }, new { @class = "govuk-button govuk-button--secondary" })
                    }
                    <div class="detail-summary">
                        @* <dl class="gias-summary-list gias-summary-list--70 @Html.Conditional(Model.Group.GroupTypeId.OneOfThese(eLookupGroupType.SchoolSponsor, eLookupGroupType.Federation, eLookupGroupType.Trust), "gias-summary-list--40")"> *@
                        <dl class="govuk-summary-list">
                            @if (Model.Group.GroupTypeId.OneOfThese(eLookupGroupType.ChildrensCentresGroup))
                            {
                                Html.RenderPartial(@"Partials\Details\_ChildrensCentresGroupDetails");
                            }
                            else
                            {
                                Html.RenderPartial(@"Partials\Details\_GenericGroupDetails");
                            }
                            @if (Model.GroupTypeId.OneOfThese(eLookupGroupType.MultiacademyTrust, eLookupGroupType.SingleacademyTrust, eLookupGroupType.SchoolSponsor, eLookupGroupType.Federation))
                            {
                                @OtherServicesLinks()
                            }


                        </dl>
                        </div>

                        @if (Model.CanUserEdit)
                        {
                            <div class="govuk-!-padding-top-4">
                                @Html.ActionLink("Edit details", "EditDetails", "Group", new { id = Model.Group.GroupUId, area = "Groups" }, new { @class = "govuk-button govuk-button--secondary" })
                            </div>

                        }

                    </div>

                    <div id="list" class="tab-content">

                        @if (Model.CanUserEdit)
                        {
                            <div class="govuk-grid-row">
                                <div class="govuk-grid-column-full">
                                    @Html.ActionLink($"Edit {Model.EstablishmentsPluralName.ToLower()}", "EditLinks", "Group", new { id = Model.Group.GroupUId, area = "Groups" }, new { @class = "govuk-button govuk-button--secondary" })
                                </div>
                            </div>
                        }
                        <div class="govuk-grid-row">
                            <div class="govuk-grid-column-full">
                                @if (Model.Establishments.Count > 0)
                                {
                                    <div class="landing-page-map-container">
                                        <a href="#map" id="map-toggle" class="map-toggle" role="button">Show map</a>
                                        <div id="group-map" class="school-detail-map"></div>

                                    </div>
                                }
                                <script type="text/javascript" nonce="@Html.ScriptNonce()">
                            var establishmentsList = @Html.Json(Model.Establishments);
                                </script>
                                <div class="group-establishment-list">
                                    <ul class="school-results-listing">
                                        @foreach (var result in Model.Establishments)
                                        {
                                            <li>
                                                <h2 class="govuk-heading-s">
                                                    @Html.ActionLink(result.Name, "Details", "Establishment", new { id = result.Urn, area = "Establishments" }, null)
                                                    @if (result.CCIsLeadCentre)
                                                    {
                                                        <text>(Lead centre)</text>
                                                    }
                                                </h2>

                                                <dl class="govuk-summary-list">
                                                    <div class="govuk-summary-list__row">
                                                    <dt class="govuk-summary-list__key">Address</dt>
                                                    <dd class="govuk-summary-list__value">@result.Address</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">Phase / type</dt>
                                        <dd class="govuk-summary-list__value">
                                            @(result.PhaseName ?? "Not recorded"),
                                            @(result.TypeName ?? "Not recorded")
                                        </dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key"><abbr title="Unique Reference Number">URN</abbr></dt>
                                        <dd class="govuk-summary-list__value">@result.Urn</dd>
                                    </div>

                                    @if (result.UKPRN.HasValue)
                                    {
                                        <div class="govuk-summary-list__row">
                                            <dt class="govuk-summary-list__key"><abbr title="UK provider reference number (UKPRN)">UKPRN</abbr></dt>
                                            <dd class="govuk-summary-list__value">@result.UKPRN</dd>
                                        </div>
                                    }

                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">
                                            <abbr title="Local authority - Establishment number">LAESTAB</abbr>
                                        </dt>
                                        <dd class="govuk-summary-list__value">@(result.LAESTAB ?? "Not recorded")</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">Status</dt>
                                        <dd class="govuk-summary-list__value">@(result.StatusName ?? "Not recorded")</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">Local authority name</dt>
                                        <dd class="govuk-summary-list__value">@(result.LocalAuthorityName ?? "Not recorded")</dd>
                                    </div>
                                    <div class="govuk-summary-list__row">
                                        <dt class="govuk-summary-list__key">Joined date</dt>
                                        <dd class="govuk-summary-list__value">@(result.JoinedDate?.ToString("d MMMM yyyy") ?? "Not recorded")</dd>
                                    </div>
                                    </dl>

                                    </li>
                                }
                                        </ul>
                                    </div>
                                </div>
                            </div>

                            @if (Model.CanUserEdit && Model.Establishments.Count > 0)
                            {
                                <div class="govuk-grid-row">
                                    <div class="govuk-grid-column-full">
                                        @Html.ActionLink($"Edit {Model.EstablishmentsPluralName.ToLower()}", "EditLinks", "Group", new { id = Model.Group.GroupUId, area = "Groups" }, new { @class = "govuk-button govuk-button--secondary lower" })
                                    </div>
                                </div>
                            }

                        </div>

                        @if (Model.Group.GroupTypeId == (int)eLookupGroupType.MultiacademyTrust)
                        {
                            <div id="governance" class="tab-content">

                                @if (Model.CanUserEditGovernance)
                                {
                                    <div class="govuk-grid-row">
                                        <div class="govuk-grid-column-full">
                                            @Html.ActionLink("Edit governance", "Edit", "Governor", new { groupUId = Model.Group.GroupUId, area = "Governors" }, new { @class = "govuk-button govuk-button--secondary" })
                                        </div>
                                    </div>
                                }

                                @{Html.RenderAction("View", "Governor", new { groupUId = Model.Group.GroupUId, viewModel = null as Edubase.Web.UI.Areas.Governors.Models.GovernorsGridViewModel, area = "Governors" });}

                                @if (Model.CanUserEditGovernance)
                                {
                                    <div class="govuk-grid-row">
                                        <div class="govuk-grid-column-full">
                                            @Html.ActionLink("Edit governance", "Edit", "Governor", new { groupUId = Model.Group.GroupUId, area = "Governors" }, new { @class = "govuk-button govuk-button--secondary" })
                                        </div>
                                    </div>
                                }

                                @helpers.BackToTopLink()
                            </div>
                        }

                        @if (Model.IsUserLoggedOn)
                        {
                            <div id="change-history" class="tab-content">
                                <h2 class="govuk-heading-s">Change History</h2>
                                @if (Model.Group.GroupTypeId == (int)eLookupGroupType.MultiacademyTrust && Model.GovernorPermissions.Add)
                                {
                                    <div class="gias-governance-history-link-container">
                                        <p>
                                            @Html.RouteLink("View governance change history", "GroupDetailGovChangeHistory", new { id = Model.Group.GroupUId })
                                        </p>
                                    </div>
                                }
                                @if (!Model.ChangeHistory.Items.Any())
                                {
                                    <p class="govuk-body">There are no change records available at the moment</p>
                                }
                                else
                                {
                                    <p class="govuk-body">
                                        @Html.ActionLink("Download data in CSV format", "DownloadChangeHistory", "Downloads", new { groupId = Model.Group.GroupUId, area = "", downloadType = DownloadType.csv }, null)
                                    </p>
                                    <p class="govuk-body">
                                        @Html.ActionLink("Download data in XLSX format", "DownloadChangeHistory", "Downloads", new { groupId = Model.Group.GroupUId, area = "", downloadType = DownloadType.xlsx }, null)
                                    </p>

                                    if (Model.ChangeHistory.PageCount > 1)
                                    {
                                        <div class="top-pagination">
                                            @Html.Partial("_GenericPaginationV2", Model.ChangeHistory)
                                        </div>
                                    }

                                    <table class="approval-changes gias-table govuk-table sortable-table">
                                        <caption class="govuk-visually-hidden">Change history</caption>
                                        <thead class="govuk-table__head">
                                            <tr class="govuk-table__row">
                                                @foreach (var tableColumn in tableColumns)
                                                {
                                                    <th scope="col" class="govuk-table__header">
                                                        <a href="@Url.SortUrl(tableColumn.Item1, "#change-history")"
                                                           class="@Html.Conditional(sortField == tableColumn.Item1, "selected-sort") @Html.Conditional(sortDir.Contains("asc"), "sorted-asc") @Html.Conditional(sortDir.Contains("desc"), "sorted-desc")"
                                                           aria-label="@string.Concat(tableColumn.Item2, (sortField == tableColumn.Item1 ? sortedDescription : unsortedDescription))">
                                                            @tableColumn.Item2
                                                        </a>
                                                    </th>
                                                }
                                            </tr>
                                        </thead>
                                        <tbody class="govuk-table__body">
                                            @foreach (var item in Model.ChangeHistory.Items.Where(x => x.RequestType != GroupChangeRequestType.NewGroupLink))
                                            {
                                                <tr class="govuk-table__row">
                                                    <td data-label="Date changed" class="govuk-table__cell">
                                                        @(item.RequestedDateUtc?.ToString("d MMMM yyyy"))
                                                    </td>
                                                    <td data-label="Request type" class="govuk-table__cell">
                                                        @item.RequestType.GetEnumMember()
                                                    </td>
                                                    <td data-label="Changes" class="govuk-table__cell gias-table__mobile-block-label">
                                                        <dl class="gias-summary-list">
                                                            @if (item.RequestType == GroupChangeRequestType.GroupChange)
                                                            {
                                                                <div class="gias-summary-list__row">
                                                                <dt class="gias-summary-list__key">Field</dt>
                                                                <dd class="gias-summary-list__value">@item.Name</dd>
                                        </div>
                                        <div class="gias-summary-list__row">
                                            <dt class="gias-summary-list__key">Old value</dt>
                                            <dd class="gias-summary-list__value">
                                                @if (item.OldValue != null && RE.IsMatch(item.OldValue))
                                                {
                                                    var parts = item.OldValue.Split('/').Select(Int32.Parse).ToList();
                                                    var dt = new DateTime(parts[2], parts[1], parts[0]);
                                                    @dt.ToString("d MMMM yyyy");
                                                }
                                                else
                                                {
                                                    @item.OldValue
                                                }
                                            </dd>
                                        </div>
                                        <div class="gias-summary-list__row">
                                            <dt class="gias-summary-list__key">New value</dt>
                                            <dd class="gias-summary-list__value">
                                                @if (item.NewValue != null && RE.IsMatch(item.NewValue))
                                                {
                                                    var parts = item.NewValue.Split('/').Select(Int32.Parse).ToList();
                                                    var dt = new DateTime(parts[2], parts[1], parts[0]);
                                                    @dt.ToString("d MMMM yyyy");
                                                }
                                                else
                                                {
                                                    @item.NewValue
                                                }
                                            </dd>
                                        </div>
                                    }
                                    else if (item.RequestType != GroupChangeRequestType.NewGroup)
                                    {
                                        <div class="gias-summary-list__row">
                                            <dt class="gias-summary-list__key">Establishment</dt>
                                            <dd class="gias-summary-list__value">@item.LinkUrn @item.LinkEstablishmentName</dd>
                                        </div>
                                        <div class="gias-summary-list__row">
                                            <dt class="gias-summary-list__key">Link date</dt>
                                            <dd class="gias-summary-list__value">@(item.LinkDateUtc?.ToString("d MMMM yyyy"))</dd>
                                        </div>
                                        <div class="gias-summary-list__row">
                                            <dt class="gias-summary-list__key">Type</dt>
                                            <dd class="gias-summary-list__value">@(item.LinkType?.ToString() ?? "Not recorded")</dd>
                                        </div>
                                    }
                                                            </dl>
                                                            </td>
                                                            <td data-label="Suggested by" class="govuk-table__cell">
                                                                @item.OriginatorUserName
                                                            </td>
                                                            </tr>
                                                        }
                                            </tbody>
                                            </table>

                                            if (Model.ChangeHistory.PageCount > 1)
                                            {
                                                <div class="lower-pagination push--bottom">
                                                    @Html.Partial("_GenericPaginationV2", Model.ChangeHistory)
                                                </div>
                                                @helpers.BackToTopLink()
                                            }
                                        }
                            </div>
                        }
                    </div>
                    </div>
                    </div>
                    </div>


                    @helper OtherServicesLinks()
                    {
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Data from other services</dt>
                            <dd class="govuk-summary-list__value">
                                <ul class="govuk-list">
                                    @if (!Model.ShowCscp && !Model.ShowFinancialBenchmarking)
                                    {
                                        <li>
                                            Not applicable
                                        </li>
                                    }
                                    @if (Model.ShowCscp)
                                    {
                                        <li>
                                            <a href="@Model.CscpURL" rel="noreferrer noopener" target="_blank">
                                                Compare school and college performance (opens in new tab)
                                            </a>
                                        </li>
                                    }
                                    @if (Model.ShowFinancialBenchmarking)
                                    {
                                        <li>
                                            <a href="@Model.FinancialBenchmarkingURL" rel="noreferrer noopener" target="_blank">
                                                Schools financial benchmarking (opens in new tab)
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </dd>
                        </div>
                    }

                    @section ViewScripts
{
                        <script nonce="@Html.ScriptNonce()">var mapMode = 'group';</script>
                        <script src="@Html.Raw(Html.GetWebpackScriptUrl("landing-page-bundle.*.js"))"></script>
                    }

