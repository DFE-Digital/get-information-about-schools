@using Edubase.Common;
@using Edubase.Common.Text
@using Edubase.Services.Domain
@using VM = Edubase.Web.UI.Areas.Groups.Models.CreateEdit.GroupEditorViewModel;
@using L = Edubase.Services.Enums.eLookupGroupType;
@model VM
@{
    ViewBag.bodyClasses = "create-edit-school";
    ViewBag.hideLogo = true;
    ViewBag.Title = string.Concat(!ViewData.ModelState.IsValid ? "Error: " : string.Empty, Model.PageTitle);
}

<div class="breadcrumbs">
    <ol>
        <li>@Html.ActionLink("Home", "Index", "Search", new { area = "" }, null)</li>
        <li>@Html.ActionLink("Tools", "Index", "Tools", new { area = "" }, null)</li>
    </ol>
</div>

@Html.Partial("_ValidationSummary", ViewData.ModelState)

<h1 class="heading-xlarge">@Model.PageTitle</h1>

@using (Html.BeginForm("Create", "Group", new { area = "Groups", type = Model.GroupTypeMode }, FormMethod.Post))
{
    @Html.HiddenFor(x => x.GroupUId)
    @Html.HiddenFor(x => x.GroupTypeMode)
    @Html.HiddenFor(x => x.SaveMode)
    @Html.HiddenFor(x => x.ProcessedWarnings)

    <div class="grid-row">
        <div class="column-two-thirds">
            Use this tool to create a new @Model.EntityName
        </div>

        <div class="column-half">
            <h2 class="heading-medium">@Model.EntityName.ToSentenceCase() details</h2>
            <div class="form-group @Html.ValidationCssClassFor(x=>x.GroupName)">
                <label for="GroupName" class="form-label">@Model.FieldNamePrefix name</label>
                @Html.ValidationMessageFor(x => x.GroupName)
                @Html.TextBoxFor(x => x.GroupName, new { @class = "form-control" })
            </div>
            @Html.HiddenFor(x => x.GroupTypeId)
            @Html.EditorFor(x => x.OpenDate, new { title = Model.OpenDateLabel })

            @if (Model.GroupUId.HasValue)
            {
                <div class="form-group">
                    <label class="form-label">
                        <abbr title="Unique Identifier">UID</abbr>
                    </label>
                    <input value="@Model.GroupUId" disabled="disabled" class="form-control" />
                </div>
            }

            @if (Model.GroupType.Equals(L.SchoolSponsor))
            {
                <div class="form-group  @Html.ValidationCssClassFor(x=>x.GroupId)">
                    <label for="GroupId" class="form-label">Group ID</label>
                    @Html.ValidationMessageFor(x => x.GroupId)
                    @Html.TextBoxFor(x => x.GroupId, new { @class = "form-control", maxlength = 120 })
                </div>
            }
        </div>
    </div>

    <div class="grid-row">
        <div class="column-full submit-cancel-panel">
            <button type="submit" name="action" class="button" id="create-submit" value="@VM.ActionSave">Create @Model.EntityName</button>
            @Html.ActionLink("Cancel", "Index", "Tools", new { area = "" }, new { @class = "button button-secondary cancel" })
        </div>
    </div>

    <div class="grid-row">
        <div class="column-full">
            @Html.Partial("Warnings")
        </div>
    </div>
}

@section ViewScripts
{
    <script nonce="@Html.ScriptNonce()">
        var $fields = $('#content').find('.form-control');
        var exitAttached = false;

        $fields.on('change', function () {
            if (!exitAttached) {
                DfE.Util.showUnload('Are you sure you want to leave this page? Any unsaved changes will be lost');
                exitAttached = true;
            }

        });
    </script>

    @if (Model.WarningsToProcess.Any(x => x.Code == ApiWarningCodes.GROUP_WITH_SIMILAR_NAME_FOUND))
    {
        <script nonce="@Html.ScriptNonce()">
            (function() {
                var mask = $('#warning-modal-overlay-0');
                var modal = $('#warning-modal-content-0');


                $('#warning-exit-overlay-0, #overlay-cancel-0').on('click',
                    function(e) {
                        e.preventDefault();
                        mask.addClass('hidden');
                        modal.addClass('hidden');
                    });

                $('#overlay-proceed-0').on('click',
                    function(e) {
                        $('#create-submit').click();
                    });
            }());

            $(document).ready(function() {
                // Focus on main CTA when modal available
                if ($('#warning-modal-content-0').length > 0) {
                    $('#overlay-proceed-0').focus();
                }
            });
        </script>
    }
}
