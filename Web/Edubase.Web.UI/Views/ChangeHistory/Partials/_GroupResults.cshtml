@using System.Text.RegularExpressions
@using Edubase.Services.Enums
@model ChangeHistoryViewModel

@{
    var request = HttpContext.Current.Request;
    var sortDir = "desc";
    var sortDirText = "a descending order";
    var sortField = "requestedDateUtc";

    var RE = new Regex(@"^\d{1,2}\/\d{1,2}\/\d{2,4}$");

    if (request.QueryString["sortby"] != null)
    {
        var sortByQuery = (request.QueryString["sortby"] ?? "");

        sortField = sortByQuery.Contains("-") ? sortByQuery.Substring(0, sortByQuery.IndexOf("-")) : sortByQuery;
        sortDir = sortByQuery.Contains("asc") ? "asc" : "desc";
        sortDirText = sortByQuery.Contains("asc") ? "an ascending order" : "a descending order";
    }

    var sortedDescription = " is sorted in " + sortDirText + ". Click to change order. All other columns are sortable.";
    var unsortedDescription = ". Click to sort data by this column.";

    var tableColumns = new List<Tuple<string, string, bool>>
{
       Tuple.Create("requestedDateUtc", "Date changed", true),
       Tuple.Create("uid", "Group UID", false),
       Tuple.Create("groupName", "Group", false),
       Tuple.Create("requestType", "Request type", true),
       Tuple.Create("change", "Change", true),
       Tuple.Create("originatorUserName", "Suggested by", true),
   };
}

@if (Model.Items.Any())
{
    <div>
        @Html.Partial("_GenericPaginationV2", Model)
    </div>
    <table class="govuk-table gias-table sortable-table change-history-table" id="changes-table">
        <caption class="govuk-visually-hidden">Group change history search results</caption>
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
                @foreach (var tableColumn in tableColumns)
                {
                    if (tableColumn.Item3 || !Model.SingleGroup)
                    {
                        <th scope="col" class="govuk-table__header cell-@tableColumn.Item1.ToLower()">
                            <a href="@Url.SortUrl(tableColumn.Item1, "#change-history")"
                               class="@Html.Conditional(sortField == tableColumn.Item1, "selected-sort") @Html.Conditional(sortDir.Contains("asc"), "sorted-asc") @Html.Conditional(sortDir.Contains("desc"), "sorted-desc")"
                               aria-label="@string.Concat(tableColumn.Item2, (sortField == tableColumn.Item1 ? sortedDescription : unsortedDescription))">@tableColumn.Item2</a>
                        </th>
                    }
                }
            </tr>
        </thead>
        <tbody class="govuk-table__body">
            @foreach (var item in Model.Items)
            {
                <tr id="@item.GroupUId-@(item.RequestedDate?.ToString("dd-MMMM-yyyy"))" class="govuk-table__row">
                    <td data-label="Date changed" class="govuk-table__cell">@(item.RequestedDate?.ToString("d MMMM yyyy"))</td>
                    @if (!Model.SingleGroup)
                    {
                        <td data-label="Group UID" class="govuk-table__cell">@Html.RouteLink(item.GroupUId.ToString(), "GroupDetails", new { id = item.GroupUId })</td>
                        <td data-label="Group" class="govuk-table__cell">@Html.RouteLink(item.GroupName, "GroupDetails", new { id = item.GroupUId })</td>
                    }
                    <td data-label="Request type" class="govuk-table__cell">@item.RequestType</td>
                    <td data-label="Change" class="govuk-table__cell">
                        <dl class="gias-summary-list gias-summary-list--bold-keys">
                            @if (item.RequestType == GroupChangeRequestType.GroupChange)
                            {
                                <div class="gias-summary-list__row">
                                    <dt class="gias-summary-list__key">Field</dt>
                                    <dd class="gias-summary-list__value">@item.FieldName</dd>
                                </div>
                                <div class="gias-summary-list__row">

                                    <dt class="gias-summary-list__key">Old value</dt>
                                    <dd class="gias-summary-list__value">
                                        @if (item.OldValue != null && RE.IsMatch(item.OldValue))
                                        {
                                            var parts = item.OldValue.Split('/').Select(Int32.Parse).ToList();
                                            var dt = new DateTime(parts[2], parts[1], parts[0]);

                                            @dt.ToString("d MMMM yyyy");
                                        }
                                        else
                                        {
                                            @item.OldValue
                                        }
                                    </dd>
                                </div>
                                <div class="gias-summary-list__row">
                                    <dt class="gias-summary-list__key">New value</dt>
                                    <dd class="gias-summary-list__value">
                                        @if (item.NewValue != null && RE.IsMatch(item.NewValue))
                                        {
                                            var parts = item.NewValue.Split('/').Select(Int32.Parse).ToList();
                                            var dt = new DateTime(parts[2], parts[1], parts[0]);

                                            @dt.ToString("d MMMM yyyy");
                                        }
                                        else
                                        {
                                            @item.NewValue
                                        }
                                    </dd>
                                </div>
                            }
                            else
                            {
                                <div class="gias-summary-list__row">
                                    <dt class="gias-summary-list__key">Establishment</dt>
                                    <dd class="gias-summary-list__value">@item.LinkUrn @item.LinkEstablishmentName</dd>
                                </div>
                                <div class="gias-summary-list__row">
                                    <dt class="gias-summary-list__key">Link date</dt>
                                    <dd class="gias-summary-list__value">@(item.LinkDateUtc?.ToString("d MMMM yyyy"))</dd>
                                </div>
                                <div class="gias-summary-list__row">
                                    <dt class="gias-summary-list__key">Type</dt>
                                    <dd class="gias-summary-list__value">@(item.LinkType?.ToString() ?? "not recorded")</dd>
                                </div>
                            }

                        </dl>
                    </td>
                    <td data-label="Suggested by" class="govuk-table__cell">@item.SuggesterName</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="lower-pagination push--bottom">
        @Html.Partial("_GenericPaginationV2", Model)
    </div>
    @helpers.BackToTopLink()
}
else
{
    <p>There are no results for your search. Please change the filters to adjust your search, or go @Html.ActionLink("back to the search page", "Index", "ChangeHistory", new { area = "", SelectedTab = SearchViewModel.Tab.Groups }, null) to start again.</p>
}
