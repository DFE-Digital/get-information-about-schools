@using Edubase.Web.UI.Helpers
@using Edubase.Web.UI.Models
@using Edubase.Common
@model EstablishmentDetailViewModel
@{
    ViewBag.Title = Model.Establishment.Name;
    ViewBag.PageClass = "school-details";
    ViewBag.HideLogo = true;
}

@if (Model.ShowPendingMessage)
{
    <div class="pending-updates-message dismissable-message">
        <div class="tick"></div>
        Updates require approval. The Data Owner has been notified.
        <a class="cross" href="#"><span class="visually-hidden">Dismiss notification</span></a>
    </div>
}
else if (Model.UserHasPendingApprovals)
{
    <div class="pending-updates-message dismissable-message">
        <div class="exclaim"></div>
        You have pending approvals awaiting for this school. @Html.ActionLink("Approve now.", "Index", "Approval", new { urn = Model.Establishment.Urn }, null)
        <a class="cross" href="#"><span class="visually-hidden">Dismiss notification</span></a>
    </div>
}


<div class="pending-updates">
    <div class="icon">!</div>
    <h3>Data update@(Model.PendingChanges.Count > 1 ? "s" : "") pending Data Owner approval</h3>
    @foreach (var item in Model.PendingChanges)
    {
        <div class="group">
            <div>Data field: @item.DataField</div>
            <div>Old: @(item.OldValue.Clean() ?? "(nothing)")</div>
            <div>New: @(item.NewValue.Clean() ?? "(nothing)")</div>
        </div>
    }
</div>







@if (Model.PendingChanges.Any())
{
    <div class="pending-updates">
        <div class="icon" style="height:24px;">!</div>
        <h3>Data update@(Model.PendingChanges.Count > 1 ? "s" : "") pending Data Owner approval</h3>
        @foreach (var item in Model.PendingChanges)
        {
            <div class="group">
                <div>Data field: @item.DataField</div>
                <div>Old: @(item.OldValue.Clean() ?? "(nothing)")</div>
                <div>New: @(item.NewValue.Clean() ?? "(nothing)")</div>
            </div>
        }
    </div>
}

<h1 class="heading-large">@Html.PendingUpdateFor(x => x.Name) @Model.Establishment.Name</h1>
@if (Model.UserCanEdit)
{
    @Html.ActionLink("Edit", "Edit", "Establishment", new { id = Model.Establishment.Urn }, new { @class = "button mobile-full-width" })
}

<div class="column-full">
    <div class="grid-row summary">
        
        @{Html.RenderPartial(@"Partials\Header");}
        <div class="map-container">
            <a href="#map" id="map-toggle" class="expanding-content-trigger map-toggle">Show map</a>
            <div id="map" class="school-detail-map"
                 data-latlng="[@(Model.Establishment.Location?.Longitude),@(Model.Establishment.Location?.Latitude)]"
                 data-school-name="@Model.Establishment.Name"
                 data-school-address="@Model.Establishment.Address"></div>
        </div>
    </div>

    <div class="grid-row horizontal-tabs-wrapper">
        <div class="tab-wrap">
            <ul class="horizontal-tabs">
                @if (Model.TabDisplayPolicy.Details)
                {
                    <li><a href="#school-dashboard" class="horizontal-tab">Details</a></li>
                }
                
                @if (Model.TabDisplayPolicy.Governance)
                {
                    <li><a href="#school-governance" class="horizontal-tab">Governance</a></li>
                }

                @if (Model.TabDisplayPolicy.Links)
                {
                    <li><a href="#school-links" class="horizontal-tab">Links</a></li>
                }

                @if (Model.DisplayPolicy.LocationDetails && Model.TabDisplayPolicy.Location)
                {
                    <li><a href="#school-location" class="horizontal-tab">Location</a></li>
                }
                
                @if (Model.ChangeHistory != null && Model.TabDisplayPolicy.ChangeHistory)
                {
                    <li><a href="#school-change-history" class="horizontal-tab">Changes</a></li>
                }
            </ul>
        </div>
        <div class="tab-content-wrapper horizontal-tabs-content">
            @{ 
                if (Model.TabDisplayPolicy.Details)
                {
                    Html.RenderPartial(@"Partials\TabDetails");
                }

                if (Model.TabDisplayPolicy.Governance)
                {
                    Html.RenderPartial(@"Partials\TabGovernance");
                }

                if (Model.TabDisplayPolicy.Links)

                {
                    Html.RenderPartial(@"Partials\TabLinks");
                }

                if (Model.DisplayPolicy.LocationDetails && Model.TabDisplayPolicy.Location)
                {
                    Html.RenderPartial(@"Partials\TabLocation");
                }

                if (Model.ChangeHistory != null && Model.TabDisplayPolicy.ChangeHistory)
                {
                    Html.RenderPartial(@"Partials\TabChangeHistory");
                }
            }
        </div>
    </div>
</div>
