@model CreateChildrensCentreViewModel
@{
    ViewBag.Title = "Edubase: Create a new children's centre";
    ViewBag.bodyClasses = "create-establishment";
}

<div class="breadcrumbs">
    <ul>
        <li>
            @Html.ActionLink("Home", "Index", "Search", new { area = "" }, null)
        </li>
        <li>
            @Html.ActionLink("Tools", "Index", "Tools", new { area = "" }, null)
        </li>
    </ul>
</div>

<div id="create-establishment">
    <div class="grid-row">
        <div class="column-full">
            <h1 class="heading-intro">
                Create a children's centre
            </h1>

            @Html.ValidationSummary("Incorrect or missing details", new { @class = "error-summary" })
        </div>
        
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="column-half">
                <h2 class="heading-medium">New establishment</h2>

                <div class="form-group @Html.ValidationCssClassFor(x => x.Name)">
                    @Html.LabelFor(x => x.Name, "Establishment name (required to save record)")
                    @Html.ValidationMessageFor(x => x.Name)
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                </div>

                <div class="form-group @Html.ValidationCssClassFor(x => x.LocalAuthorityId)">
                    @Html.LabelFor(x => x.LocalAuthorityId, "Local authority (required to save record)", new { @class = "form-label" })
                    @Html.ValidationMessageFor(x => x.LocalAuthorityId)
                    @Html.DropDownListFor(x => x.LocalAuthorityId, Model.LocalAuthorities, "Please select", new { @class = "form-control" })
                </div>
                
                @Html.EditorFor(m => m.OpenDate, new { title = "Open date (required to save record)"})
                
                @Html.EditorFor(m => m.Address)
                
                <h2 class="heading-medium">Contact details</h2>
                <div class="form-group @Html.ValidationCssClassFor(x => x.ManagerFirstName)">
                    @Html.LabelFor(x => x.ManagerFirstName)
                    @Html.ValidationMessageFor(x => x.ManagerFirstName)
                    @Html.TextBoxFor(x => x.ManagerFirstName, new { @class = "form-control" })
                </div>
                
                <div class="form-group @Html.ValidationCssClassFor(x => x.ManagerLastName)">
                    @Html.LabelFor(x => x.ManagerLastName)
                    @Html.ValidationMessageFor(x => x.ManagerLastName)
                    @Html.TextBoxFor(x => x.ManagerLastName, new { @class = "form-control" })
                </div>
                
                <div class="form-group @Html.ValidationCssClassFor(x => x.ManagerEmail)">
                    @Html.LabelFor(x => x.ManagerEmail)
                    @Html.ValidationMessageFor(x => x.ManagerEmail)
                    @Html.TextBoxFor(x => x.ManagerEmail, new { @class = "form-control" })
                </div>
                
                <div class="form-group @Html.ValidationCssClassFor(x => x.Telephone)">
                    @Html.LabelFor(x => x.Telephone)
                    @Html.ValidationMessageFor(x => x.Telephone)
                    @Html.TextBoxFor(x => x.Telephone, new { @class = "form-control" })
                </div>
                
                <h2 class="heading-medium">Further details</h2>
                <div class="form-group @Html.ValidationCssClassFor(x => x.OperationalHoursId)">
                    @Html.LabelFor(x => x.OperationalHoursId, new { @class = "form-label" })
                    @Html.ValidationMessageFor(x => x.OperationalHoursId)
                    @Html.DropDownListFor(x => x.OperationalHoursId, Model.OperationalHoursOptions, "Please select", new { @class = "form-control" })
                </div>
                
                <div class="form-group @Html.ValidationCssClassFor(x => x.NumberOfUnderFives)">
                    @Html.LabelFor(x => x.NumberOfUnderFives)
                    @Html.ValidationMessageFor(x => x.NumberOfUnderFives)
                    @Html.TextBoxFor(x => x.NumberOfUnderFives, new { @class = "form-control" })
                </div>

                <div class="form-group @Html.ValidationCssClassFor(x => x.GovernanceId)">
                    @Html.LabelFor(x => x.GovernanceId, new { @class = "form-label" })
                    @Html.ValidationMessageFor(x => x.GovernanceId)
                    @Html.DropDownListFor(x => x.GovernanceId, Model.GovernanceOptions, "Please select", new { @class = "form-control" })
                </div>
                
                <div class="form-group @Html.ValidationCssClassFor(x => x.GovernanceDetail)">
                    @Html.LabelFor(x => x.GovernanceDetail)
                    @Html.ValidationMessageFor(x => x.GovernanceDetail)
                    @Html.TextBoxFor(x => x.GovernanceDetail, new { @class = "form-control" })
                </div>

                <div class="form-group @Html.ValidationCssClassFor(x => x.EducationPhaseId)">
                    @Html.LabelFor(x => x.EducationPhaseId, "Phase (required to save record)", new { @class = "form -label" })
                    @Html.ValidationMessageFor(x => x.EducationPhaseId)
                    @Html.DropDownListFor(x => x.EducationPhaseId, Model.EducationPhases, new { @class = "form-control", @disabled = "disabled" })
                </div>
                
                <div class="form-group @Html.ValidationCssClassFor(x => x.DisadvantagedAreaId)">
                    @Html.LabelFor(x => x.DisadvantagedAreaId, new { @class = "form-label" })
                    @Html.ValidationMessageFor(x => x.DisadvantagedAreaId)
                    @Html.DropDownListFor(x => x.DisadvantagedAreaId, Model.DisadvantagedAreaOptions, "Please select", new { @class = "form-control" })
                </div>
                
                <div class="form-group @Html.ValidationCssClassFor(x => x.DirectProvisionOfEarlyYears)">
                    @Html.LabelFor(x => x.DirectProvisionOfEarlyYears, new { @class = "form-label" })
                    @Html.ValidationMessageFor(x => x.DirectProvisionOfEarlyYears)
                    @Html.DropDownListFor(x => x.DirectProvisionOfEarlyYears, Model.DirectProvisionOfEarlyYearsOptions, "Please select", new { @class = "form-control" })
                </div>
                
                <div class="form-group @Html.ValidationCssClassFor(x => x.EstablishmentStatusId)">
                    @Html.LabelFor(x => x.EstablishmentStatusId, new { @class = "form-label" })
                    @Html.ValidationMessageFor(x => x.EstablishmentStatusId)
                    @Html.DropDownListFor(x => x.EstablishmentStatusId, Model.EstablishmentStatusOptions, "Please select", new { @class = "form-control" })
                </div>
            </div>

            <div class="column-full">
                <div class="submit-cancel-panel">
                    <button type="submit" name="action" value="" class="button mobile-full-width">Create</button>
                    @Html.ActionLink("Cancel", "Index", "Tools", new { }, new { @class = "button button-grey cancel mobile-full-width" })
                </div>
            </div>
        }
    </div>
</div>