@using Edubase.Web.UI.Models.Search
@using Edubase.Web.UI.Helpers
@using Edubase.Common
@using M = Edubase.Web.UI.Areas.Establishments.Models.Search.EstablishmentSearchViewModel;
@using P = Edubase.Services.Establishments.Search.EstablishmentSearchPayload;
@model M
@{
    ViewBag.Title = string.Format("Search results for '{0}'", Model.TextSearchModel.Text);
    ViewBag.PageClass = "search-results";
    ViewBag.HideLogo = true;
}

<div class="grid-row">
    <div class="column-full">
        <div class="breadcrumbs">
            @Html.ActionLink("« Back to find an establishment", "Index", "Search", new { area = "" }, new { @class = "home-link" })
        </div>

            <h1 class="heading-xlarge">Search results</h1>
            <p>
                <!-- TODO: Jon; you can upload the span.heading-xlarge item with the correct count by using the x-count item in the http response of the partial request -->
                @if (Model.SearchType == eSearchType.Text)
            {
                if (Model.TextSearchType == M.eTextSearchType.EstablishmentName
                    || Model.TextSearchType == M.eTextSearchType.Unknown)
                {
                        <text>
                            We found <span class="heading-xlarge count">@Model.Count</span> establishments
                            @if (!Model.TextSearchModel.Text.IsEmpty())
                            {
                                <text>for the search term "@Model.TextSearchModel.Text".</text>
                            }

                        </text>
                    }
                    else if (Model.TextSearchType == M.eTextSearchType.LAESTAB)
                    {
                        <text>We found <span class="heading-xlarge count">@Model.Count</span> establishments with the LAESTAB "@Model.TextSearchModel.Text".</text>
                    }
                    else if (Model.TextSearchType == M.eTextSearchType.UKPRN)
                    {
                        <text>We found <span class="heading-xlarge count">@Model.Count</span> establishments with the <abbr title="UK Provider Reference Number">UKPRN</abbr> "@Model.TextSearchModel.Text".</text>
                    }
                    else if (Model.TextSearchType == M.eTextSearchType.URN)
                    {
                        <text>We found <span class="heading-xlarge count">@Model.Count</span> establishments with the <abbr title="Unique Reference Number">URN</abbr> "@Model.TextSearchModel.Text".</text>
                    }
                }
                else if (Model.SearchType == eSearchType.ByLocalAuthority)
                {
                    <text>We found <span class="heading-xlarge count">@Model.Count</span> establishments in the selected local authorities</text>
                }
                else if (Model.SearchType == eSearchType.Location)
                {
                    <text>We found <span class="heading-xlarge count">@Model.Count</span> establishments in the selected location</text>
                }

                <!-- TODO: Jon, remember to ajaxify this, by replacing the querystring with whatever has been generated for the partial view GET request -->
                <a class="download-link" style="display: @(Html.Conditional(Model.Count == 0, "none"));" href="@Url.Action("PrepareDownload", "EstablishmentsSearch", new {area = "Establishments"})?@Url.CurrentQueryString()">Download these search results</a>
            </p>
        </div>
</div>


<div class="grid-row">

    <div class="column-third">
        <div class="filter-form">
            
            <div id="EditSearchCollapsible"
                 class="button-as-link js-collapsible selected mbl js-track"
                 data-track="search-results||edit-search"
                 aria-controls="EditSearchCollapse"
                 role="button">
                <a class="help-toggle" href="/">Edit search</a>
            </div>

            <div id="EditSearchCollapse" aria-expanded="true" class="blanket-container">

                <div class="blanket"></div>

                <div class="filter-divider"></div>
                <form method="get" action="@Url.Action("Index", "EstablishmentsSearch", new { area = "" })">

                    @if (Model.SearchType == eSearchType.Location)
                    {
                        @RadiusSelector("Within radius of")
                        <div class="filter-divider"></div>
                    }

                    @SortBySelector("Sort by")
                    <div class="filter-divider"></div>
                    
                    @Selector("Establishment type", M.BIND_ALIAS_TYPEIDS, Model.EstablishmentTypes, Model.SelectedEstablishmentTypeIds)
                    <div class="filter-divider"></div>

                    @Selector("Status", M.BIND_ALIAS_STATUSIDS, Model.EstablishmentStatuses, Model.SelectedEstablishmentStatusIds)
                    <div class="filter-divider"></div>

                    @Selector("Phase of education", M.BIND_ALIAS_PHASEIDS, Model.EducationPhases, Model.SelectedEducationPhaseIds)
                    <div class="filter-divider"></div>

                    @Selector("Local authority", M.BIND_ALIAS_LAIDS, Model.LocalAuthorities, Model.SelectedLocalAuthorityIds)
                    <div class="filter-divider"></div>
            
                    @Selector("Religious character", M.BIND_ALIAS_RELICHARIDS, Model.ReligiousCharacters, Model.SelectedReligiousCharacterIds)
                    <div class="filter-divider"></div>
                    
                    <!-- begin opted in filters -->

                    @Selector("Admissions policy", M.BIND_ALIAS_ADMPOL, Model.AdmissionsPolicies, Model.SelectedAdmissionsPolicyIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Boarding provision", M.BIND_ALIAS_BOARDPOL, Model.BoardingProvisions, Model.SelectedBoardingProvisionIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Diocese", M.BIND_ALIAS_DIOCESE, Model.Dioceses, Model.SelectedDioceseIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("District", M.BIND_ALIAS_DISTRICT, Model.Districts, Model.SelectedDistrictIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Further Education type", M.BIND_ALIAS_FETYPE, Model.FurtherEducationTypes, Model.SelectedFETypeIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Gender of entry", M.BIND_ALIAS_GENDER, Model.Genders, Model.SelectedGenderIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Government Office Region", M.BIND_ALIAS_GOR, Model.GORs, Model.SelectedGORIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Nursery provision", M.BIND_ALIAS_NURSERY, Model.NurseryProvisions, Model.SelectedNurseryProvisionIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Parliamentary constituency", M.BIND_ALIAS_PARLCONST, Model.ParliamentaryConstituencies, Model.SelectedParliamentaryConstituencyIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Religious ethos", M.BIND_ALIAS_RELETHOS, Model.ReligiousEthoses, Model.SelectedReligiousEthosIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("RSC region", M.BIND_ALIAS_RSCREG, Model.RSCRegions, Model.SelectedRSCRegionIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Section 41 approved", M.BIND_ALIAS_SECT41, Model.Section41Designations, Model.SelectedSection41Ids, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Sixth form provision", M.BIND_ALIAS_SIXTHFORM, Model.SixthFormProvisions, Model.SelectedSixthFormProvisionIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Special classes", M.BIND_ALIAS_SPECLASS, Model.SpecialClassesProvisions, Model.SelectedSpecialClassesProvisionIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Type of SEN provision", M.BIND_ALIAS_TYPEOFSENPRV, Model.TypeOfSENProvisions, Model.SelectedTypeOfSENProvisionIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Urban/Rural description", M.BIND_ALIAS_URBRUR, Model.UrbanRuralDesignations, Model.SelectedUrbanRuralIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>

                    @Selector("Ward", M.BIND_ALIAS_WARD, Model.Wards, Model.SelectedWardIds, "additional-search-critera hidden", true)
                    <div class="filter-divider"></div>
                    
                    <a href="#" class="add-filters-link">Add more filters</a>

                    <input type="submit" value="Update" class="button edubase-filter-submit" id="filter-submit" />

                    @if (Model.SearchType == eSearchType.Text)
                    {
                        @Html.HiddenFor(!Model.TextSearchModel.Text.IsEmpty(), x => x.TextSearchModel.Text)
                        @Html.HiddenFor(!Model.TextSearchModel.AutoSuggestValue.IsEmpty(), x => x.TextSearchModel.AutoSuggestValue)
                    }
                    else if (Model.SearchType == eSearchType.Location)
                    {
                        @Html.HiddenFor(!Model.LocationSearchModel.Text.IsEmpty(), x => x.LocationSearchModel.Text)
                        @Html.HiddenFor(!Model.LocationSearchModel.Text.IsEmpty(), x => x.LocationSearchModel.AutoSuggestValue)
                    }

                    <input type="hidden" id="selected-search-filters" name="@M.BIND_ALIAS_SELECTED_SEARCH_FILTERS" value="@Model.SelectedExtraSearchFilters" />

                    @Html.HiddenFor(x => x.SearchType)
                    
                </form>
            </div>

        </div>
        <div id="additional-filter-wrap" class="hidden">
            <div class="govuk-option-select js-collapsible" data-closed-on-load="false" id="option-select-additional-filters">
                <button class="js-container-head" aria-expanded="false">
                    <div class="option-select-label">Add more filters</div>
                    <div class="js-selected-counter"></div>
                </button>
                <a href="#" class="clear-selections">Clear</a>
                <div class="options-container">
                    <div class="js-auto-height-inner">
                        <fieldset id="filter-type-target">
                            <legend class="visuallyhidden">Select an option below to filter the results</legend>
                        </fieldset>
                    </div>
                </div>
            </div>
            <input value="Update" class="button edubase-filter-submit" id="filter-refine" type="submit">
        </div>

    </div>

    <div class="column-two-thirds" id="results-container">

        @{Html.RenderPartial("Partials/_EstablishmentSearchResults");}

    </div>

</div>


@helper Selector(string label, string name, IEnumerable<LookupItemViewModel> items, List<int> selectedItems, string additionalClassName = "", bool isExtraFilter = false)
{
    var closed = isExtraFilter && (Model.SelectedExtraSearchFilters == null || !Model.SelectedExtraSearchFilters.Contains(name));
    if (!closed)
    {
        additionalClassName = additionalClassName.RemoveSubstring("hidden");
    }
    <div class="govuk-option-select js-collapsible @additionalClassName" data-closed-on-load="@(isExtraFilter ? "false" : "true")"
         id="option-select-@label.ToLower().Replace(" ", "-").Replace("/","-")" data-bind-alias="@name">
        <div class="container-head js-container-head">
            <div class="option-select-label">@label</div>
            <div class="js-selected-counter"></div>
        </div>
        <a href="#" class="clear-selections">Clear</a>
        <div class="options-container" id="">
            <div class="js-auto-height-inner">
                <fieldset>
                    <legend class="visuallyhidden">Select an option below to filter the results</legend>
                    @foreach (var item in items)
                    {
                        <label for="@(name)_@item.Id">
                            <input name="@name" value="@item.Id" id="@(name)_@item.Id" class="trigger-result-update" type="checkbox" @Html.Conditional(selectedItems.Contains(item.Id), "checked") />
                            @item
                            <span class="visuallyhidden">- changing the selection will refresh the results</span>
                        </label>
                    }
                </fieldset>
            </div>
        </div>
    </div>
}


@helper SortBySelector(string label)
{
    <div class="govuk-option-select js-collapsible"
         id="option-select-@label.ToLower().Replace(" ", "-")">
        <div class="container-head js-container-head">
            <div class="option-select-label">@label</div>
            <div class="js-selected-counter"></div>
        </div>
        <select class="form-control trigger-result-update" name="@M.BIND_ALIAS_SORT_BY">
            @if (Model.SearchType == eSearchType.Location)
            {
                <option id="distance" value="d" @Html.Conditional(Model.GetSortOption() == Edubase.Services.Core.Search.eSortBy.Distance, "selected")>distance</option>
            }
            <option id="alpha-az" value="a" @Html.Conditional(Model.GetSortOption() == Edubase.Services.Core.Search.eSortBy.NameAlphabeticalAZ, "selected")>alphabetical a-z</option>
            <option id="alpha-za" value="z" @Html.Conditional(Model.GetSortOption() == Edubase.Services.Core.Search.eSortBy.NameAlphabeticalZA, "selected")>alphabetical z-a</option>
        </select>
    </div>
}

@helper RadiusSelector(string label)
{
    
    <div class="govuk-option-select js-collapsible"
            id="option-select-@label.ToLower().Replace(" ", "-")">
        <div class="container-head js-container-head">
            <div class="option-select-label">@label</div>
            <div class="js-selected-counter"></div>
        </div>
        <select class="form-control trigger-result-update" name="@M.BIND_ALIAS_RADIUS">
            @foreach (var value in Model.GetRadiusOptions())
            {
                <option value="@value" @Html.Conditional(Model.GetRadiusOption() == value, "selected")>@value mile@(Html.Conditional(value != 1, "s"))</option>
            }
        </select>
    </div>
    
}