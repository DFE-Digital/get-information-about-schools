@using Edubase.Web.UI.Models
@using Edubase.Web.UI.Helpers
@model AdvancedSearchViewModel
@{
    ViewBag.Title = string.Format("Search results for '{0}'", Model.TextSearchModel.Text);
    ViewBag.PageClass = "search-results";
    ViewBag.HideLogo = true;
}

<div class="grid-row">
    <div class="column-two-thirds">
        @Html.ActionLink("Go back", "Index", null, new { @class = "home-link" })

        <h1 class="heading-xlarge">Search results</h1>
        @if (Model.SearchType == AdvancedSearchViewModel.eSearchType.Text)
        {
            if (Model.TextSearchType == AdvancedSearchViewModel.eTextSearchType.EstablishmentName
                || Model.TextSearchType == AdvancedSearchViewModel.eTextSearchType.Unknown)
            {
                <p>
                    We found <span class="heading-xlarge">@Model.Count</span> establishments
                    @if (!Model.TextSearchModel.Text.IsEmpty())
                    {
                        <text>for the search term "@Model.TextSearchModel.Text".</text>
                    }
                </p>
            }
            else if (Model.TextSearchType == AdvancedSearchViewModel.eTextSearchType.LAESTAB)
            {
                <p>We found <span class="heading-xlarge">@Model.Count</span> establishments with the LAESTAB "@Model.TextSearchModel.Text".</p>
            }
            else if (Model.TextSearchType == AdvancedSearchViewModel.eTextSearchType.UKPRN)
            {
                <p>We found <span class="heading-xlarge">@Model.Count</span> establishments with the <abbr title="UK Provider Reference Number">UKPRN</abbr> "@Model.TextSearchModel.Text".</p>
            }
            else if (Model.TextSearchType == AdvancedSearchViewModel.eTextSearchType.URN)
            {
                <p>We found <span class="heading-xlarge">@Model.Count</span> establishments with the <abbr title="Unique Reference Number">URN</abbr> "@Model.TextSearchModel.Text".</p>
            }
        }
        else if (Model.SearchType == AdvancedSearchViewModel.eSearchType.ByLocalAuthority)
        {
            <p>We found <span class="heading-xlarge">@Model.Count</span> establishments in the selected local authorities</p>
        }


        <div style="text-align:right;display:none;">
            <a href="@Url.Action("PrepareDownload", "Search")?@Url.CurrentQueryString()">Download these search results</a>
        </div>

    </div>
</div>

<div class="grid-row">

    <div class="column-third">
        <div class="filter-form">
            
            <div id="EditSearchCollapsible"
                 class="button-as-link js-collapsible selected mbl js-track"
                 data-track="search-results||edit-search"
                 aria-controls="EditSearchCollapse"
                 role="button">
                <a class="help-toggle" href="/Search">Edit search</a>
            </div>

            <div id="EditSearchCollapse" aria-expanded="true">

                <div class="filter-divider"></div>
                <form method="get" action="@Url.Action("Results", "Search")">

                    @Selector("Provider type", "t", Model.EstablishmentTypes, Model.SelectedEstablishmentTypeIds)
                    <div class="filter-divider"></div>

                    @Selector("Status", "s", Model.EstablishmentStatuses, Model.SelectedEstablishmentStatusIds)
                    <div class="filter-divider"></div>

                    @Selector("Phase of education", "p", Model.EducationPhases, Model.SelectedEducationPhaseIds)
                    <div class="filter-divider"></div>

                    @*@if (Model.SearchType != AdvancedSearchViewModel.eSearchType.LocalAuthority)
                    {*@
                        @Selector("Local authority", "l", Model.LocalAuthorties, Model.SelectedLocalAuthorityIds)
                        <div class="filter-divider"></div>
                    @*}*@

                    @Selector("Religious character", "r", Model.ReligiousCharacters, Model.SelectedReligiousCharacterIds)
                    <div class="filter-divider"></div>

                    <input type="submit" value="Update" class="button edubase-filter-submit" />

                    @if (Model.SearchType == AdvancedSearchViewModel.eSearchType.Text)
                    {
                        @Html.HiddenFor(!Model.TextSearchModel.Text.IsEmpty(), x => x.TextSearchModel.Text)
                        @Html.HiddenFor(!Model.TextSearchModel.AutoSuggestValue.IsEmpty(), x => x.TextSearchModel.AutoSuggestValue)
                    }
                    else if (Model.SearchType == AdvancedSearchViewModel.eSearchType.Location)
                    {
                        @Html.HiddenFor(!Model.LocationSearchModel.Text.IsEmpty(), x => x.LocationSearchModel.Text)
                        @Html.HiddenFor(!Model.LocationSearchModel.Text.IsEmpty(), x => x.LocationSearchModel.AutoSuggestValue)
                    }
                    else if (Model.SearchType == AdvancedSearchViewModel.eSearchType.ByLocalAuthority)
                    {
                        @*@Html.HiddenFor(!Model.LocalAuthoritySearchModel.Text.IsEmpty(), x => x.LocalAuthoritySearchModel.Text)
                        @Html.HiddenFor(!Model.LocalAuthoritySearchModel.Text.IsEmpty(), x => x.LocalAuthoritySearchModel.AutoSuggestValue)*@
                    }

                    @Html.HiddenFor(x => x.SearchType)

                </form>
            </div>

        </div>
    </div>

    <div class="column-two-thirds">

        @if (Model.Error != null)
        {
            <h2 class="heading-medium">Error</h2>
            <p>@Model.Error</p>
        }
        else if (Model.Results.Count > 0)
        {
            if (Model.PageCount > 1)
            {
                <div class="top-pagination">
                    @Html.Partial("_ResultsPaginationAdvSearch")
                </div>
            }
            <ul class="school-results-listing">
                @foreach (var result in Model.Results)
                {
                    <li>
                        <h2>@Html.ActionLink(result.Name, "Details", "Establishment", new { id = result.Urn }, new { @class = "bold-small" })</h2>
                        <dl>
                            <dt>Address:</dt>
                            <dd>@result.GetAddress()</dd>
                            <dt><abbr title="Unique Reference Number">URN</abbr>:</dt>
                            <dd> @result.Urn</dd>
                            <dt>LAESTAB:</dt>
                            <dd>@result.GetLAESTAB()</dd>
                            <dt>Status:</dt>
                            <dd>@(Model.EstablishmentStatuses.FirstOrDefault(x => x.Id == result.StatusId)?.Name ?? "--")</dd>
                        </dl>
                    </li>
                }
            </ul>
            if (Model.PageCount > 1)
            {
                <div class="lower-pagination">
                    @Html.Partial("_ResultsPaginationAdvSearch")
                </div>
            }
        }
        else
        {
            <p class="no-school-results">Please try @Html.ActionLink("searching again", "Index") using different spelling or words.</p>
        }

    </div>

</div>


@helper Selector(string label, string name, IEnumerable<LookupItemViewModel> items, List<int> selectedItems)
{
    <div class="govuk-option-select js-collapsible" data-closed-on-load="true">
        <div class="container-head js-container-head">
            <div class="option-select-label">@label</div>
            <div class="js-selected-counter"></div>
            
        </div>
        <a href="#" class="clear-selections">Clear</a>
        <div class="options-container" id="">
            <div class="js-auto-height-inner">
                <fieldset>
                    <legend class="visuallyhidden">Select an option below to filter the results</legend>
                    @foreach (var item in items)
                    {
                        <label for="@(name)_@item.Id">
                            <input name="@name" value="@item.Id" id="@(name)_@item.Id" type="checkbox" @Html.Conditional(selectedItems.Contains(item.Id), "checked") />
                            @item
                            <span class="visuallyhidden">- changing the selection will refresh the results</span>
                        </label>
                    }
                </fieldset>
            </div>
        </div>
    </div>

}
