@using System.ServiceModel.Configuration
@using Edubase.Services.Enums
@model ChangeHistoryViewModel
@{
    ViewBag.Title = string.Concat(!ViewData.ModelState.IsValid ? "Error: " : string.Empty, "Download change history");
    ViewBag.Title = "";
    ViewBag.PageClass = "search-history-results search-results";
    ViewBag.SiteSection = "tools";
}
@section Head {
    <meta name="robots" content="noindex,nofollow" />
}

@section BreadCrumbs
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-breadcrumbs">
                <ol class="govuk-breadcrumbs__list">
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
                    <li class="govuk-breadcrumbs__list-item">
                        @Html.ActionLink("Tools", "Index", "Tools", new {area = ""}, new {@class = "govuk-breadcrumbs__link"})
                    </li>
                    <li class="govuk-breadcrumbs__list-item">
                        @Html.ActionLink("Change history", "Index", "ChangeHistory", new {area = ""}, new {@class = "govuk-breadcrumbs__link"})
                    </li>
                </ol>
            </div>
        </div>
    </div>
}

@Html.Partial("_ValidationSummary", ViewData.ModelState)

<h1 class="govuk-heading-xl">Download change history</h1>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <h2 class="govuk-heading-m">Select the file format of the data you are interested in</h2>
        <p>You can download your requested data in either CSV or XLSX format. The file will download as a ZIP file: open the ZIP to access its contents.</p>
    </div>

    <div class="govuk-grid-column-full">
        @using (Html.BeginRouteForm("ChangeHistoryDownload", FormMethod.Get))
        {
            <fieldset class="govuk-fieldset ">
                <legend class="govuk-visually-hidden" id="@nameof(Model.DownloadFormat)">Download data options</legend>
                <div class="form-group @Html.ValidationCssClassFor(x => x.DownloadFormat)">
                    @Html.ValidationMessageFor(x => x.DownloadFormat, null, new {@class = "govuk-error-message"})
                    <div class="govuk-radios">
                        <div class="govuk-radios__item">
                            @Html.RadioButtonFor(m => m.DownloadFormat, eFileFormat.CSV, new {@checked = "checked", id = "download-csv", @class = "govuk-radios__input" })
                            <label for="download-csv" class="govuk-radios__label">Data in CSV format</label>
                        </div>
                        <div class="govuk-radios__item">
                            @Html.RadioButtonFor(m => m.DownloadFormat, eFileFormat.XLSX, new {id = "download-xslx", @class = "govuk-radios__input" })
                            <label for="download-xslx" class="govuk-radios__label">Data in XLSX (Excel) format</label>
                        </div>
                    </div>
                </div>
            </fieldset>

            @Html.HiddenFor(x => x.DisplayErrors, new { Value = "true" })

            @Html.HiddenFieldsFromQueryString()
            <div class="button-row govuk-!-padding-top-8">
                <button type="submit" class="govuk-button" value="Continue">Continue</button>
                <a href=@($"{Url.RouteUrl("ChangeHistorySearch")}?{Request.QueryString}") class="govuk-button govuk-button--secondary" data-module="govuk-button">Cancel</a>
            </div>

        }
    </div>
</div>
