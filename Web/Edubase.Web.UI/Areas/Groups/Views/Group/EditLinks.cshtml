@using Edubase.Services.Enums
@using Edubase.Common;
@using VM = Edubase.Web.UI.Areas.Groups.Models.CreateEdit.GroupEditorViewModel;
@using L = Edubase.Services.Enums.eLookupGroupType;
@model VM
@{
    ViewBag.bodyClasses = "create-edit school-details";
    ViewBag.hideLogo = true;
    ViewBag.Title = Model.PageTitle;
    Layout = "_EditLayoutPage.cshtml";
}
<div class="tab-content">

@using (Html.BeginForm("EditLinks", "Group", new { area = "Groups" }, FormMethod.Post))
{
    @Html.HiddenFor(x => x.GroupUId)
    @Html.HiddenFor(x => x.SaveMode)
    @Html.HiddenFor(x => x.GroupTypeId)
    @Html.HiddenFor(x => x.GroupName)
    @Html.HiddenFor(x => x.GroupTypeName)
    @Html.HiddenFor(x => x.SelectedTabName)
    @Html.HiddenFor(x => x.ListOfEstablishmentsPluralName)

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="button-row govuk-!-margin-bottom-4">
                @if (!Model.LinkedEstablishments.Establishments.Any(x => x.EditMode))
                {
                    <button type="submit" name="action" class="govuk-button" value="@VM.ActionSave">Save @Model.ListOfEstablishmentsPluralName.ToLower()</button>
                }
                @Html.ActionLink("Cancel", "Details", "Group", new { area = "Groups", id = Model.GroupUId }, new { @class = "govuk-button govuk-button--secondary cancel", data_module="govuk-button" })
            </div>
        </div>
    </div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h2 class="govuk-heading-m">List of @Model.ListOfEstablishmentsPluralName (@Model.LinkedEstablishments.Establishments.Count)</h2>
        </div>
    </div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h3 class="govuk-heading-s">Add establishment</h3>
            <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.LinkedEstablishments.LinkedEstablishmentSearch.Urn)">
                <label class="govuk-label" for="LinkedEstablishments_LinkedEstablishmentSearch_Urn">Enter the establishment's Unique Reference Number (URN)</label>
                @Html.ValidationMessageFor(x => x.LinkedEstablishments.LinkedEstablishmentSearch.Urn, null, new {@class = "govuk-error-message"})
                @Html.TextBoxFor(x => x.LinkedEstablishments.LinkedEstablishmentSearch.Urn, new {@class = "govuk-input  govuk-!-width-one-half"})
                <button type="submit" name="action" value="@VM.ActionLinkedEstablishmentSearch" class="govuk-button inline-button links-estab-search-button">Search URN</button>
            </div>
            @if (Model.LinkedEstablishments.LinkedEstablishmentSearch.HasResult)
            {
                var prefix = string.Concat(nameof(Model.LinkedEstablishments), "_", nameof(Model.LinkedEstablishments.LinkedEstablishmentSearch));
                <h2 class="govuk-heading-s govuk-!-margin-bottom-2">Establishment found</h2>
                <p class="govuk-body">@Model.LinkedEstablishments.LinkedEstablishmentSearch.Name</p>

                @Html.EditorFor(x => x.LinkedEstablishments.LinkedEstablishmentSearch.JoinedDate, new {title = "Joined date", editorPrefix = prefix, fieldsetClassName = "edit-date-fieldset"})

                <button id="add-estab-submit" type="submit" name="action" value="@VM.ActionLinkedEstablishmentAdd" class="govuk-button">Add establishment</button>
                @Html.HiddenFor(x => x.LinkedEstablishments.LinkedEstablishmentSearch.Urn)
            }

            @Html.HiddenFor(x => x.LinkedEstablishments.LinkedEstablishmentSearch.Name)
            @Html.HiddenFor(x => x.LinkedEstablishments.LinkedEstablishmentSearch.FoundUrn)

        </div>
    </div>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <ul class="school-results-listing">
                @for (int i = 0; i < Model.LinkedEstablishments.Establishments.Count; i++)
                {
                    var e = Model.LinkedEstablishments.Establishments[i];
                    var id = String.Concat("linkedEstablishments_", @i, "__id");
                    <li>
                        <h4 class="govuk-heading-s" id="@id">
                            @Html.ActionLink(Model.LinkedEstablishments.Establishments[i].Name, "Details", "Establishment", new {id = Model.LinkedEstablishments.Establishments[i].Urn, area = "Establishments"}, null)
                        </h4>
                         @if (ViewData.ModelState["linkedEstablishments[" + i + "].id"] != null)
                         {
                             <div class="govuk-form-group govuk-form-group--error govuk-!-padding-bottom-1 govuk-!-padding-top-2 govuk-!-margin-bottom-1">
                                 <div class="govuk-error-message">@Html.ValidationMessageNested("linkedEstablishments[" + i + "].id")</div>
                             </div>

                         }
                        <dl class="gias-summary-list gias-summary-list--inline">
                            <div class="gias-summary-list__row">
                                <dt class="gias-summary-list__key">Address:</dt>
                                <dd class="gias-summary-list__value">@e.Address</dd>
                            </div>
                            <div class="gias-summary-list__row">
                                <dt class="gias-summary-list__key">Phase / type:</dt>
                                <dd class="gias-summary-list__value">
                                    @(e.PhaseName ?? "Not recorded"),
                                    @(e.TypeName ?? "Not recorded")
                                </dd>
                            </div>
                            <div class="gias-summary-list__row">
                                <dt class="gias-summary-list__key"><abbr title="Unique Reference Number">URN</abbr>:</dt>
                                <dd class="gias-summary-list__value">@e.Urn</dd>
                            </div>
                            <div class="gias-summary-list__row">
                                <dt class="gias-summary-list__key">
                                    <abbr title="Local authority - Establishment number">LAESTAB</abbr>:
                                </dt>
                                <dd class="gias-summary-list__value">@(e.LAESTAB ?? "Not recorded")</dd>
                            </div>
                            <div class="gias-summary-list__row">
                                <dt class="gias-summary-list__key">Status:</dt>
                                <dd class="gias-summary-list__value">@(e.StatusName ?? "Not recorded")</dd>
                            </div>
                            <div class="gias-summary-list__row">
                                <dt class="gias-summary-list__key">Local authority name:</dt>
                                <dd class="gias-summary-list__value">@(e.LocalAuthorityName ?? "Not recorded")</dd>
                            </div>


                            @if (!Model.LinkedEstablishments.Establishments[i].EditMode)
                            {
                                <div class="gias-summary-list__row">
                                    <dt class="gias-summary-list__key">Joined date:</dt>
                                    <dd class="gias-summary-list__value">@(e.JoinedDate?.ToString("dd MMMM yyyy") ?? "Not recorded")</dd>
                                    @Html.HiddenFor(x => x.LinkedEstablishments.Establishments[i].JoinedDate)
                                </div>
                            }

                        </dl>

                        @if (Model.GroupTypeMode == VM.eGroupTypeMode.ChildrensCentre)
                        {
                            <div class="govuk-form-group">
                                <div class="govuk-radios">
                                    <div class="govuk-radios__item">
                                        @Html.RadioButtonFor(x => x.CCLeadCentreUrn, Model.LinkedEstablishments.Establishments[i].Urn, new {id = "CCLeadCentreUrn" + i, @class = "govuk-radios__input"})
                                        <label for="CCLeadCentreUrn@(i)" class="govuk-radios__label">
                                            Make this children's centre a lead centre
                                        </label>
                                    </div>
                                </div>
                            </div>
                        }

                        @if (Model.LinkedEstablishments.Establishments[i].EditMode)
                        {
                            @Html.EditorFor(x => x.LinkedEstablishments.Establishments[i].JoinedDateEditable, new {title = "Joined date", fieldsetClassName = "joined-date-editor edit-date-fieldset" })
                        }

                        @if (!Model.LinkedEstablishments.Establishments.Any(x => x.EditMode))
                        {
                            <div class="button-row govuk-!-margin-bottom-6 govuk-!-padding-top-4">
                                <button type="submit" class="govuk-button govuk-button--secondary button-remove" name="action" value="@VM.ActionLinkedEstablishmentRemove@Model.LinkedEstablishments.Establishments[i].Urn" aria-label="Remove establishment">Remove</button>
                                <button type="submit" name="action" value="@VM.ActionLinkedEstablishmentEdit@Model.LinkedEstablishments.Establishments[i].Urn" class="govuk-button govuk-button--secondary">Edit join date</button>
                            </div>
                        }
                        else if (Model.LinkedEstablishments.Establishments[i].EditMode)
                        {
                            <div class="button-row govuk-!-margin-bottom-6 govuk-!-padding-top-4">
                                <button id="save-joined-date-submit" type="submit" class="govuk-button" name="action" value="@VM.ActionLinkedEstablishmentSave">Save joined date</button>
                                @Html.ActionLink("Cancel", "EditLinks", "Group", new { area = "Groups" }, new { @class = "govuk-button govuk-button--secondary js-allow-exit", data_module="govuk-button" })
                            </div>
                        }

                        <hr class="govuk-section-break govuk-section-break--m govuk-section-break--visible">

                        @Html.HiddenFor(x => x.LinkedEstablishments.Establishments[i].Id)
                        @Html.HiddenFor(x => x.LinkedEstablishments.Establishments[i].Name)
                        @Html.HiddenFor(x => x.LinkedEstablishments.Establishments[i].Urn)
                        @Html.HiddenFor(x => x.LinkedEstablishments.Establishments[i].Address)
                        @Html.HiddenFor(x => x.LinkedEstablishments.Establishments[i].TypeName)
                        @Html.HiddenFor(x => x.LinkedEstablishments.Establishments[i].HeadFullName)
                        @Html.HiddenFor(x => x.LinkedEstablishments.Establishments[i].EditMode)
                    </li>
                }
            </ul>
        </div>
    </div>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-one-half">
            <div class="button-row">
                @if (!Model.LinkedEstablishments.Establishments.Any(x => x.EditMode))
                {
                    <button type="submit" name="action" class="govuk-button" value="@VM.ActionSave">Save @Model.ListOfEstablishmentsPluralName.ToLower()</button>
                }
                @Html.ActionLink("Cancel", "Details", "Group", new {area = "Groups", id = Model.GroupUId}, new {@class = "govuk-button govuk-button--secondary cancel", data_module="govuk-button"})
            </div>
        </div>
    </div>
}
</div>
<script nonce="@Html.ScriptNonce()">window.blockReOrder = true;</script>

@section ViewScripts
{
    @if (Model.LinkedEstablishments.Establishments.Any(x => x.EditMode))
    {
        <script nonce="@Html.ScriptNonce()"> var isConfirmingChanges = false;</script>
    }


    @if (Request.HttpMethod == "POST" && Model.Action != "cancel" )
    {
        <script nonce="@Html.ScriptNonce()">var isConfirmingChanges = true;</script>

    }

    <script src="/public/assets/scripts/build/edit-group-links.js"></script>
}
