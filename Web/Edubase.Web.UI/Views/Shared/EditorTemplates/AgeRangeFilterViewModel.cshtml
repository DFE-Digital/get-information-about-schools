@model AgeRangeFilterViewModel

<div class="govuk-option-select age-filter js-collapsible no-scroll" data-closed-on-load="true" id="option-select-close-date">
    <div class="container-head js-container-head">
        <div class="option-select-label">@(ViewData["title"] ?? "Age range")</div>
        @if ((Model?.From != null && Model.From.HasValue) || (Model?.To != null && Model.To.HasValue))
        {
            <div class="js-selected-counter">
                <span class="js-selected-counter-text">Age selected</span>
            </div>
            
        }
    </div>
    @if ((Model?.From != null && Model.From.HasValue) || (Model?.To != null && Model.To.HasValue))
{
    <a href="#" class="clear-selections">Clear</a>
}
    <div class="options-container" id="">
        <div class="js-auto-height-inner">
            <div class="form-group date-group">
                <fieldset class="range-group">
                    <span class="error-message hidden">Please check the age(s) you have entered</span>
                    <span class="inline-form-control">
                        @Html.LabelFor(m => m.From)
                        @Html.TextBoxFor(m => m.From, new { @class = "form-control", maxlength="2"})
                    </span>
                    <span class="inline-form-control">
                        @Html.LabelFor(m => m.To)
                        @Html.TextBoxFor(m => m.To, new { @class = "form-control", maxlength="2"})
                    </span>
                </fieldset>
            </div>
            <div class="form-group"><a href="#" class="button button-grey filter-button">Apply</a>
            </div>
        </div>
    </div>
</div>