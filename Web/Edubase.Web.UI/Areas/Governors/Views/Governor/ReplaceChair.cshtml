@model ReplaceChairViewModel
    
@{
    ViewBag.hideLogo = true;
    ViewBag.SelectedTab = "EditGovernance";
    Layout = Model.Layout;
}

<div id="select-shared-governor" class="tab-content">
        <div class="column-two-thirds">
            @using (Html.BeginForm("ReplaceChair", "Governor", FormMethod.Post))
            {
                @Html.HiddenFor(m => m.ExistingGovernorId)
                @Html.HiddenFor(m => m.GovernorFullName)
                @Html.HiddenFor(m => m.ExistingChairType)
                @Html.HiddenFor(m => m.Urn)
                @Html.HiddenFor(m => m.Name)
                @Html.HiddenFor(m => m.Role)

                <div class="button-row">
                    <input type="submit" value="Save" class="button mobile-full-width" />
                    <a href="@Url.RouteUrl("EstabEditGovernance", new { establishmentUrn = Model.Urn.Value })" class="button button-grey mobile-full-width">Cancel</a>
                </div>
                <h2 class="heading-medium tab-lead">Replace @Model.RoleName</h2>
                <h3 class="heading-small">@Model.GovernorFullName</h3>

                @Html.EditorFor(m => m.DateTermEnds)
                <div class="form-group inline toggle-panels">
                    @Html.GiasRadioFor(m =>m.NewChairType,
                        ReplaceChairViewModel.ChairType.LocalChair,
                        "New Chair",
                        null,
                        new { id = "newChair", @class = "panel-trigger", data_toggle_panel = "#newChairDetails" })

                    
                    @Html.GiasRadioFor(m => m.NewChairType,
                        ReplaceChairViewModel.ChairType.SharedChair,
                        "Shared Chair",
                        null,
                        new { id = "sharedChair", @class = "panel-trigger", data_toggle_panel = "#sharedChairDetails" })

                </div>
                <div id="replacement-chair-details" class="exapanding-list-wrap chair-replace governor-toggles">
                    <div class="column-two-thirds">
                        <div id="newChairDetails" class="panel-indent @(Model.NewChairType == ReplaceChairViewModel.ChairType.LocalChair ? "open-expander" : "")">
                            <div class="replacement-chair-option">
                                @Html.EditorFor(m => m.NewLocalGovernor, new { disableStartDate = true })
                            </div>
                        </div>
                        <div id="sharedChairDetails" class="panel-indent @(Model.NewChairType == ReplaceChairViewModel.ChairType.SharedChair ? "open-expander" : "")">
                            <div class="replacement-chair-option">
                                <div class="shared-governor-list">
                                    @if (Model.SharedGovernors.Any())
                                    {
                                        <ul>
                                            @for (var index = 0; index < Model.SharedGovernors.Count; index++)
                                            {
                                                @Html.EditorFor(x => x.SharedGovernors[index], new { disableStartDate = true })
                                            }
                                        </ul>
                                    }
                                    else
                                    {
                                        <p>There are no shared governors available for this establishment</p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="button-row">
                    <input type="submit" value="Save" class="button mobile-full-width" />
                    <a href="@Url.RouteUrl("EstabEditGovernance", new { establishmentUrn = Model.Urn.Value })" class="button button-grey mobile-full-width">Cancel</a>
                </div>
            }
        </div>
</div>

@section ViewScripts
{
    <script>
        $day = $('#DateTermEnds_Day');
        $month = $('#DateTermEnds_Month');
        $year = $('#DateTermEnds_Year');

        function checkAndUpdateDate() {
            if (Number($day.val()) > 0 && Number($month.val()) > 0 && Number($year.val()) > 0) {
                var date = new Date($year.val(), $month.val() - 1, $day.val(), 0, 0, 0, 0);
                date.setDate(date.getDate() + 1);
                $('.start-date-day').val(date.getDate());
                $('.start-date-month').val(date.getMonth() + 1);
                $('.start-date-year').val(date.getFullYear());
            }
        }

        $day.blur(checkAndUpdateDate);
        $month.blur(checkAndUpdateDate);
        $year.blur(checkAndUpdateDate);

        $(function() { checkAndUpdateDate(); });
    </script>
}