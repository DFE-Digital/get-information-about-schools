@using Edubase.Services.Enums;
@model CreateAcademyTrustViewModel
@{
    ViewBag.bodyClasses = "create-edit create-academy-trust";
    ViewBag.hideLogo = true;
    ViewBag.Title = string.Concat(!ViewData.ModelState.IsValid ? "Error: " : string.Empty, "Create new academy trust");
    ViewBag.SiteSection = "tools";
}

@section BreadCrumbs
{
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <div class="govuk-breadcrumbs">
            <ol class="govuk-breadcrumbs__list">
                <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
                <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Tools", "Index", "Tools", new {area = ""}, new { @class = "govuk-breadcrumbs__link" })</li>
                <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Create an academy trust", "SearchCompaniesHouse", "Group", new { area = "Groups" }, new { @class = "govuk-breadcrumbs__link" })</li>
            </ol>
        </div>
    </div>
</div>

}



<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        @Html.Partial("_ValidationSummary", ViewData.ModelState)
        <h1 id="enter-academy-trust-details-heading" class="govuk-heading-xl">Enter academy trust details</h1>
    </div>
</div>


@using (Html.BeginForm("SaveNewAcademyTrust", "Group", new { area = "Groups", academyTrustRoute = ViewData["academyTrustRoute"] }, FormMethod.Post))
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">

            @if (Model.TrustExists == true)
            {
                <div role="alert" class="warning-message js-trigger-aria-live">
                    <p id="create-academy-trust-warning-message" class="message-text" aria-live="polite">Company is already a @(Model.TypeName)</p>
                </div>
            }
            else
            {
                <p>Add the details of the new academy trust.</p>
            }
        </div>
    </div>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <div id="company">
                <h2 class="govuk-heading-s">Selected company</h2>

                <dl class="govuk-summary-list">
                    <div class="govuk-summary-list__row">
                        <dt id="company-name-key" class="govuk-summary-list__key">Company name</dt>
                        <dd id="company-name-value" class="govuk-summary-list__value">@Model.Name</dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt id="companies-house-number-key" class="govuk-summary-list__key">Companies House number</dt>
                        <dd id="companies-house-number-value" class="govuk-summary-list__value">
                            <a href="@System.Configuration.ConfigurationManager.AppSettings["CompaniesHouseBaseUrl"]@Model.CompaniesHouseNumber" target="_blank" rel="noreferrer noopener">
                                @Model.CompaniesHouseNumber (opens in new tab)</a>
                        </dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt id="incorporated-key" class="govuk-summary-list__key">Incorporated</dt>
                        <dd id="incorporated-value" class="govuk-summary-list__value">@(Model.OpenDate?.ToString("d MMMM yyyy"))</dd>
                    </div>
                    <div class="govuk-summary-list__row">
                        <dt id="address-name-key" class="govuk-summary-list__key">Address</dt>
                        <dd id="address-value" class="govuk-summary-list__value">@Model.Address</dd>
                    </div>
                </dl>

                <p>@Html.ActionLink("Wrong company?", "SearchCompaniesHouse", "Group", new {area = "Groups", academyTrustRoute = ViewData["academyTrustRoute"] }, new { @class = "change-link" })</p>
            </div>

            @Html.HiddenFor(x => x.CompaniesHouseAddressToken)
            @Html.HiddenFor(x => x.Address)
            @Html.HiddenFor(x => x.Name)
            @Html.HiddenFor(x => x.OpenDate)
            @Html.HiddenFor(x => x.CompaniesHouseNumber)
        </div>



        @if (Model.TrustExists == true)
        {
            <div class="govuk-grid-column-two-thirds">
                <div class="single-group govuk-!-padding-top-6  govuk-!-margin-bottom-4">
                    <h2 class="govuk-heading-s govuk-!-margin-bottom-2">Trust details</h2>
                    <dl class="govuk-summary-list">
                        <div class="govuk-summary-list__row">
                            <dt id="trust-name-key" class="govuk-summary-list__key">Trust name</dt>
                            <dd id="trust-name-value" class="govuk-summary-list__value">
                                <span id="trust-name-link">@Html.ActionLink(Model.TrustName, "Details", "Group", new { id = Model.GroupUid, area = "groups" }, null)</span>
                            </dd>
                        </div>
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Trust type</dt>
                            <dd class="govuk-summary-list__value">
                                @Model.TypeName
                            </dd>
                        </div>
                        <div class="govuk-summary-list__row">
                            <dt class="govuk-summary-list__key">Group ID</dt>
                            <dd class="govuk-summary-list__value">@Model.GroupId</dd>
                        </div>
                    </dl>
                </div>
            </div>
        }
        else
        {
            <div class="govuk-grid-column-one-half">
                <div class="single-group govuk-!-padding-top-6 govuk-!-margin-bottom-4">
                    <h2 class="govuk-heading-s govuk-!-margin-bottom-2">Trust details</h2>
                    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.TypeId)">
                        <label for="TypeId" class="govuk-label">Trust type</label>
                        @Html.ValidationMessageFor(x => x.TypeId, null, new { @class = "govuk-error-message" })
                        @Html.DropDownListFor(x => x.TypeId, Model.GroupTypes, "", GetAttributes("govuk-select", Model.TrustExists))
                    </div>
                    @if ((string)ViewData["academyTrustRoute"] != "secure-academy-trust")
                    {
                        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.GroupId)">
                            @Html.LabelFor(x => x.GroupId, new { @class = "govuk-label" })
                            @Html.ValidationMessageFor(x => x.GroupId, null, new { @class = "govuk-error-message" })
                            @Html.TextBoxFor(x => x.GroupId, GetAttributes("govuk-input", Model.TrustExists, 120))
                        </div>
                    }
                    </div>
            </div>
        }

    </div>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="button-row">
            @if (Model.TrustExists == true)
            {
                @Html.ActionLink("Back to company search", "SearchCompaniesHouse", "Group", new {area = "Groups", academyTrustRoute = ViewData["academyTrustRoute"] }, new {@class = "govuk-button cancel"})
            }
            else
            {
                @Html.ActionLink(HttpUtility.HtmlDecode("&laquo; Go back"), "SearchCompaniesHouse", "Group", new {area = "Groups", academyTrustRoute = ViewData["academyTrustRoute"] }, new {@class = "govuk-button govuk-button--secondary cancel"})
                if (Model.AllowSave)
                {
                    <button type="submit" id="create-academy-trust-submit-button" class="govuk-button submit">Create academy trust</button>
                }
                @Html.ActionLink("Cancel", "Index", "Tools", new {area = ""}, new {@class = "govuk-button govuk-button--secondary cancel", data_module="govuk-button"})
            }
            </div>
        </div>
    </div>
}

@section ViewScripts
{
   <script src="@Html.Raw(Html.GetWebpackScriptUrl("bulk-academies.*.js"))"></script>
}

@functions
{
    object GetAttributes(string cssClasses, bool? readOnly = null, int? maxlength = null)
    {
        if (maxlength.HasValue)
        {
            if (readOnly.HasValue && readOnly.Value)
                return new { @class = cssClasses, @disabled = "disabled", maxlength = maxlength };

            return new { @class = cssClasses, maxlength = maxlength };
        }
        else
        {
            if (readOnly.HasValue && readOnly.Value)
                return new { @class = cssClasses, @disabled = "disabled"};

            return new { @class = cssClasses};
        }
    }
}
