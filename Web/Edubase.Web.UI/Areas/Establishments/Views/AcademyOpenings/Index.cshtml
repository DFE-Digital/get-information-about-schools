@using System.Net.Configuration
@model ManageAcademyOpeningsViewModel
@{
    ViewBag.Title = Model.PageTitle;
    ViewBag.bodyClasses = "manage-academy-openings";
    ViewBag.SiteSection = "tools";

    var establishmentTypeId = Request.QueryString["establishmentTypeId"];
    var sortBy = Request.QueryString["sortBy"] ?? "OpenDate-desc";
    var month = Request.QueryString["month"] ?? Model.SelectedMonth;
    Func<string, string> sortLink = column =>
    {
        var dir = "asc";
        if (sortBy.StartsWith(column + "-") && sortBy.EndsWith("asc")) dir = "desc";
        return Url.RouteUrl("ManageAcademyOpenings", new { sortBy = column + "-" + dir, skip = 0, establishmentTypeId, month });
    };
}

@section BreadCrumbs
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-breadcrumbs">
                <ol class="govuk-breadcrumbs__list">
                    <li class="govuk-breadcrumbs__list-item">
                        @Html.ActionLink("Home", "Index", "Home", new {area = ""}, new {@class = "govuk-breadcrumbs__link"})
                    </li>
                    <li class="govuk-breadcrumbs__list-item">
                        @Html.ActionLink("Tools", "Index", "Tools", new {area = ""}, new {@class = "govuk-breadcrumbs__link"})
                    </li>
                </ol>
            </div>
        </div>
    </div>
}


<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <h1 class="govuk-heading-xl">@Model.PageTitle</h1>
        <div class="gias-tabs-wrapper">
            <div class="tab-wrap" id="calendar-tab-wrap">
                <ul class="gias-tabs">
                    <li class="gias-tabs__list-item gias-tabs__list-item--selected">
                        <a href="#" class="gias-tabs__tab">Opening calendar</a>
                    </li>
                    <li class="gias-tabs__list-item">
                        @Html.ActionLink("Academy search", "SearchAcademyOpenings", "AcademyOpenings",
                            new { area = "Establishments", establishmentTypeId }, new { @class = "gias-tabs__tab" })
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <div id="calendar" class="tab-content">
            <form method="get" class="govuk-form-group month-selector">
                <input type="hidden" name="sortBy" value="@sortBy" />
                <input type="hidden" name="establishmentTypeId" value="@establishmentTypeId" />
                <label class="govuk-label" for="opening-date-filter">Opening date</label>
                <select id="opening-date-filter" name="month" class="govuk-select" onchange="this.form.submit()">
                    <option value="">All months</option>
                    @foreach (var m in Model.MonthOptions)
                    {
                        <option value="@m.Value" @(m.Selected ? "selected" : "")>@m.Text</option>
                    }
                </select>
                <noscript><button type="submit" class="govuk-button">Filter</button></noscript>
            </form>
            <table class="govuk-table gias-table academy-openings sortable-table" id="academy-openings-table">
                <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header cell-openingdate">
                        <a href="@sortLink("OpenDate")" class="govuk-link">Opening date</a>
                    </th>
                    <th scope="col" class="govuk-table__header cell-urn">
                        <a href="@sortLink("Urn")" class="govuk-link">URN</a>
                    </th>
                    <th scope="col" class="govuk-table__header cell-establishmentname">
                        <a href="@sortLink("EstablishmentName")" class="govuk-link">Establishment name</a>
                    </th>
                    <th scope="col" class="govuk-table__header cell-establishmenttype">
                        <a href="@sortLink("EstablishmentType")" class="govuk-link">Establishment type</a>
                    </th>
                    <th scope="col" class="govuk-table__header cell-predecessorurn">
                        <a href="@sortLink("PredecessorUrn")" class="govuk-link">Predecessor URN</a>
                    </th>
                    <th scope="col" class="govuk-table__header cell-predecessorname">
                        <a href="@sortLink("PredecessorName")" class="govuk-link">Predecessor name</a>
                    </th>
                </tr>
                </thead>
                <tbody class="govuk-table__body">
                @foreach (var entry in Model.AcademyOpenings.Items)
                {
                    <tr class="govuk-table__row">
                        <td class="govuk-table__cell cell-openingdate">@entry.OpenDate.ToString("d MMMM yyyy")</td>
                        <td class="govuk-table__cell cell-urn">
                            @Html.ActionLink(entry.Urn.ToString(),
                                "Details", "Establishment",
                                new { id = entry.Urn, area = "Establishments" }, new { @class = "govuk-link" })
                        </td>
                        <td class="govuk-table__cell cell-establishmentname">@entry.EstablishmentName</td>
                        <td class="govuk-table__cell cell-establishmenttype">@entry.EstablishmentType</td>
                        <td class="govuk-table__cell cell-predecessorurn">
                            @if (!string.IsNullOrWhiteSpace(entry.PredecessorUrn))
                            {
                                @Html.ActionLink(entry.PredecessorUrn, "Details", "Establishment", new { id = entry.PredecessorUrn, area = "Establishments" }, new { @class = "govuk-link" })
                            }
                        </td>
                        <td class="govuk-table__cell cell-predecessorname">@entry.PredecessorName</td>
                        <td class="govuk-table__cell cell-edit">
                            @Html.ActionLink("Edit", "EditAcademyOpening", "AcademyOpenings",
                                new { urn = entry.Urn, area = "Establishments" }, new { @class = "govuk-link" })
                        </td>
                    </tr>
                }
                </tbody>
            </table>

            <div class="lower-pagination push--bottom">
                <nav role="navigation" aria-label="Pagination" class="pagination">
                    <p class="pagination-info">
                        Showing @Model.AcademyOpenings.FirstResultIndex
                        to @Model.AcademyOpenings.LastResultIndex of @Model.AcademyOpenings.Count
                    </p>
                    <ul class="pagination-links">
                        @if (Model.Skip > 0)
                        {
                            <li>
                                @Html.RouteLink("<< Previous", "ManageAcademyOpenings", new { skip = Model.Skip - Model.Take, sortBy = sortBy, establishmentTypeId, month }, new { @class = "pagination-prev" })
                            </li>
                        }
                        @if (Model.Skip + Model.Take < Model.Count)
                        {
                            <li>
                                @Html.RouteLink("Next >>", "ManageAcademyOpenings", new { skip = Model.Skip + Model.Take, sortBy = sortBy, establishmentTypeId, month }, new { @class = "pagination-next"})
                            </li>
                        }
                    </ul>
                </nav>
            </div>
            @helpers.BackToTopLink()
        </div>
    </div>
</div>


@section ViewScripts
{
    <script src="@Html.Raw(Html.GetWebpackScriptUrl("manage-academy-openings.*.js"))"></script>
}
