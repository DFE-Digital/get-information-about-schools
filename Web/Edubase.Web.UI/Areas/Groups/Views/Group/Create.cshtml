@using Edubase.Common;
@using Edubase.Common.Text
@using Edubase.Services.Domain
@using VM = Edubase.Web.UI.Areas.Groups.Models.CreateEdit.GroupEditorViewModel;
@using L = Edubase.Services.Enums.eLookupGroupType;
@model VM
@{
    ViewBag.bodyClasses = "create-edit-school";
    ViewBag.hideLogo = true;
    ViewBag.SiteSection = "tools";
    ViewBag.Title = string.Concat(!ViewData.ModelState.IsValid ? "Error: " : string.Empty, Model.PageTitle);
}

@section BreadCrumbs
{
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <div class="govuk-breadcrumbs">
            <ol class="govuk-breadcrumbs__list">
                <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
                <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Tools", "Index", "Tools", new {area = ""}, new { @class = "govuk-breadcrumbs__link" })</li>
            </ol>
        </div>
    </div>
</div>
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        @Html.Partial("_ValidationSummary", ViewData.ModelState)
        <h1 class="govuk-heading-xl">@string.Concat(Model.PageTitle, "s")</h1>
    </div>
</div>


@using (Html.BeginForm("Create", "Group", new { area = "Groups", type = Model.GroupTypeMode }, FormMethod.Post))
{
    @Html.HiddenFor(x => x.GroupUId)
    @Html.HiddenFor(x => x.GroupTypeMode)
    @Html.HiddenFor(x => x.SaveMode)
    @Html.HiddenFor(x => x.ProcessedWarnings)

<div class="govuk-grid-row">
    @if (Model.EntityName.ToLower() == "children's centre groups or children's centre collaborations")
    {
        <div class="govuk-grid-column-two-thirds">
            <p>Set up a new children's centre group or children's centre collaboration record.</p>
        </div>
    }
    @if (Model.EntityName.ToLower() == "foundation trust")
    {
        <div class="govuk-grid-column-two-thirds">
            <p>Set up a new foundation trust record by completing the fields below and selecting create foundation trust.</p>
        </div>
    }
    @if (Model.EntityName.ToLower() == "federation")
    {
        <div class="govuk-grid-column-two-thirds">
            <p>Set up a new federation record by completing the fields below and selecting create federation.</p>
        </div>
    }
    @if (Model.EntityName.ToLower() == "academy trusts")
    {
        <div class="govuk-grid-column-two-thirds">
            <p>Use this tool to create a new @Model.EntityName</p>
        </div>
    }
    @if (Model.EntityName.ToLower() == "academy sponsors")
    {
        <div class="govuk-grid-column-two-thirds">
            <p>Set up a new academy sponsor record by completing the fields below and selecting create academy sponsor.</p>
        </div>
    }
    <div class="govuk-grid-column-one-half">
        @if (Model.EntityName.ToLower() == "federation")
        {
            <h2 class="govuk-heading-m">New @Model.EntityName.ToLower() details</h2>
        }
        else
        {
            <h2 class="govuk-heading-m">@Model.EntityName.ToSentenceCase() details</h2>
        }
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.GroupName)">
            <label for="GroupName" class="govuk-label">@Model.GroupTypeLabelPrefix name</label>
            @Html.ValidationMessageFor(x => x.GroupName, null, new { @class = "govuk-error-message" })
            @Html.TextBoxFor(x => x.GroupName, new { @class = "govuk-input" })
        </div>
        @Html.HiddenFor(x => x.GroupTypeId)
        @Html.EditorFor(x => x.OpenDate, new { title = Model.OpenDateLabel, fieldsetClassName = "edit-date-fieldset" })

        @if (Model.GroupUId.HasValue)
        {
            <div class="govuk-form-group">
                <label class="govuk-label">
                    <abbr title="Unique Identifier">UID</abbr>
                </label>
                <input value="@Model.GroupUId" disabled="disabled" class="govuk-input" />
            </div>
        }

        @if (Model.GroupType.Equals(L.SchoolSponsor))
        {
            <div class="govuk-form-group  @Html.ValidationCssClassFor(x => x.GroupId)">
                <label for="GroupId" class="govuk-label">Group ID</label>
                @Html.ValidationMessageFor(x => x.GroupId, null, new { @class = "govuk-error-message" })
                @Html.TextBoxFor(x => x.GroupId, new { @class = "govuk-input", maxlength = 120 })
            </div>
        }
    </div>
</div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="button-row">
                <button type="submit" name="action" class="govuk-button" id="create-submit" value="@VM.ActionSave">Create @Model.EntityName</button>
                @Html.ActionLink("Cancel", "Index", "Tools", new {area = ""}, new {@class = "govuk-button govuk-button--secondary cancel", data_module="govuk-button"})
            </div>
        </div>
    </div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            @Html.Partial("Warnings")
        </div>
    </div>
}

@section ViewScripts
{
    <script nonce="@Html.ScriptNonce()">
        var $fields = $('#content').find('.form-control');
        var exitAttached = false;

        $fields.on('change', function () {
            if (!exitAttached) {
                DfE.Util.showUnload('Are you sure you want to leave this page? Any unsaved changes will be lost');
                exitAttached = true;
            }

        });
    </script>

    @if (Model.WarningsToProcess.Any(x => x.Code == ApiWarningCodes.GROUP_WITH_SIMILAR_NAME_FOUND))
    {
        <script nonce="@Html.ScriptNonce()">
            (function() {
                var mask = $('#warning-modal-overlay-0');
                var modal = $('#warning-modal-content-0');


                $('#warning-exit-overlay-0, #overlay-cancel-0').on('click',
                    function(e) {
                        e.preventDefault();
                        mask.addClass('hidden');
                        modal.addClass('hidden');
                    });

                $('#overlay-proceed-0').on('click',
                    function(e) {
                        $('#create-submit').click();
                    });
            }());

                // Focus on main CTA when modal available
            if ($('#warning-modal-content-0').length > 0) {
                $('.modal-exit').focus();
            }
        </script>
    }
}
