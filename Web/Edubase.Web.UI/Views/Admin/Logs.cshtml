@using Edubase.Web.UI.Models.Admin
@using Edubase.Common
@model LogMessagesViewModel
@{ 
    ViewBag.bodyClasses = "view-logs";
}
<h1 class="heading-medium">View log messages</h1>

@using (Html.BeginForm("Logs", "Admin", FormMethod.Get))
{
    <div class="grid-row">
        <div class="column-half">
            <div class="form-group">
                <label class="form-label font-small" for="filter">
                    Date filter
                </label>
                <input class="form-control" id="filter" name="date" type="text" value="@Model.DateFilter" autocomplete="off" placeholder="yyyyMMdd">
            </div>
            <input type="submit" value="Filter" class="button button-next" />
        </div>
    </div>
}

@if (Model.Messages.Count() == 0)
{
    <p>No messages found.</p>
}
else
{
    <table class="logs">
        <thead>
            <tr>
                <th>Date/time</th>
                <th>Http method</th>
                <th>Environment</th>
                <th>Browser</th>
                <th>Username</th>
                <th>Url</th>
                <th>Text</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var m in Model.Messages)
            {
                <tr>
                    <td>@m.DateUtc.ToString("dd MMM yy HH:mm:ss")</td>
                    <td>@(m.HttpMethod ?? "--")</td>
                    <td>@(m.Environment ?? "--")</td>
                    <td>@(m.UserAgent.Ellipsis(45) ?? "--")</td>
                    <td>@(m.UserName ?? "--")</td>
                    <td title="m.Url">@(Uri.IsWellFormedUriString(m.Url, UriKind.Absolute) ? (new Uri(m.Url).PathAndQuery).Ellipsis(50) : "" ?? "--")</td>
                    <td title="@m.Text">@(m.Text.Ellipsis(50) ?? "--")</td>
                    <td>@Html.ActionLink("View", "LogDetail", new { id = m.Id })</td>
                </tr>
            }
        </tbody>
    </table>
}

<br />
<br />

@if (!string.IsNullOrWhiteSpace(Model.SkipToken))
{
    @Html.ActionLink("Next", "Logs", new { skipToken = Model.SkipToken, date = Model.DateFilter })
}