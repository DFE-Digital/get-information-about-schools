@using Edubase.Services.Enums
@model ChangeHistoryViewModel

@{
    var request = HttpContext.Current.Request;
    var sortDir = "desc";
    var sortDirText = "a descending order";
    var sortField = "requestedDateUtc";

    if (request.QueryString["sortby"] != null)
    {
        var sortByQuery = (request.QueryString["sortby"] ?? "");

        sortField = sortByQuery.Contains("-") ? sortByQuery.Substring(0, sortByQuery.IndexOf("-")) : sortByQuery;
        sortDir = sortByQuery.Contains("asc") ? "asc" : "desc";
        sortDirText = sortByQuery.Contains("asc") ? "an ascending order" : "a descending order";
    }

    var sortedDescription = " is sorted in " + sortDirText + ". Click to change order. All other columns are sortable.";
    var unsortedDescription = ". Click to sort data by this column.";

     var tableColumns = new List<Tuple<string, string, bool>>
   {
       Tuple.Create("requestedDateUtc", "Date changed", true),
       Tuple.Create("uid", "Group UID", false),
       Tuple.Create("groupName", "Group", false),
       Tuple.Create("requestType", "Request type", true),
       Tuple.Create("change", "Change", true),
       Tuple.Create("originatorUserName", "Suggested by", true),
   };
}

@if (Model.Items.Any())
{
    <div>
        @Html.Partial("_GenericPaginationV2", Model)
    </div>
    <table class="edubase-table sortable-table change-history table-tight" id="changes-table">
        <caption class="visuallyhidden">Group change history search results</caption>
        <thead>
            <tr>
            @foreach (var tableColumn in tableColumns)
            {
                if (tableColumn.Item3 || !Model.SingleGroup)
                {
                    <th scope="col" class="cell-@tableColumn.Item1.ToLower()">
                        <a href="@Url.SortUrl(tableColumn.Item1, "#change-history")"
                        class="@Html.Conditional(sortField == tableColumn.Item1, "selected-sort") @Html.Conditional(sortDir.Contains("asc"), "sorted-asc") @Html.Conditional(sortDir.Contains("desc"), "sorted-desc")"
                        aria-label="@string.Concat(tableColumn.Item2, (sortField == tableColumn.Item1 ? sortedDescription : unsortedDescription))">@tableColumn.Item2</a>
                    </th>
                }
            }
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Items)
            {
                <tr>
                    <td data-label="Date changed">@(item.RequestedDate?.ToString("dd/MM/yyyy"))</td>
                    @if (!Model.SingleGroup)
                    {
                        <td data-label="Group UID">@Html.RouteLink(item.GroupUId.ToString(), "GroupDetails", new { id = item.GroupUId })</td>
                        <td data-label="Group">@Html.RouteLink(item.GroupName, "GroupDetails", new { id = item.GroupUId })</td>
                    }
                    <td data-label="Request type">@item.RequestType</td>
                    <td data-label="Change">
                        <dl class="key-value-list">
                            @if (item.RequestType == GroupChangeRequestType.GroupChange)
                            {
                                <dt>Field</dt>
                                <dd>@item.FieldName</dd>
                                <dt>Old value</dt>
                                <dd>@item.OldValue</dd>
                                <dt>New value</dt>
                                <dd>@item.NewValue</dd>
                            }
                            else
                            {
                                <dt>Establishment</dt>
                                <dd>@item.LinkUrn @item.LinkEstablishmentName</dd>
                                <dt>Link date</dt>
                                <dd>@(item.LinkDateUtc?.ToString("dd/MM/yyyy"))</dd>
                                <dt>Type</dt>
                                <dd>@(item.LinkType?.ToString() ?? "not recorded")</dd>
                            }

                        </dl>
                    </td>
                    <td data-label="Suggested by" class="table-tight--break-word">@item.SuggesterName</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="lower-pagination push--bottom">
        @Html.Partial("_GenericPaginationV2", Model)
    </div>
    @helpers.BackToTopLink()
}
else
{
    <p>There are no results for your search. Please change the filters to adjust your search, or go @Html.ActionLink("back to the search page", "Index", "ChangeHistory", new { area = "", SelectedTab = "Groups" }, null) to start again.</p>
}
