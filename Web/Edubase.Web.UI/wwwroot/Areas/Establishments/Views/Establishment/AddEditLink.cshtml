@using System.Linq
@model EditEstablishmentLinksViewModel
@{
    Layout = "_EditLayoutPage.cshtml";
}

@using (Html.BeginRouteForm("SaveEstabLink", new { urn = Model.Urn, linkid = Model.ActiveRecord.Id }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Urn)
    @Html.HiddenFor(x => x.ActiveRecord.Id)
    @Html.HiddenFor(x => x.ActiveRecord.Urn)
    @Html.HiddenFor(x => x.StateToken);
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h2 class="govuk-heading-m">Link to other establishment</h2>
            <h3 class="govuk-heading-s">Establishment to be linked</h3>

            <ul class="govuk-list">
                <li>@Model.ActiveRecord.EstablishmentName</li>
                <li>@Model.ActiveRecord.Address</li>
                <li><abbr title="Unique Reference Number">URN</abbr>: @Model.ActiveRecord.Urn</li>
            </ul>

            @if (Model.IsNew)
            {
                <p class="govuk-body-s">
                    <a href="@Url.RouteUrl("EditEstabLinks_SearchForEstablishment", new { id = Model.Urn })">Wrong establishment?</a>
                </p>
            }
        </div>
    </div>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <h3 class="govuk-heading-m">Relationship</h3>
            <h4 class="govuk-heading-s">Relationship of:</h4>
            <p>
                @Model.Name, <abbr title="Unique Reference Number">URN</abbr>: @Model.Urn
                <strong>to</strong>
                @Model.ActiveRecord.EstablishmentName, <abbr title="Unique Reference Number">URN</abbr>: @Model.ActiveRecord.Urn
            </p>
        </div>
    </div>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-one-half">
            <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.ActiveRecord.LinkTypeId)">
                <label for="ActiveRecord_LinkTypeId" class="govuk-visually-hidden">Type of link</label>
                @Html.ValidationMessageFor(x => x.ActiveRecord.LinkTypeId, null, new { @class = "govuk-error-message"})
                @Html.DropDownListFor(x => x.ActiveRecord.LinkTypeId, Model.LinkTypes, "", new { @class = "govuk-select" })
            </div>
            @Html.EditorFor(x => x.ActiveRecord.LinkDateEditable, new { title = "Date of link", editorPrefix = nameof(Model.ActiveRecord), fieldsetClassName = "edit-date-fieldset" })
        </div>
    </div>


    if (Model.IsNew)
    {
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                <div class="govuk-form-group">
                    <div class="govuk-checkboxes">
                        @FormHelpers.GiasCheckbox("true", "ActiveRecord.CreateReverseLink","Add a reverse link to show on new establishments page", null, new { id = "ActiveRecord_CreateReverseLink", @class = "govuk-checkboxes__input"})
                            @* @Html.CheckBoxFor(x => x.ActiveRecord.CreateReverseLink, new {@class = "govuk-checkboxes__input"}) *@
                            @* @Html.LabelFor(x => x.ActiveRecord.CreateReverseLink, "Add a reverse link to show on new establishments page") *@
                    </div>
                </div>
            </div>
            <div id="create-reserve-link" class="@Html.Conditional(!Model.ActiveRecord.CreateReverseLink, "hidden")">
                <div class="govuk-grid-column-one-half">
                    <h4 class="govuk-heading-s">Relationship of:</h4>
                    <p class="link-relationship">
                        @Model.ActiveRecord.EstablishmentName, <abbr title="Unique Reference Number">URN</abbr>: @Model.ActiveRecord.Urn
                        <strong>to</strong>
                        @Model.Name, <abbr title="Unique Reference Number">URN</abbr>: @Model.Urn
                    </p>
                    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.ActiveRecord.ReverseLinkTypeId)">
                        <label for="ActiveRecord_ReverseLinkTypeId" class="govuk-visually-hidden">Type of link</label>
                        @Html.ValidationMessageFor(x => x.ActiveRecord.ReverseLinkTypeId, null, new { @class = "govuk-label"})
                        @Html.DropDownListFor(x => x.ActiveRecord.ReverseLinkTypeId, Model.ReverseLinkTypes, "", new {@class = "govuk-select"})
                    </div>

                    @Html.EditorFor(x => x.ActiveRecord.ReverseLinkDateEditable, new {title = "Date of link", editorPrefix = nameof(Model.ActiveRecord), @readonly = Model.ActiveRecord.ReverseLinkSameDate, fieldsetClassName = "edit-date-fieldset linked-estab-date" })
                </div>
                <div class="govuk-grid-column-two-thirds">
                    <div class="govuk-form-group">
                        <div class="govuk-checkboxes">
                            @FormHelpers.GiasCheckbox("true", "ActiveRecord.ReverseLinkSameDate", "Use same dates", null, new { id = "ActiveRecord_ReverseLinkSameDate" })
                            @* @Html.CheckBoxFor(x => x.ActiveRecord.ReverseLinkSameDate) *@
                            @* @Html.LabelFor(x => x.ActiveRecord.ReverseLinkSameDate, "Use same dates") *@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

            <div class="button-row">
                <button id="save-submit" name="act" value="save" class="govuk-button js-allow-exit">Save link</button>
                @if (!Model.IsNew)
                {
                    <button name="act" value="delete" class="govuk-button govuk-button--secondary estab-link-delete">Delete</button>
                }
                <a id="cancel-button" href="@Url.RouteUrl("EditEstabLinks", new { id = Model.Urn })" class="govuk-button govuk-button--secondary">Cancel</a>
            </div>
}

@section ViewScripts{
    <script src="@Html.Raw(Html.GetWebpackScriptUrl("edit-establishment-links.*.js"))"></script>
}
