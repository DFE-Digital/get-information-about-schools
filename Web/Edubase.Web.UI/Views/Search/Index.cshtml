@using Edubase.Web.UI.Models.Search;
@using eStatus = Edubase.Services.Enums.eLookupEstablishmentStatus;
@using VM = Edubase.Web.UI.Models.Search.SearchViewModel;
@using Edubase.Web.UI.Helpers;
@model VM
    
@{
    ViewBag.bodyClasses = "schools-search-page search-page";
    ViewBag.hideLogo = true;
}

<div class="grid-row">
    <div class="column-full">
        @{ Html.RenderPartial("Partials/_SearchHeader"); }
        
        @Html.ValidationSummary(false, null, new { @class = "error-summary" })
    </div>
    <div class="column-full">
        <div class="horizontal-tabs-wrapper">
            <div class="tab-wrap search-tabs">
                <ul class="horizontal-tabs">
                    <li>
                        <a href="/?SelectedTab=Establishments" class="horizontal-tab estab @((Model.SelectedTab == SearchViewModel.Tab.Establishments) ? "selected-tab" : "" )">
                            Find an establishment
                        </a>
                    </li>
                    <li>
                        <a href="/?SelectedTab=Groups" class="horizontal-tab group @((Model.SelectedTab == SearchViewModel.Tab.Groups) ? "selected-tab" : "" )">
                            Find an establishment group
                        </a>
                    </li>
                    <li>
                        <a href="/?SelectedTab=Governors" class="horizontal-tab governors @((Model.SelectedTab == SearchViewModel.Tab.Governors) ? "selected-tab" : "" )">Find a governor</a>
                    </li>
                </ul>
            </div>

            <div class="tab-content-wrapper horizontal-tabs-content">
                <div id="establishments" class="tab-content @((Model.SelectedTab != SearchViewModel.Tab.Establishments) ? "hidden-tab-content" : "")" aria-hidden="@(Model.SelectedTab != SearchViewModel.Tab.Establishments)">

                    @{ Html.RenderPartial("Partials/_EstablishmentSearch"); }

                </div>

                <div id="groups" class="tab-content @((Model.SelectedTab != SearchViewModel.Tab.Groups) ? "hidden-tab-content" : "")" aria-hidden="@(Model.SelectedTab != SearchViewModel.Tab.Groups)">
                    @{ Html.RenderPartial("Partials/_GroupSearch"); }
                   
                </div>

                <div id="governors" class="tab-content @((Model.SelectedTab != SearchViewModel.Tab.Governors) ? "hidden-tab-content" : "")" aria-hidden="@(Model.SelectedTab != SearchViewModel.Tab.Governors)">
                    @{ Html.RenderPartial("Partials/_GovernorSearch");}

                </div>
            </div>

        </div>
        @* Tool tip texts - Potential TODO add to resource file *@
    @if (User.Identity.IsAuthenticated || Model.SelectedTab != SearchViewModel.Tab.Governors)
    {
        Html.RenderPartial("Partials/_HelpText");
        
    }

    </div>

</div>

@section ViewScripts{
    <script src="/public/dfeagiledevops-typeahead/dist/typeahead.bundle.min.js"></script>
    <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyC5YvjNVqceizjjEi95rzhCCjwsCVrb8Gw"></script>
    <script type="text/javascript">
        var jScriptVersion;
        window.localAuthorities = @Html.Json(Model.LocalAuthorities);

        (function($) {
            var defaults = {
                suggestionTemplate: function(suggestion) {
                    return '<div><a href="#">' + suggestion + '</a></div>';
                },
                logoUrl: 'https://maps.gstatic.com/mapfiles/api-3/images/powered-by-google-on-white3.png',
                locationInput: 'LocationSearchModel_AutoSuggestValue',
                minChars: 2
            };

            function Gplaces(el, options) {
                this.el = el;
                this.opts = $.extend({}, defaults, options);
                this.init();
            }

            var autocompleteService = new google.maps.places.AutocompleteService();
            var placesService = new google.maps.places.PlacesService($('<div />')[0]);
            var predictionsOld;
            var locationSelected = false;

            Gplaces.prototype = {
                init: function() {
                    var $el = $(this.el),
                        opts = this.opts,
                        self = this;


                    $el.typeahead({
                            hint: false,
                            highlight: true,
                            highlightAliases: [
                                ["st. ", "st ", "saint "]
                            ],
                            minLength: opts.minChars,
                            classNames: {
                                menu: 'tt-menu',
                                highlight: 'suggestion-highlight'
                            },
                            ariaOwnsId: "arialist_" + DfE.Util.randomNumber()
                        },
                        {
                            limit: 10,
                            source: this.places,
                            templates: {
                                suggestion: opts.suggestionTemplate,
                                footer: '<div class="places-footer"><img src="' + opts.logoUrl + '"></div>'
                            }
                        });

                    $el.on('typeahead:selected',
                        function(e, address) {
                            self.itemSelect(e, address);
                        });

                    $el.on('typeahead:open',
                        function(e) {
                            $el.nextAll('.tt-menu').find('.tt-suggestion').slice(0, 1).addClass('tt-cursor');
                        });

                    $el.on('typeahead:render',
                        function() {
                            $el.nextAll('.tt-menu').find('.tt-suggestion').slice(0, 1).addClass('tt-cursor');
                        });

                    $el.on('keydown',
                        function(e) {
                            var $field = $(this);
                            if (e.which === 13) {
                                e.preventDefault();
                                e.stopPropagation();

                                if ($(this).nextAll('.tt-menu').find('.tt-suggestion').length > 0) {
                                    $(this).nextAll('.tt-menu').find('.tt-cursor').click();

                                } else {
                                    $field.parents('form').find('.search-button').click();
                                }
                            }
                        });

                    $('#location-search-submit').on('click', function (e) {
                        if (!locationSelected) {
                            e.preventDefault();

                            if ($('#LocationSearchModel_Text').val() !== '') {
                                $el.nextAll('.tt-menu').find('.tt-suggestion').slice(0, 1).click();
                                window.setTimeout(function() {
                                    $('#location-search-submit').click();
                                },100);
                                
                            }
                        }
                        
                    
                    });

                },
                places: function(q, cb, fc) {
                    var c = new Array();
                    var filteredPredictions;
                    autocompleteService.getPlacePredictions(
                        { input: q, types: ['geocode'], componentRestrictions: { country: 'GB' } },
                        function(predictions, status) {
                            if (status === google.maps.places.PlacesServiceStatus.OK) {
                                filteredPredictions = predictions.filter(function(p) {
                                    if ($.inArray('premise', p.types) === -1) {
                                        return p;
                                    }
                                });
                                predictionsOld = filteredPredictions;
                            }
                            if (!filteredPredictions) {
                                $(window).trigger({
                                    type: 'noLocationMatch',
                                    q: q
                                });
                                return;
                            } else {
                                $('#searchby-location-ref').find('.warning-message').remove();
                                $.map(filteredPredictions,
                                    function(prediction) {
                                        c.push(prediction.description);
                                    });
                                fc(c);
                            }

                        });
                },
                itemSelect: function (e, address) {
                    locationSelected = true;
                    var self = this;
                    var ref = $.grep(predictionsOld,
                        function(prediction) {
                            return prediction.description === address;
                        })[0].reference;

                    placesService.getDetails({ reference: ref },
                        function(result, status) {
                            self.detailCallback(result, status);
                        });
                },
                detailCallback: function(result, status) {
                    document.getElementById(this.opts.locationInput).value = result.geometry.location.lat() +
                        ',' +
                        result.geometry.location.lng();

                }

            };

            $.fn.gPlaces = function(options) {
                return this.each(function() {
                    if (!$.data(this, 'gplaces')) {
                        $.data(this, 'gplaces', new Gplaces(this, options));
                    }

                });
            }
        }($));
        if (!$('html').hasClass('lt-ie9')) {
            $('#LocationSearchModel_Text').gPlaces();
            DfE.Views.schoolSearch.init();
        }
    </script>

}

