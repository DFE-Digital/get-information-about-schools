@using Edubase.Web.UI.ValueConverters;
@using Edubase.Web.UI.Areas.Establishments.Models.Search;
@using Edubase.Common;
@using ET = Edubase.Services.Enums.eLookupEstablishmentType;
@model EstablishmentDetailViewModel

<div class="gias-summary-list__row">
    <dt class="gias-summary-list__key">Address:</dt>
    <dd class="gias-summary-list__value">@Model.GetAddress()</dd>
</div>
<div class="gias-summary-list__row">
    <dt class="gias-summary-list__key">Local authority:</dt>
    <dd class="gias-summary-list__value">
        @if (Model.Establishment.LocalAuthorityId.HasValue)
        {
            <a href="@Url.Action("Index", "EstablishmentsSearch", new {area = "Establishments"})?searchtype=ByLocalAuthority&@EstablishmentSearchViewModel.BIND_ALIAS_LAIDS=@Model.Establishment.LocalAuthorityId">
                @Model.LocalAuthorityName
            </a>
            <text>(@Model.LocalAuthorityCode)</text>
        }
    </dd>
</div>
<div class="gias-summary-list__row">
    <dt class="gias-summary-list__key">@Html.Raw(Model.DisplayPolicy.HeadteacherLabel):</dt>
    <dd class="gias-summary-list__value">
        @if (Model.DisplayPolicy.HeadTitleId)
        {
            <text>@Model.HeadTitleName.Replace("Not recorded", string.Empty)</text>
        }
        @if (Model.DisplayPolicy.HeadFirstName)
        {
            <text>@Model.Establishment.HeadFirstName</text>
        }
        @if (Model.DisplayPolicy.HeadLastName)
        {
            <text>@Model.Establishment.HeadLastName</text>
        }
    </dd>
</div>

@if (Model.DisplayPolicy.HeadAppointmentDate)
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">@Html.Raw(Model.DisplayPolicy.HeadteacherLabel) appointment date:</dt>
        <dd class="gias-summary-list__value">
            @(Model.Establishment.HeadAppointmentDate?.ToString("d MMMM yyyy") ?? "Not recorded")
        </dd>
    </div>
}

@if (Model.DisplayPolicy.HeadEmailAddress)
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">@Html.Raw(Model.DisplayPolicy.HeadEmailAddressLabel):</dt>
        <dd class="gias-summary-list__value">
            @(Model.Establishment.HeadEmailAddress ?? "Not recorded")
        </dd>
    </div>
}

@if (Model.DisplayPolicy.AgeRange)
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">
            Age range:
            <a href="#help-text-age-range" class="help-icon modal-link">
                <span class="govuk-visually-hidden">Help with age range field</span>
                @helpers.DialogHiddenPrompt()
            </a>
        </dt>
        <dd class="gias-summary-list__value">
            @if (Model.Establishment.StatutoryLowAge.HasValue && Model.Establishment.StatutoryHighAge.HasValue)
            {
                <text>@(Model.Establishment.StatutoryLowAge) to @(Model.Establishment.StatutoryHighAge)</text>
            }
        </dd>
    </div>
}

<div class="gias-summary-list__row">
    <dt class="gias-summary-list__key">Phase of education:</dt>
    <dd class="gias-summary-list__value">
        @Model.EducationPhaseName
    </dd>
</div>
@if (Model.DisplayPolicy.TypeId)
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">@(Model.DisplayPolicy.EstablishmentTypeLabel):</dt>
        <dd class="gias-summary-list__value">
            @Model.TypeName
        </dd>
    </div>
}

@if (Model.DisplayPolicy.FurtherEducationTypeId)
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">Further education type:</dt>
        <dd class="gias-summary-list__value">
            @Model.FurtherEducationTypeName
        </dd>
    </div>
}

@foreach (var group in Model.Groups.OrderByDescending(g => Model.GetGroupFieldLabel(g)))
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">@(Model.GetGroupFieldLabel(group)):</dt>
        <dd class="gias-summary-list__value">
            @Html.ActionLink(group.Name, "Details", "Group", new {id = group.GroupUId, area = "Groups"}, null)
        </dd>
    </div>
}

@if (Model.DisplayPolicy.GenderId)
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">Gender of entry:</dt>
        <dd class="gias-summary-list__value">
            @Model.GenderName
        </dd>
    </div>
}
<div class="gias-summary-list__row">

    <dt class="gias-summary-list__key">ID:</dt>
    <dd class="gias-summary-list__value">
        <abbr title="Unique Reference Number">URN</abbr>: @Model.Establishment.Urn,
        @if (Model.DisplayPolicy.EstablishmentNumber)
        {
            <text>DfE number: @Model.Establishment.GetLAESTAB(Model.LocalAuthorityCode)<br/></text>
        }
        @if (Model.DisplayPolicy.UKPRN && Model.Establishment.UKPRN.HasValue)
        {
            <text><abbr title="UK Provider Reference Number">UKPRN</abbr>: @Model.Establishment.UKPRN</text>
        }
    </dd>
</div>
<div class="gias-summary-list__row">
    <dt class="gias-summary-list__key">Establishment status:</dt>
    <dd class="gias-summary-list__value">
        @if (Model.IsClosed)
        {
            <span class="pending-closure">
                @Model.StatusName
            </span>
        }
        else
        {
            @Model.StatusName
        }
    </dd>
</div>
@if (Model.DisplayPolicy.AdmissionsPolicyId)
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">Admissions policy:</dt>
        <dd class="gias-summary-list__value">
            @Model.AdmissionsPolicyName
        </dd>
    </div>
}

@if (Model.DisplayPolicy.Contact_WebsiteAddress)
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">Website:</dt>
        <dd class="gias-summary-list__value">
            @if (Model.Establishment.Contact_WebsiteAddress == null)
            {
                <text>Not recorded</text>
            }
            else
            {
                <a href="@WeblinkConverter.Convert(Model.Establishment.Contact_WebsiteAddress)" target="_blank" rel="noreferrer noopener">
                    @WeblinkConverter.Convert(Model.Establishment.Contact_WebsiteAddress)
                </a>
                <text>(opens in new tab)</text>
            }
        </dd>
    </div>
}

@if (Model.DisplayPolicy.Contact_TelephoneNumber)
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">Telephone:</dt>
        <dd class="gias-summary-list__value">@(Model.Establishment.Contact_TelephoneNumber ?? "Not recorded")</dd>
    </div>
}

@if (Model.Establishment.TypeId.OneOfThese(ET.SixthFormCentres, ET.FurtherEducation, ET.InstitutionFundedByOtherGovernmentDepartment))
{
    @OtherServicesLinks()
}

@if (Model.DisplayPolicy.OfstedRatingId)
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">Ofsted rating:</dt>
        <dd class="gias-summary-list__value">
            @if (Model.Establishment.OfstedRatingId.HasValue)
            {
                <span class="highlighted-ofsted-rating">@Model.OfstedRatingName</span>
            }
            else
            {
                <span>Not recorded</span>
            }

            @if (Model.Establishment.OfstedInspectionDate.HasValue)
            {
                <span>(Last inspection: @(Model.Establishment.OfstedInspectionDate?.ToString("d MMMM yyyy")))</span>
            }
            @if (Model.OfstedRatingReportUrl != null)
            {
                <br />
                <a href="@Model.OfstedRatingReportUrl" target="_blank" rel="noreferrer noopener">
                    Ofsted report
                </a>
                <text>(opens in new tab)</text>
            }
        </dd>
    </div>
}

@if (Model.Establishment.TypeId.OneOfThese(ET.Academy1619SponsorLed,
    ET.Academy1619Converter, ET.AcademyAlternativeProvisionConverter,
    ET.AcademyConverter, ET.AcademySpecialConverter,
    ET.AcademySpecialSponsorLed, ET.AcademySponsorLed,
    ET.FreeSchools, ET.FreeSchools1619, ET.FreeSchoolsSpecial,
    ET.StudioSchools, ET.UniversityTechnicalCollege,
    ET.CityTechnologyCollege, ET.CommunitySchool,
    ET.FoundationSchool, ET.VoluntaryAidedSchool, ET.VoluntaryControlledSchool,
    ET.CommunitySpecialSchool, ET.FoundationSpecialSchool))
{
    @OtherServicesLinks()
}

@if (Model.DisplayPolicy.InspectorateId)
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">Inspectorate name:</dt>
        <dd class="gias-summary-list__value">
            @Model.InspectorateName
        </dd>
    </div>
}

@if (Model.Establishment.TypeId.OneOfThese(
    ET.OtherIndependentSchool,
    ET.NonmaintainedSpecialSchool,
    ET.OtherIndependentSpecialSchool,
    ET.OnlineProvider))
{
    @OtherServicesLinks()
}

@if (Model.DisplayPolicy.ProprietorBodyName)
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">Proprietor's name:</dt>
        <dd class="gias-summary-list__value">@Model.Establishment.ProprietorBodyName</dd>
    </div>

}

@helper OtherServicesLinks()
{
    <div class="gias-summary-list__row">
        <dt class="gias-summary-list__key">Data from other services:</dt>
        <dd class="gias-summary-list__value">
            <ul class="govuk-list govuk-body-s">
                @if (!Model.ShowCscp && !Model.ShowFinancialBenchmarking)
                {
                    <li>
                        Not applicable
                    </li>
                }
                @if (Model.ShowCscp)
                {
            <li>
                <a href="@Model.CscpURL" rel="noreferrer noopener" target="_blank">
                    Compare school and college performance
                </a> (opens in new tab)
            </li>
                }
                @if (Model.ShowFinancialBenchmarking)
                {
            <li>
                <a href="@Model.FinancialBenchmarkingURL" rel="noreferrer noopener" target="_blank">
                    Schools financial benchmarking
                </a> (opens in new tab)
            </li>
                }
            </ul>
        </dd>
    </div>
}
