@using Edubase.Web.UI.Models.Search;
@using eStatus = Edubase.Services.Enums.eLookupEstablishmentStatus;
@using VM = Edubase.Web.UI.Models.Search.SearchViewModel;
@using Edubase.Web.UI.Helpers;
@model VM



    <div>
    <h2 class="bold-small">Search by:</h2>        
        <ul>
            <li class="search-type-wrapper">
                
                @*@using (Html.BeginRouteForm("SearchResults", FormMethod.Get))
                {

                    @Html.HiddenFor(m => m.SelectedTab)
                    <fieldset class="search-toggle-panel">
                        <span class="radio-button-wrap">
                            <input type="radio" id="searchtype-gov-namerole" data-toggle-panel="#searchtype-gov-namerole-ref" />
                            <label class="edubase-button-radio" for="searchtype-gov-namerole">Name or role</label>
                        </span>
                        <div class="expanding-search-field" id="searchtype-gov-namerole-ref">
                            <div id="governor-search-wrapper">
                                <div class="edubase-search-element">
                                    <label for="forename" class="form-label">First name</label>
                                    @Html.TextBoxFor(x => x.GovernorSearchModel.Forename, new {maxlength = 120, id = "forename", @class = "form-control auto-clear"})
                                </div>
                                <div class="edubase-search-element">
                                    <label for="surname" class="form-label">Last name</label>
                                    @Html.TextBoxFor(x => x.GovernorSearchModel.Surname, new {maxlength = 120, id = "surname", @class = "form-control auto-clear"})
                                </div>
                                @if (User.Identity.IsAuthenticated)
                                {
                                    <div class="edubase-search-element">
                                        <label for="GovernorSearchModel_Gid" class="form-label">
                                            GID number
                                            <a href="#gid-help" class="icon-help">
                                                <span class="visuallyhidden">What does GID mean?</span>
                                            </a>
                                        </label>
                                        @Html.TextBoxFor(x => x.GovernorSearchModel.Gid, new {maxlength = 10, @class = "form-control auto-clear"})
                                    </div>
                                }
                                <div class="edubase-search-element">
                                    <label for="roleid" class="form-label">Role</label>
                                    <span class="form-hint">For example, trustee</span>

                                    <div class="form-group">
                                        <div class="scroll-wrapper">
                                            <div class="scroll-content" id="governor-roles">
                                                @foreach (var governorRole in Model.GovernorRoles)
                                                {
                                                    <label>
                                                        <input name="GovernorSearchModel.RoleId" value="@governorRole.Id.ToString()" type="checkbox"/>
                                                        @FormatHelpers.FirstCharToUpper(@governorRole.Name.ToLower())
                                                    </label>
                                                }
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="edubase-search-element">
                                    <span class="checkbox-wrap">
                                        @Html.CheckBoxFor(x => x.GovernorSearchModel.IncludeHistoric, new {id = "IncludeHistoric"})
                                        <label for="IncludeHistoric" class="edubase-button-checkbox">Include historic records (governors who stepped down in the last 12 months)</label>
                                    </span>
                                </div>


                                <div class="edubase-search-element">
                                    <button type="submit" id="governor-search-submit" class="button mobile-full-width" name="searchtype" value="@eSearchType.Governor">Search</button>
                                </div>

                                <p class="search-all-shortcut">
                                    <a href="@Url.Action("Index", "GovernorSearch", new {area = "Governors"})?@(QueryStringHelper.ToQueryString(VM.BIND_ALIAS_STATUSIDS, (int) eStatus.Open, (int) eStatus.OpenButProposedToClose))">Show all Governors</a>
                                </p>
                            </div>
                        </div>
                </fieldset>
                }*@

                @using (Html.BeginRouteForm("SearchResults", FormMethod.Get))
                {
                    @Html.HiddenFor(m => m.SelectedTab)
                    <fieldset class="search-toggle-panel">
                        <span class="radio-button-wrap">
                            <input type="radio" id="searchtype-gov-namerole" data-toggle-panel="#searchtype-gov-namerole-ref"/>
                            <label class="edubase-button-radio" for="searchtype-gov-namerole">Name or role</label>
                        </span>
                        <div class="expanding-search-field" id="searchtype-gov-namerole-ref">
                            <div class="edubase-search-element">
                                <label for="forename" class="form-label">First name</label>
                                @Html.TextBoxFor(x => x.GovernorSearchModel.Forename, new {maxlength = 120, id = "forename", @class = "form-control auto-clear"})
                            </div>
                            <div class="edubase-search-element">
                                <label for="surname" class="form-label">Last name</label>
                                @Html.TextBoxFor(x => x.GovernorSearchModel.Surname, new {maxlength = 120, id = "surname", @class = "form-control auto-clear"})
                            </div>

                            <div class="form-group">
                                <div class="scroll-wrapper">
                                    <div class="scroll-content" id="governor-roles">
                                        @foreach (var governorRole in Model.GovernorRoles)
                                        {
                                            <label>
                                                <input name="GovernorSearchModel.RoleId" value="@governorRole.Id.ToString()" type="checkbox"/>
                                                @FormatHelpers.FirstCharToUpper(@governorRole.Name.ToLower())
                                            </label>
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="form-group">
                                <span class="checkbox-wrap">
                                    @Html.CheckBoxFor(x => x.GovernorSearchModel.IncludeHistoric, new {id = "IncludeHistoricRole0"})
                                    <label for="IncludeHistoricRole0" class="edubase-button-checkbox">Include historic records (governors who stepped down in the last 12 months)</label>
                                </span>
                            </div>

                            <div class="form-group">
                                <button type="submit" id="governor-search-submit" class="button mobile-full-width" name="searchtype" value="@eSearchType.Governor">Search</button>
                            </div>
                        </div>
                    </fieldset>
                }
            </li>
        @if (User.Identity.IsAuthenticated)
        {
            <li>
            @using (Html.BeginRouteForm("SearchResults", FormMethod.Get))
            {
                @Html.HiddenFor(m => m.SelectedTab)
                <fieldset class="search-toggle-panel">
                    <span class="radio-button-wrap">
                        <input type="radio" id="searchtype-gov-refno" data-toggle-panel="#searchtype-gov-refno-ref" name="searchType"/>
                        <label class="edubase-button-radio" for="searchtype-gov-refno">Reference number</label>
                    </span>
                    <div class="expanding-search-field" id="searchtype-gov-refno-ref">
                        <div class="edubase-search-element">
                            <label for="GovernorSearchModel_Gid" class="form-label">
                                GID number
                                <a href="#gid-help" class="icon-help">
                                    <span class="visuallyhidden">What does GID mean?</span>
                                </a>
                            </label>
                            @Html.TextBoxFor(x => x.GovernorSearchModel.Gid, new {maxlength = 10, @class = "form-control auto-clear"})
                        </div>

                        <div class="form-group">
                            <span class="checkbox-wrap">
                                @Html.CheckBoxFor(x => x.GovernorSearchModel.IncludeHistoric, new {id = "IncludeHistoricRole1"})
                                <label for="IncludeHistoricRole1" class="edubase-button-checkbox">Include historic records (governors who stepped down in the last 12 months)</label>
                            </span>
                        </div>

                        <div class="form-group">
                            
                            <button type="submit" id="governor-search-submit-1" class="button mobile-full-width" name="searchtype" value="@eSearchType.Governor">Search</button>
                        </div>

                    </div>
                </fieldset>
            }
            </li>
        }
            <li>
            @using (Html.BeginRouteForm("SearchResults", FormMethod.Get))
            {
                @Html.HiddenFor(m => m.SelectedTab)

                <fieldset class="search-toggle-panel">
                    <span class="radio-button-wrap">
                        <input type="radio" id="searchtype-gov-all" data-toggle-panel="#searchtype-gov-all-ref"/>
                        <label class="edubase-button-radio" for="searchtype-gov-all">All governors</label>
                    </span>
                    <div class="expanding-search-field" id="searchtype-gov-all-ref">
                        <div class="form-group">
                            <span class="checkbox-wrap">
                                @Html.CheckBoxFor(x => x.GovernorSearchModel.IncludeHistoric, new {id = "IncludeHistoricRole2"})
                                <label for="IncludeHistoricRole2" class="edubase-button-checkbox">Include historic records (governors who stepped down in the last 12 months)</label>
                            </span>
                        </div>

                        <div class="form-group">                            
                            <button type="submit" id="governor-search-submit-2" class="button mobile-full-width" name="searchtype" value="@eSearchType.Governor">Search</button>
                        </div>
                    
                    </div>
                </fieldset>
                }
            </li>
        </ul>
    
    
    
    @*@using (Html.BeginRouteForm("SearchResults", FormMethod.Get))
    {
        @Html.HiddenFor(m => m.SelectedTab)
        <div id="governor-search-wrapper">
            <div class="edubase-search-element">
                <label for="forename" class="form-label">First name</label>
                @Html.TextBoxFor(x => x.GovernorSearchModel.Forename, new { maxlength = 120, id = "forename", @class = "form-control auto-clear" })
            </div>
            <div class="edubase-search-element">
                <label for="surname" class="form-label">Last name</label>
                @Html.TextBoxFor(x => x.GovernorSearchModel.Surname, new { maxlength = 120, id = "surname", @class = "form-control auto-clear" })
            </div>
            @if (User.Identity.IsAuthenticated)
            {
                <div class="edubase-search-element">
                    <label for="GovernorSearchModel_Gid" class="form-label">
                        GID number
                        <a href="#gid-help" class="icon-help">
                            <span class="visuallyhidden">What does GID mean?</span>
                        </a>
                    </label>
                    @Html.TextBoxFor(x => x.GovernorSearchModel.Gid, new { maxlength = 10, @class = "form-control auto-clear" })
                </div>
            }
            <div class="edubase-search-element">
                <label for="roleid" class="form-label">Role</label>
                <span class="form-hint">For example, trustee</span>

                <div class="form-group">
                    <div class="scroll-wrapper">
                        <div class="scroll-content" id="governor-roles">
                            @foreach (var governorRole in Model.GovernorRoles)
                            {
                                <label>
                                    <input name="GovernorSearchModel.RoleId" value="@governorRole.Id.ToString()" type="checkbox" />
                                    @FormatHelpers.FirstCharToUpper(@governorRole.Name.ToLower())
                                </label>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <div class="edubase-search-element">
                <span class="checkbox-wrap">
                    @Html.CheckBoxFor(x => x.GovernorSearchModel.IncludeHistoric, new { id = "IncludeHistoric" })
                    <label for="IncludeHistoric" class="edubase-button-checkbox">Include historic records (governors who stepped down in the last 12 months)</label>
                </span>
            </div>


            <div class="edubase-search-element">
                <button type="submit" id="governor-search-submit" class="button mobile-full-width" name="searchtype" value="@eSearchType.Governor">Search</button>
            </div>

            
        </div>
    }*@
    
        <p class="search-all-shortcut">
            <a href="@Url.Action("Index", "GovernorSearch", new { area = "Governors" })?@(QueryStringHelper.ToQueryString(VM.BIND_ALIAS_STATUSIDS, (int) eStatus.Open, (int) eStatus.OpenButProposedToClose))">Show all Governors</a>
        </p>
    </div>

