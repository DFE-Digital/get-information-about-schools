@using System.Text.RegularExpressions
@using Edubase.Common
@model ChangeHistoryViewModel
@{
    var request = HttpContext.Current.Request;
    var sortDir = "desc";
    var sortDirText = "a descending order";
    var sortField = "changedDateUtc";
    var RE = new Regex(@"^\d{1,2}\/\d{1,2}\/\d{2,4}$");

    if (request.QueryString["sortby"] != null)
    {
        var sortByQuery = (request.QueryString["sortby"] ?? "");

        sortField = sortByQuery.Contains("-") ? sortByQuery.Substring(0, sortByQuery.IndexOf("-")) : sortByQuery;
        sortDir = sortByQuery.Contains("asc") ? "asc" : "desc";
        sortDirText = sortByQuery.Contains("asc") ? "an ascending order" : "a descending order";
    }

    var sortedDescription = " is sorted in " + sortDirText + ". Click to change order. All other columns are sortable.";
    var unsortedDescription = ". Click to sort data by this column.";

    var tableColumns = new List<Tuple<string, string, bool>>
   {
       Tuple.Create("changedDateUtc", "Date changed", true),
       Tuple.Create("effectiveDateUtc", "Effective date", true),
       Tuple.Create("establishmentUrn", "URN", false),
       Tuple.Create("establishmentName", "Establishment", false),
       Tuple.Create("fieldName", "Updated field", true),
       Tuple.Create("oldValue", "Old value", true),
       Tuple.Create("newValue", "New value", true),
       Tuple.Create("originatorUserName", "Suggested from", true),
       Tuple.Create("approverUserName", "Approved by", true),
   };
}


@if (Model.Items.Any())
{
    <div class="top-pagination">
        @Html.Partial("_GenericPaginationV2", Model)
    </div>
    <table class="govuk-table gias-table sortable-table change-history-table" id="changes-table">
        <caption class="govuk-visually-hidden">Establishment change history search results</caption>
        <thead class="govuk-table__head">
            <tr class="govuk-table__row">
            @foreach (var tableColumn in tableColumns)
            {
                if (tableColumn.Item3 || !Model.SingleEstablishment)
                {
                    <th class="govuk-table__header cell-@tableColumn.Item1.ToLower()" scope="col">
                        <a href="@Url.SortUrl(tableColumn.Item1, "#change-history")"
                        class="@Html.Conditional(sortField == tableColumn.Item1, "selected-sort") @Html.Conditional(sortDir.Contains("asc"), "sorted-asc") @Html.Conditional(sortDir.Contains("desc"), "sorted-desc")"
                        aria-label="@string.Concat(tableColumn.Item2, (sortField == tableColumn.Item1 ? sortedDescription : unsortedDescription))">@tableColumn.Item2</a>
                    </th>
                }
            }
            </tr>
        </thead>
        <tbody class="govuk-table__body">
            @foreach (var item in Model.Items)
            {
            <tr id="@item.EstablishmentUrn-@(item.RequestedDate?.ToString("dd-MMMM-yyyy"))-@item.FieldName" class="govuk-table__row">
                <td data-label="Date changed" class="govuk-table__cell">@(item.DateChanged?.ToString("d MMMM yyyy"))</td>
                <td data-label="Effective date" class="govuk-table__cell">@(item.EffectiveDate?.ToString("d MMMM yyyy"))</td>
                @if (!Model.SingleEstablishment)
                {
                    <td data-label="URN" class="govuk-table__cell">@Html.RouteLink(item.EstablishmentUrn?.ToString() ?? "Unknown", "EstabDetails", new { id = item.EstablishmentUrn })</td>
                    <td data-label="Establishment" class="govuk-table__cell">@Html.RouteLink(item.EstablishmentName.IsNullOrEmpty()? "Unknown": item.EstablishmentName, "EstabDetails", new { id = item.EstablishmentUrn })</td>
                }
                <td data-label="Updated field" class="govuk-table__cell">@item.FieldName</td>
                <td data-label="Old value" class="govuk-table__cell">
                    @if (item.OldValue != null && RE.IsMatch(item.OldValue))
                    {
                        var parts = item.OldValue.Split('/').Select(Int32.Parse).ToList();
                        var dt = new DateTime(parts[2], parts[1], parts[0]);

                        @dt.ToString("d MMMM yyyy");
                    }
                    else
                    {
                        @item.OldValue
                    }
                </td>
                <td id="@item.NewValue-@item.EstablishmentUrn-@(item.RequestedDate?.ToString("dd-MMMM-yyyy"))" data-label="New value" class="govuk-table__cell">
                    @if (item.NewValue != null && RE.IsMatch(item.NewValue))
                    {
                        var parts = item.NewValue.Split('/').Select(Int32.Parse).ToList();
                        var dt = new DateTime(parts[2], parts[1], parts[0]);

                        @dt.ToString("d MMMM yyyy");
                    }
                    else
                    {
                        @item.NewValue
                    }
                </td>
                <td data-label="Suggested by" class="govuk-table__cell">@item.SuggesterName</td>
                <td data-label="Approved by" class="govuk-table__cell">@item.ApproverName</td>
            </tr>
            }
        </tbody>
    </table>
    <div class="lower-pagination">
        @Html.Partial("_GenericPaginationV2", Model)
    </div>
    @helpers.BackToTopLink()
}
else
{
    <p>There are no results for your search. Please change the filters to adjust your search, or go @Html.ActionLink("back to the search page", "Index", "ChangeHistory", new { area = "" }, null) to start again.</p>
}
