@using Edubase.Web.UI.Models.Search
@using Edubase.Web.UI.Helpers
@model EstablishmentSearchViewModel


@if (Model.HasError)
{
    <div class="column-two-thirds">
        <p class="no-school-results">@Model.Error</p>
    </div>
}
else if (Model.Results.Count > 0)
{
    if (Model.PageCount > 1)
    {
        <div class="top-pagination">
            @Html.Partial("_GenericPagination")
        </div>
    }
    <ul class="school-results-listing">
        @foreach (var result in Model.Results)
                {
            <li>
                <h2>@Html.ActionLink(result.Name, "Details", "Establishment", new { id = result.Urn, area = "" }, new { @class = "bold-small" })</h2>
                <dl>
                    <dt>Address:</dt>
                    <dd>@result.GetAddress()</dd>
                    <dt>Phase / type:</dt>
                    <dd>
                        @(Model.EducationPhases.FirstOrDefault(x => x.Id == result.EducationPhaseId)?.Name ?? "Not recorded"),
                        @(Model.EstablishmentTypes.FirstOrDefault(x => x.Id == result.TypeId)?.Name ?? "Not recorded")
                    </dd>
                    <dt><abbr title="Unique Reference Number">URN</abbr>:</dt>
                    <dd>@result.Urn</dd>
                    <dt class="inline-details">
                        <abbr title="Local authority - Establishment number">LAESTAB</abbr>:
                    </dt>
                    <dd>@result.GetLAESTAB()</dd>
                    <dt>Status:</dt>
                    <dd>@(Model.EstablishmentStatuses.FirstOrDefault(x => x.Id == result.StatusId)?.Name ?? "Not recorded")</dd>
                    <dt>Local authority name:</dt>
                    <dd>@(Model.LocalAuthorities.FirstOrDefault(x => x.Id == result.LocalAuthorityId)?.Name ?? "Not recorded")</dd>
                    @if (Model.SearchType == eSearchType.Location)
                    {
                        var distanceInMiles = Math.Round(Edubase.Common.Spatial.DistanceCalculator.Calculate(Model.LocationSearchCoordinate, result.Coordinate).Miles, 2);
                        <dt>Distance:</dt>
                                <dd>@distanceInMiles mile@(Html.Conditional(distanceInMiles != 1, "s"))</dd>
                    }
                </dl>
            </li>
        }
    </ul>
    if (Model.PageCount > 1)
    {
        <div class="lower-pagination">
            @Html.Partial("_GenericPagination")
        </div>
    }
}
else
{
    <p class="no-school-results">Please try @Html.ActionLink("searching again", "Index", "Search", new { area = "" }, null) using different spelling or words.</p>
}
