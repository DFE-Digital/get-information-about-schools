@using Edubase.Services.Approvals.Models
@model ApprovalsViewModel
@{
    ViewBag.Title = "Review and approve changes";
    ViewBag.bodyClasses = "change-approvals";
    ViewBag.SiteSection = "tools";
}
@section BreadCrumbs
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-breadcrumbs">
                <ol class="govuk-breadcrumbs__list">
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
                    <li class="govuk-breadcrumbs__list-item">
                        @Html.ActionLink("Tools", "Index", "Tools", new {area = ""}, new {@class = "govuk-breadcrumbs__link"})
                    </li>
                </ol>
            </div>
        </div>
    </div>
}
@* begin no-js HTML *@
<div class="js-hidden">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            @if (TempData["ShowSuccess"] != null)
            {
                <div class="pending-updates-message js-dismiss-message" role="alert">
                    <div class="tick"></div>
                    <p>@TempData["ShowSuccess"]</p>
                </div>
            }
            @Html.Partial("_ValidationSummary", ViewData.ModelState)
        </div>
    </div>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <h1 class="govuk-heading-xl">Manage change requests</h1>
            <p>
                As a data owner you have
                <span class="count">@Model.ApprovalItems.Count</span>
                change requests that require your review for approval or rejection.
            </p>
        </div>
    </div>

    <div class="govuk-grid-row">
        @using (Html.BeginRouteForm("PendingApprovalsPost", FormMethod.Post))
        {
            <div class="govuk-grid-column-full">
                <div class="button-row">
                    <button type="submit" value="@ePendingChangeRequestAction.Approve" name="action" class="govuk-button">Approve</button>
                    <button type="submit" value="@ePendingChangeRequestAction.Reject" name="action" class="govuk-button">Reject</button>
                </div>
            </div>
            <div class="govuk-grid-column-full govuk-!-padding-top-6">
                @Html.Partial("_GenericPaginationV2", Model)
            </div>
            <div class="govuk-grid-column-full">
                @Html.Partial("Partials/_ApprovalsTable", Model)
            </div>
        }
        <div class="govuk-grid-column-full govuk-!-padding-top-6">
            @Html.Partial("_GenericPaginationV2", Model)
            @helpers.BackToTopLink()
        </div>
    </div>
</div>

@* #### ### JS view starts #### ###  *@
<div id="change-approvals" v-cloak>
<div>
    <error-summary :errors="errors" error-title="Incorrect or missing details" />
</div>

<div v-show="Object.keys(apiBork).length> 0" class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <h1 class="govuk-heading-xl">Sorry something went wrong.</h1>
        <p>Please try again later.</p>
        <p>A report of the error has been sent to our technical team.</p>

        @* These properties are not available on the Ajax error response so will never display. 
        Can tweak them to display the Axios errors but need a discussion on whether we want to display this level of detail. *@
        @* <p class="api-error-code" v-show="apiBork.hasOwnProperty('errorCode')">Error code: {{apiBork.errorCode}}</p>
        <div v-show="apiBork.hasOwnProperty('technicalDetails')">
            <code>
                {{apiBork.technicalDetails}}
            </code>
        </div> *@
    </div>
</div>

<div v-show="Object.keys(apiBork).length === 0">
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div v-if="itemsConfirmedRemoved" class="pending-updates-message js-dismiss-message" role="alert">
                <div class="tick"></div>
                <p aria-live="polite">{{ approvalMessage }}</p>
                <a class="cross" href="#" v-on:click="itemsConfirmedRemoved = false" v-show="itemsConfirmedRemoved"><span class="govuk-visually-hidden">Dismiss notification</span></a>
            </div>
            <div v-if="itemsConfirmedRejected" class="pending-updates-message js-dismiss-message" role="alert">
                <div class="tick"></div>
                <p>{{ rejectionMessage }}</p>
                <a class="cross" href="#" v-on:click="itemsConfirmedRejected = false" v-show="itemsConfirmedRejected"><span class="govuk-visually-hidden">Dismiss notification</span></a>
            </div>
            <div>
                <gias-wait-spinner :is-processing="isProcessing" />
            </div>
            <h1 class="govuk-heading-xl" v-show="!isProcessing">Manage change requests</h1>
            <p v-show="!isProcessing">
                As a data owner you have <span class="count">{{currentCount}}</span> change requests that require your review for approval or rejection.
            </p>

            <div class="approve-reject" v-show="!isProcessing">
                <form>
                    <div class="button-row" v-show="!pendingRejection">
                        <button type="submit" name="action" value="" class="govuk-button" v-on:click.prevent="approveSelection">Approve</button>
                        <button type="submit" name="action" value="" class="govuk-button" v-on:click.prevent="rejectSelection">Reject</button>
                    </div>

                    <div v-show="pendingRejection">
                        <div v-bind:class="['govuk-form-group', (invalidReason || reasonLength) ? 'govuk-form-group-error' : '']" id="rejection-reason">
                            <label for="reason" class="govuk-label">Reason for rejecting updates</label>
                            <span class="govuk-error-message" v-show="invalidReason">Please enter a reason for the rejection</span>
                            <span class="govuk-error-message" v-show="reasonLength">Please enter a reason less than 1024 characters</span>
                            <textarea id="reason" rows="7" v-bind:class="['govuk-textarea', (invalidReason || reasonLength) ? 'govuk-input--error' : '']" v-model="reason"></textarea>
                            <div class="approvals-canned">
                                <a href="#" v-on:click.prevent="showRejectionsModal" class="plus-link">Add a preset reason</a>
                            </div>
                        </div>
                        <div class="button-row">
                            <button type="submit" name="action" class="govuk-button" v-on:click.prevent="confirmRejection">Submit</button>
                            <button type="submit" name="action" class="govuk-button govuk-button--secondary cancel" v-on:click.prevent="pendingRejection = false; reason=''; clearErrors()">Cancel</button>
                        </div>
                    </div>
                </form>

                <div class="top-pagination govuk-!-padding-top-6">
                    <nav role="navigation" aria-label="Pagination" class="pagination" v-show="!isProcessing">
                        <p class="pagination-info">
                            Showing
                            <span class="pagination-range">
                                {{ paginationDescription }}
                            </span>
                            of {{currentCount}}
                        </p>
                        <ul class="pagination-links">
                            <li v-if="currentPage > 0  && totalPages > 1"><a href="#" class="pagination-prev" v-on:click.prevent="setCurrentPage(currentPage -1)" aria-label="Previous page">Previous</a>
                            </li>

                            <li v-if="totalPages > 1" v-for="index in visiblePagination">
                                <a v-show="(index + slicePage - 1) < currentPage" href="#" class="numeric-pagination" v-on:click.prevent="setCurrentPage(index + slicePage - 1)" :aria-label="'Page ' + (index + slicePage)">{{ index + slicePage }}</a>
                                <span v-show="(index + slicePage - 1) === currentPage" class="numeric-pagination go-nowhere" aria-current="true" :aria-label="'Page ' + (index + slicePage) + ', current page'">{{ index + slicePage }}</span>
                                <a v-show="(index + slicePage - 1) > currentPage" href="#" class="numeric-pagination" v-on:click.prevent="setCurrentPage(index + slicePage - 1)" :aria-label="'Page ' + (index + slicePage)">{{ index + slicePage }}</a>
                            </li>

                            <li v-if="currentPage +1 < totalPages && totalPages > 1">
                                <a href="#" class="pagination-next" v-on:click.prevent="setCurrentPage(currentPage +1)" aria-label="Next page">Next</a>
                            </li>

                            <li v-if="totalPages > 1"><a href="#" class="show-all" v-on:click.prevent="showAll()">Show all</a></li>
                        </ul>
                    </nav>
                </div>

                <div class="changes-list-wrapper" v-show="!isProcessing">
                    <table class="govuk-table gias-table approval-changes sortable-table" id="changes-table">
                        <caption class="govuk-visually-hidden">Manage change requests</caption>
                        <thead class="govuk-table__head">
                        <tr class="govuk-table__row">
                            <th class="cell-checkbox govuk-table__header"><span class="govuk-visually-hidden">Checkbox</span></th>
                            <th v-for="(value, key) in tableColumns" :class="['govuk-table__header' ,'cell-' + key.toLowerCase()]">
                                <a href="#"
                                    v-on:click.prevent="setSort(key)"
                                    v-bind:class="[ sortType===key && sortAscending ? 'selected-sort sorted-asc' : '', sortType===key && !sortAscending ? 'selected-sort sorted-desc' : '']"
                                    :aria-label="[ sortType===key && sortAscending ? value + ' is sorted in an ascending order. Click to change order. All other columns are sortable.' : '', sortType===key && !sortAscending ? value + ' is sorted in a descending order. Click to change order. All other columns are sortable.' : '', sortType===key ? '' : value + '. Click to sort data by this column.' ]">{{ value }}</a>
                            </th>
                        </tr>
                        </thead>
                        <tbody v-if="changes.length > 0" class="govuk-table__body">
                        <tr v-for="(entry, index) in changes" class="govuk-table__row">
                            <td class="cell-checkbox govuk-table__cell" data-label="Select item">
                                <div class="govuk-checkboxes__item">
                                    <input :id="'change-'+entry.id" name="pending-change" :value="entry.id" type="checkbox" class="govuk-checkboxes__input" v-on:click="selectItem" v-model="selectedItems">
                                    <label class="govuk-checkboxes__label" :for="'change-'+entry.id">
                                        <span class="govuk-visually-hidden">Select this change for approval or rejection</span>
                                    </label>
                                </div>
                            </td>
                            <td data-label="URN" class="govuk-table__cell">
                                <a v-bind:href="detailUrl(entry.establishmentUrn)">{{entry.establishmentUrn}}</a>
                            </td>
                            <td data-label="DfE Number" class="govuk-table__cell">{{entry.establishmentLAESTAB}}</td>
                            <td data-label="Establishment" class="govuk-table__cell"><a v-bind:href="detailUrl(entry.establishmentUrn)">{{entry.establishmentName}}</a></td>
                            <td data-label="Updated field" class="govuk-table__cell">{{entry.fieldName}}</td>
                            <td data-label="Old value" class="govuk-table__cell">{{formatValue(entry.oldValue)}}</td>
                            <td data-label="New value" class="govuk-table__cell">{{formatValue(entry.newValue)}}</td>
                            <td data-label="Effective date" class="govuk-table__cell">{{formatDate(entry.effectiveDateUtc)}}</td>
                            <td data-label="Date requested" class="govuk-table__cell">{{formatDate(entry.requestedDateUtc)}}</td>
                            <td data-label="Suggested by" class="govuk-table__cell">{{entry.originatorFullName}}</td>
                        </tr>
                        </tbody>
                        <tbody v-else class="govuk-table__body">
                        <tr class="govuk-table__row">
                            <td colspan="10" class="govuk-table__cell">
                                <p> You have no items requiring approval.</p>
                            </td>
                        </tr>
                        </tbody>
                    </table>
                </div>

                <div class="lower-pagination">
                    <nav role="navigation" aria-label="Pagination" class="pagination" v-show="!isProcessing">
                        <p class="pagination-info">
                            Showing
                            <span class="pagination-range">
                                {{ paginationDescription }}
                            </span>
                            of {{currentCount}}
                        </p>
                        <ul class="pagination-links">
                            <li v-if="currentPage > 0  && totalPages > 1"><a href="#" class="pagination-prev" v-on:click.prevent="setCurrentPage(currentPage -1)" aria-label="Previous page">Previous</a></li>

                            <li v-if="totalPages > 1" v-for="index in visiblePagination">
                                <a v-show="(index + slicePage - 1) < currentPage" href="#" class="numeric-pagination" v-on:click.prevent="setCurrentPage(index + slicePage - 1)" :aria-label="'Page ' + (index + slicePage)">{{ index + slicePage }}</a>
                                <span v-show="(index + slicePage - 1) === currentPage" class="numeric-pagination go-nowhere" aria-current="true" :aria-label="'Page ' + (index + slicePage) + ', current page'">{{ index + slicePage }}</span>
                                <a v-show="(index + slicePage - 1) > currentPage" href="#" class="numeric-pagination" v-on:click.prevent="setCurrentPage(index + slicePage - 1)" :aria-label="'Page ' + (index + slicePage)">{{ index + slicePage }}</a>
                            </li>

                            <li v-if="currentPage +1 < totalPages && totalPages > 1"><a href="#" class="pagination-next" v-on:click.prevent="setCurrentPage(currentPage +1)" aria-label="Next page">Next</a></li>
                            <li v-if="totalPages > 1"><a href="#" class="show-all" v-on:click.prevent="showAll()">Show all</a></li>
                        </ul>
                    </nav>
                </div>
                @helpers.BackToTopLink()
            </div>
        </div>
    </div>
</div>
<div class="modal-overlay" v-show="showRejections"></div>
<div class="modal-content" id="modal-content" v-show="showRejections" role="dialog" aria-describedby="modal-label">
    <a class="modal-exit" href="#" v-on:click.prevent="noReasonSelectedError=false; showRejections=false; reasonIds=[]">Close</a>
    <div class="modal-inner">
        <h2 class="govuk-heading-m" tabindex="0" id="modal-label">Add one or more reasons for rejection</h2>
        <div v-bind:class="{ error: noReasonSelectedError }">
            <p class="govuk-error-message" v-show="noReasonSelectedError" tabindex="0" id="model-desc">Please select at least one reason to add.</p>
            <div class="govuk-option-select">
                <div class="container-head">
                    <div class="option-select-label hard--left">Reasons</div>
                </div>
                <div class="options-container">
                    <fieldset class="govuk-fieldset">
                        <div class="govuk-checkboxes gias-filter-checkboxes">
                            <div class="govuk-checkboxes__item" v-for="(reason, index) in cannedRejections">
                                <input :id="'reason-' + reason.id" :value="reason.id" type="checkbox" v-model="reasonIds" class="govuk-checkboxes__input">
                                <label :for="'reason-'+ reason.id" class="govuk-label govuk-checkboxes__label">
                                    {{reason.title}}
                                </label>
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>
    </div>
    <div class="button-row">
        <a href="#" class="govuk-button" v-on:click.prevent="selectReason">OK</a>
        <a href="#" class="govuk-button govuk-button--secondary" v-on:click.prevent="noReasonSelectedError=false; showRejections = false; reasonIds =[]">Cancel</a>
    </div>
</div>
</div>

@{ Html.RenderPartial("Partials/_RejectionReasons"); }

@section ViewScripts
{
<script src="@Html.Raw(Html.GetWebpackScriptUrl("approvals-tool.*.js"))"></script>

}
