@using Edubase.Common
@using Edubase.Services.Domain
@using Edubase.Services.Enums
@using Microsoft.Ajax.Utilities
@model GroupDetailViewModel
@{
    ViewBag.Title = Model.Group.Name;
    ViewBag.PageClass = "mat-details school-details";

    var request = HttpContext.Current.Request;
    var sortDir = "desc";
    var sortDirText = "a descending order";
    var sortField = "requestedDateUtc";

    if (request.QueryString["sortby"] != null)
    {
        sortField = request.QueryString["sortby"].Substring(0, request.QueryString["sortby"].IndexOf("-"));
        sortDir = (request.QueryString["sortby"] ?? "").Contains("asc") ? "asc" : "desc";
        sortDirText = (request.QueryString["sortby"] ?? "").Contains("asc") ? "an ascending order" : "a descending order";
    }

    var sortedDescription = " is sorted in " + sortDirText + ". Click to change order. All other columns are sortable.";
    var unsortedDescription = ". Click to sort data by this column.";

    var tableColumns = new List<Tuple<string, string>>
    {
        Tuple.Create("requestedDateUtc", "Date changed"),
        Tuple.Create("requestType", "Request type"),
        Tuple.Create("changes", "Changes"),
        Tuple.Create("originatorUserName", "Suggested by"),
    };

}
<div class="breadcrumbs">
    @if (Model.SearchQueryString.IsNullOrWhiteSpace())
    {
        <ul>
            <li>
                @Html.ActionLink("Home", "Index", "Search", new {area = "", selectedTab = "Groups"}, null)
            </li>
        </ul>

    }
    else
    {
        if (Model.SearchSource == eLookupSearchSource.Governors)
        {
            <a href=@($"{Url.Action("Index", "GovernorSearch", new {area = "Governors"})}?{Model.SearchQueryString}")>Back to search results</a>
        }
        else
        {
            <a href=@($"{Url.Action("Index", "GroupSearch", new {area = "Groups"})}?{Model.SearchQueryString}")>Back to search results</a>
        }
    }
</div>

@if (ViewBag.ShowSaved)
{
    <div class="pending-updates-message js-dismiss-message js-trigger-aria-live" role="alert">
        <div class="tick"></div>
        <p class="message-text" aria-live="polite">Your changes have been saved</p>
        <a class="cross" href="#"><span class="visually-hidden">Dismiss notification</span></a>
    </div>
}

<h1 class="heading-large">@Model.Group.Name</h1>

    <p class="urn"><abbr title="Unique Identifier">UID</abbr>: @Model.Group.GroupUId</p>
    <p class="group-type">@Model.GroupTypeName</p>

    <p class="group-data-download">
        @Html.RouteLink("Download group data", "GroupDataDownload", new { uid = Model.Group.GroupUId, state = UriHelper.SerializeToUrlToken(new[] { new RouteDto("GroupDetails", new RouteValueDictionary(new { id = Model.Group.GroupUId }), Model.Group.Name) }) }, new { rel = "nofollow" })
    </p>

    @if (Model.IsClosed)
    {
        if (Model.IsClosedInError)
        {
            <div class="panel-indent flush--top push-half--bottom">
                <p>
                    This @Model.GroupTypeNameForClosureLabel was created in error and subsequently closed on @(Model.CloseDate?.ToString("dd/MM/yyyy")).
                </p>
            </div>
        }
        else
        {
            <div class="panel-indent flush--top push-half--bottom">
                <p>
                    This @Model.GroupTypeNameForClosureLabel closed on @(Model.CloseDate?.ToString("dd/MM/yyyy")).
                </p>
            </div>
        }
    }

    @{Html.RenderPartial(@"Partials\GroupConfirmationNotifications");}

    <div class="grid-row horizontal-tabs-wrapper">
        <div class="column-full">

            <div class="tab-wrap">
                <ul class="horizontal-tabs">
                    <li><a href="#details" class="horizontal-tab">Details</a></li>
                    <li><a href="#list" class="horizontal-tab">@Model.EstablishmentsPluralName (@Model.Establishments.Count)</a></li>

                    @if (Model.Group.GroupTypeId == (int)eLookupGroupType.MultiacademyTrust)
                    {
                        <li><a href="#governance" class="horizontal-tab">Governance</a></li>
                    }

                    @if (Model.IsUserLoggedOn)
                    {
                        <li><a href="#change-history" class="horizontal-tab">Changes</a></li>
                    }

                </ul>
            </div>

            <div class="tab-content-wrapper horizontal-tabs-content">
                <div id="details" class="tab-content">

                    @if (Model.CanUserEdit)
                    {
                        @Html.ActionLink("Edit details", "EditDetails", "Group", new { id = Model.Group.GroupUId, area = "Groups" }, new { @class = "button button-secondary mobile-full-width" })
                    }
                    <div class="detail-summary">
                        <dl>
                            @if (Model.Group.GroupTypeId.OneOfThese(eLookupGroupType.MultiacademyTrust, eLookupGroupType.SingleacademyTrust))
                            {
                            <dt>Companies House Number:</dt>
                            <dd>
                                @if (Model.Group.CompaniesHouseNumber.IsNullOrEmpty())
                                {
                                <text>Not recorded</text>
                                }
                                else
                                {
                                <a href="@Model.CompaniesHouseUrl">@Model.Group.CompaniesHouseNumber</a>
                                }
                            </dd>
                            }
                            <dt>Type:</dt>
                            <dd>@Model.GroupTypeName</dd>

                            <dt>@Model.OpenDateLabel:</dt>
                            <dd>@(Model.Group.OpenDate?.ToString("dd/MM/yyyy") ?? "Not recorded")</dd>

                            @if (Model.IsUserLoggedOn)
                            {
                            <dt>Closed date:</dt>
                            <dd>@(Model.Group.ClosedDate?.ToString("dd/MM/yyyy") ?? "Not recorded")</dd>
                            <dt>Status:</dt>
                            <dd>@(Model.GroupStatusName ?? "Not recorded")</dd>
                            }

                            @if (Model.Group.GroupTypeId.OneOfThese(eLookupGroupType.ChildrensCentresGroup, eLookupGroupType.SingleacademyTrust, eLookupGroupType.MultiacademyTrust))
                            {
                            <dt>Address:</dt>
                            <dd>@(Model.Address ?? "Not recorded")</dd>
                            }

                            @if (Model.Group.GroupTypeId == (int)eLookupGroupType.ChildrensCentresGroup)
                            {
                            <dt>Group manager email:</dt>
                            <dd>@(Model.Group.ManagerEmailAddress ?? "Not recorded")</dd>
                            }

                            @if (Model.Group.GroupTypeId.OneOfThese(eLookupGroupType.ChildrensCentresGroup, eLookupGroupType.ChildrensCentresCollaboration))
                            {
                            <dt>Local authority:</dt>
                            <dd>@(Model.LocalAuthorityName ?? "Not recorded")</dd>
                            }

                            @if (Model.Group.GroupTypeId.OneOfThese(eLookupGroupType.MultiacademyTrust, eLookupGroupType.SingleacademyTrust, eLookupGroupType.SchoolSponsor))
                            {
                            <dt>Group ID:</dt>
                            <dd>@(Model.Group.GroupId.Clean() ?? "Not recorded")</dd>
                            }

                            <dt><abbr title="Unique Identifier">UID</abbr>:</dt>
                            <dd>@Model.Group.GroupUId</dd>
                        </dl>
                    </div>

                    @if (Model.CanUserEdit)
                    {
                        @Html.ActionLink("Edit details", "EditDetails", "Group", new { id = Model.Group.GroupUId, area = "Groups" }, new { @class = "button button-secondary mobile-full-width" })
                    }

                </div>

                <div id="list" class="tab-content">

                    @if (Model.CanUserEdit)
                    {
                        @Html.ActionLink("Edit academies", "EditLinks", "Group", new { id = Model.Group.GroupUId, area = "Groups" }, new { @class = "button button-secondary mobile-full-width" })
                    }

                    <div class="column-full">
                        @if (Model.Establishments.Count > 0)
                        {
                            <div class="map-container">
                                <div id="group-map" class="school-detail-map"></div>
                                <a href="#map" id="map-toggle" class="map-toggle">Show map</a>
                            </div>
                        }
                        <script type="text/javascript">
                            var establishmentsList = @Html.Json(Model.Establishments);
                        </script>
                        <div class="group-establishment-list">

                            <ul class="school-results-listing">
                                @foreach (var result in Model.Establishments)
                                {
                                    <li>
                                        <h2>
                                            @Html.ActionLink(result.Name, "Details", "Establishment", new { id = result.Urn, area = "Establishments" }, new { @class = "bold-small" })
                                            @if (result.CCIsLeadCentre)
                                            {
                                                <text>(Lead centre)</text>
                                            }
                                        </h2>

                                        <dl>
                                            <dt>Address:</dt>
                                            <dd>@result.Address</dd>

                                            <dt>Phase / type:</dt>
                                            <dd>
                                                @(result.PhaseName ?? "Not recorded"),
                                                @(result.TypeName ?? "Not recorded")
                                            </dd>

                                            <dt><abbr title="Unique Reference Number">URN</abbr>:</dt>
                                            <dd>@result.Urn</dd>

                                            <dt class="inline-details">
                                                <abbr title="Local authority - Establishment number">LAESTAB</abbr>:
                                            </dt>
                                            <dd>@(result.LAESTAB ?? "Not recorded")</dd>

                                            <dt>Status:</dt>
                                            <dd>@(result.StatusName ?? "Not recorded")</dd>

                                            <dt>Local authority name:</dt>
                                            <dd>@(result.LocalAuthorityName ?? "Not recorded")</dd>

                                            <dt>Joined date:</dt>
                                            <dd>@(result.JoinedDate?.ToString("dd/MM/yyyy") ?? "Not recorded")</dd>
                                        </dl>

                                    </li>
                                }
                            </ul>
                        </div>
                    </div>

                    @if (Model.CanUserEdit && Model.Establishments.Count > 0)
                    {
                        @Html.ActionLink("Edit academies", "EditLinks", "Group", new { id = Model.Group.GroupUId, area = "Groups" }, new { @class = "button button-secondary mobile-full-width lower" })
                    }

                </div>

                @if (Model.Group.GroupTypeId == (int)eLookupGroupType.MultiacademyTrust)
                {
                    <div id="governance" class="tab-content">

                        @if (Model.CanUserEditGovernance)
                        {
                            <div class="button-wrap">
                                @Html.ActionLink("Edit governance", "Edit", "Governor", new { groupUId = Model.Group.GroupUId, area = "Governors" }, new { @class = "button button-secondary mobile-full-width" })
                            </div>

                        }

                        @{Html.RenderAction("View", "Governor", new { groupUId = Model.Group.GroupUId, viewModel = null as Edubase.Web.UI.Areas.Governors.Models.GovernorsGridViewModel, area = "Governors" });}

                        @if (Model.CanUserEditGovernance)
                        {
                            <div class="button-wrap">
                                @Html.ActionLink("Edit governance", "Edit", "Governor", new { groupUId = Model.Group.GroupUId, area = "Governors" }, new { @class = "button button-secondary mobile-full-width" })
                            </div>

                        }
                    </div>
                }

                @if (Model.IsUserLoggedOn)
                {
                    <div id="change-history" class="tab-content">
                        <h2 class="bold-small">Change History</h2>
                        @if (!Model.ChangeHistory.Items.Any())
                        {
                            <p>There are no change records available at the moment</p>
                        }
                        else
                        {
                            <p>
                                @Html.ActionLink("Download data in CSV format", "DownloadChangeHistory", "Downloads", new { groupId = Model.Group.GroupUId, area = "", downloadType = DownloadType.csv }, new { style = "margin-bottom:10px; display:block;" })
                                @Html.ActionLink("Download data in XLSX format", "DownloadChangeHistory", "Downloads", new { groupId = Model.Group.GroupUId, area = "", downloadType = DownloadType.xlsx }, null)
                                <br />
                            </p>

                            if (Model.ChangeHistory.PageCount > 1)
                            {
                                <div class="top-pagination">
                                    @Html.Partial("_GenericPaginationV2", Model.ChangeHistory)
                                </div>
                            }

                            <table class="edubase-table approval-changes sortable-table">
                                <caption class="visuallyhidden">Change history</caption>
                                <thead>
                                    <tr>
                                    @foreach (var tableColumn in tableColumns)
                                    {
                                        <th scope="col">
                                            <a href="@Url.SortUrl(tableColumn.Item1, "#change-history")"
                                            class="@Html.Conditional(sortField == tableColumn.Item1, "selected-sort") @Html.Conditional(sortDir.Contains("asc"), "sorted-asc") @Html.Conditional(sortDir.Contains("desc"), "sorted-desc")"
                                            aria-label="@string.Concat(tableColumn.Item2, (sortField == tableColumn.Item1 ? sortedDescription : unsortedDescription))">@tableColumn.Item2</a>
                                        </th>
                                    }
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.ChangeHistory.Items.Where(x=>x.RequestType != GroupChangeRequestType.NewGroupLink))
                                    {
                                        <tr>
                                            <td data-label="Date changed">
                                                @(item.RequestedDateUtc?.ToString("dd/MM/yyyy"))
                                            </td>
                                            <td data-label="Request type">
                                                @item.RequestType.GetEnumMember()
                                            </td>
                                            <td data-label="Change">
                                                <dl>
                                                    @if (item.RequestType == GroupChangeRequestType.GroupChange)
                                                    {
                                                        <dt>Field</dt><dd>@item.Name</dd>
                                                        <dt>Old value</dt><dd>@item.OldValue</dd>
                                                        <dt>New value</dt><dd>@item.NewValue</dd>
                                                    }
                                                    else if (item.RequestType != GroupChangeRequestType.NewGroup)
                                                    {
                                                        <dt>Establishment</dt><dd>@item.LinkUrn @item.LinkEstablishmentName</dd>
                                                        <dt>Link date</dt><dd>@(item.LinkDateUtc?.ToString("dd/MM/yyyy"))</dd>
                                                        <dt>Type</dt><dd>@(item.LinkType?.ToString() ?? "Not recorded")</dd>
                                                    }
                                                </dl>
                                            </td>
                                            <td data-label="Suggested by">
                                                @item.OriginatorUserName
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>

                            if (Model.ChangeHistory.PageCount > 1)
                            {
                                <div class="lower-pagination">
                                    @Html.Partial("_GenericPaginationV2", Model.ChangeHistory)
                                </div>
                            }

                        }
                    </div>
                }
            </div>
        </div>
    </div>

@section ViewScripts
{
    <script src="/public/assets/scripts/standalone/accessibility.js"></script>
    <script>
        $('#governance').find('.sortable-table').clientSort();
    </script>
}
