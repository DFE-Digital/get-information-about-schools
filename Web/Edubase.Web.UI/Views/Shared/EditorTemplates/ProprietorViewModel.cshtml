@using System.Linq.Expressions
@model ProprietorViewModel

@Html.HiddenFor(x => x.Id)
@Html.HiddenFor(x => x.CountyIdDefault)

@RenderTextBox(x => x.Name)
@RenderTextBox(x => x.Street)
@RenderTextBox(x => x.Locality)
@RenderTextBox(x => x.Address3)
@RenderTextBox(x => x.Town)

<div class="govuk-form-group @Html.ValidationCssClassFor(x => x.CountyId)">
    @Html.LabelFor(x => x.CountyId, new { @class="govuk-label"})
    @Html.ValidationMessageFor(x => x.CountyId, null , new {@class = "govuk-error-message"})
    @Html.DropDownListFor(x => x.CountyId, Model.Counties, "", new { @class = "govuk-select" })
</div>

@RenderTextBox(x => x.Postcode,  "govuk-input--width-10")
@RenderTextBox(x => x.TelephoneNumber)

@RenderTextBox(x => x.Email)


@helper RenderTextBox(Expression<Func<ProprietorViewModel, string>> fnc, string fieldClasses = "")
{
    var classes = "govuk-input " + fieldClasses;
    <div class="govuk-form-group @Html.ValidationCssClassFor(fnc)">
        @Html.LabelFor(fnc, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(fnc)
        @Html.TextBoxFor(fnc, new { @class = classes })
    </div>
}
