@using Edubase.Common;
@using Edubase.Web.UI.Models.Search
@model GovernorSearchViewModel
@{
    ViewBag.Title = string.Format("Governor search results");
    ViewBag.PageClass = "search-results";
    ViewBag.HideLogo = true;

    var gSearch = Request.QueryString["gsearch"];
}

@section Head
{
    <meta name="robots" content="noindex,nofollow" />
}

@section BreadCrumbs
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-breadcrumbs">
                <ol class="govuk-breadcrumbs__list">
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Search", "Index", "Search", new { area = "", SelectedTab = SearchViewModel.Tab.Governors, gsearch = gSearch }, new { @class = "govuk-breadcrumbs__link" })</li>
                </ol>
            </div>
        </div>
    </div>
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full results-heading">
        <h1 class="govuk-heading-xl gias-search-results--heading">Search results for governors</h1>
        <div class="search-results-download-link-container">
            <a class="search-results-download-link @(Model.Count > 5000 ? "prevent-download" : "")" href="@Url.Action("PrepareDownload", "GovernorSearch", new {area = "Governors"})?@Url.CurrentQueryString()" rel="nofollow">Download these search results</a>
        </div>
        <div class="gias-filter-toggle--container">
            <span class="gias-filter-toggle--icon">
                @helpers.FilterIcon()
            </span>
            <a href="#gias-filter-container" role="button" id="gias-filter-toggle">Filters</a>
        </div>
    </div>
    <div class="govuk-grid-column-full">
        <div class="warning-message @Html.Conditional(!Model.SelectedLocalAuthorityIds.Any(), "hidden")" id="gov-la-warning">
            <p>You can only view governors of establishments by local authority. For multi-academy trust governors clear the local authority filter.</p>
        </div>
    </div>
</div>
@if (Model.GovernorSearchModel.Forename.Clean() != null ||
     Model.GovernorSearchModel.Surname.Clean() != null ||
     Model.SelectedRoleIds.Any())
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <p>
                Governor@(Model.Count == 1 ? "" : "s")
                <text>matching</text>

                @if (Model.GovernorSearchModel.Forename.Clean() != null)
                {
                    <text>first name &lsquo;<span class="govuk-!-font-weight-bold">@Model.GovernorSearchModel.Forename</span>&rsquo;</text>
                }

                @if (Model.GovernorSearchModel.Surname.Clean() != null)
                {
                    if (Model.GovernorSearchModel.Forename.Clean() != null)
                    {
                        <text>, </text>
                    }
                    <text>last name &lsquo;<span class="govuk-!-font-weight-bold">@Model.GovernorSearchModel.Surname</span>&rsquo;</text>
                }

                @if (Model.SelectedRoleIds.Any())
                {
                    if (!string.IsNullOrEmpty(Model.GovernorSearchModel.Surname.Clean())  || !string.IsNullOrEmpty(Model.GovernorSearchModel.Forename.Clean())
                        && Model.SelectedRoleIds.Count() > 1)
                    {
                        <span class="conjunction-text">and </span>
                    }
                    else
                    {
                        <span class="conjunction-text">for </span>
                    }
                    <span class="conjunction-text">roles</span>
                    <span class="governor-roles govuk-!-font-weight-bold">@Html.Raw(Model.RoleNames)</span>
                }
                else
                {
                    <text>for </text>
                    <text>roles <span class="governor-roles">@Html.Raw(Model.RoleNames)</span></text>
                }

            </p>
        </div>
    </div>
}

<div class="govuk-grid-row">
    <form method="get" action="@Url.Action("Index", "GovernorSearch", new {area = "Governors"})">
        <div id="gias-filter-container">
            <div class="filter-form" id="filter-form">
                <div class="govuk-grid-column-one-third">
                    <div id="EditSearchCollapse" class="search-result-filters blanket-container">
                        <span id='list-count' class="hidden">@Model.Count</span>
                        <h2 class="gias-heading-xs">Filters</h2>
                        <a href="#results-container" class="govuk-skip-link">Skip filters</a>
                        <a href="#" class="add-clear-filters" id="clear-filters" role="button">Clear all filters</a>

                        <input type="hidden" id="client-only-searchtype" value="GovernorsAll" />
                        <div class="govuk-option-select js-collapsible"
                             id="option-select-sort-by" role="search">
                            <div class="container-head js-container-head">
                                <div class="option-select-label">Sort by</div>
                            </div>
                            <div class="options-container">
                                <label for="sortBy" class="govuk-visually-hidden">Sort by</label>
                                <select class="govuk-select trigger-result-update sortby-selector" name="SortBy" id="sortBy">
                                    <option value="a" @Html.Conditional(Model.SortOption == Edubase.Services.Enums.eSortBy.NameAlphabeticalAZ, "selected")>Alphabetical A-Z</option>
                                    <option value="z" @Html.Conditional(Model.SortOption == Edubase.Services.Enums.eSortBy.NameAlphabeticalZA, "selected")>Alphabetical Z-A</option>
                                </select>
                            </div>
                            @helpers.FilterSkipLink()
                        </div>

                        <div class="govuk-option-select js-collapsible" id="option-select-role-type" role="search">
                            <div class="container-head js-container-head">
                                <div class="option-select-label">Role</div>
                                <div class="js-selected-counter">
                                    <span class="js-selected-counter-text"></span>
                                </div>
                            </div>
                            <div class="options-container" id="">
                                <div class="js-auto-height-inner">
                                    <fieldset class="govuk-fieldset">
                                        <legend class="govuk-visually-hidden">Select an option below to filter the results</legend>
                                        <div class="govuk-checkboxes gias-filter-checkboxes">
                                            <div class="govuk-checkboxes__item gias-filter-checkboxes__all">
                                                <input id="govrole_all" class="select-all govuk-checkboxes__input" type="checkbox" />
                                                <label for="govrole_all" class="govuk-checkboxes__label">
                                                    All
                                                </label>
                                            </div>
                                        </div>
                                        <div class="govuk-checkboxes gias-filter-checkboxes">
                                            @foreach (var item in Model.GovernorRoles.OrderBy(x => x.Name))
                                            {
                                                <div class="govuk-checkboxes__item">
                                                    <input name="@GovernorSearchViewModel.BIND_ALIAS_ROLE_ID" class="govuk-checkboxes__input trigger-result-update" value="@item.Id" id="role_@item.Id" type="checkbox" @Html.Conditional(Model.SelectedRoleIds.Contains(item.Id), "checked") />
                                                    <label for="role_@item.Id" class="govuk-checkboxes__label">
                                                        @item
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                    </fieldset>
                                </div>
                                @helpers.FilterSkipLink()
                            </div>
                        </div>

                        <div class="govuk-option-select js-collapsible" id="option-select-group-type" role="search">
                            <div class="container-head js-container-head">
                                <div class="option-select-label">Establishment/group type</div>
                                <div class="js-selected-counter">
                                    <span class="js-selected-counter-text"></span>
                                </div>
                            </div>
                            <div class="options-container" id="">
                                <div class="js-auto-height-inner">
                                    <fieldset class="govuk-fieldset">
                                        <legend class="govuk-visually-hidden">Select an option below to filter the results</legend>
                                        <div class="govuk-checkboxes gias-filter-checkboxes">
                                            <div class="govuk-checkboxes__item gias-filter-checkboxes__all">
                                                <input id="grouptype_all" class="govuk-checkboxes__input select-all" type="checkbox" />
                                                <label for="grouptype_all" class="govuk-checkboxes__label">
                                                    All
                                                </label>
                                            </div>
                                        </div>
                                        <div class="govuk-checkboxes gias-filter-checkboxes">
                                            @foreach (var item in Model.GovernorTypeFlags.OrderBy(x => x.Name))
                                            {
                                                <div class="govuk-checkboxes__item">
                                                    <input name="g" class="govuk-checkboxes__input trigger-result-update" value="@item.Id" id="group-type_@item.Id" type="checkbox" @Html.Conditional(Model.SelectedGovernorTypeFlagIds.Contains(item.Id), "checked") />
                                                    <label for="group-type_@item.Id" class="govuk-checkboxes__label">
                                                        @item
                                                    </label>
                                                </div>
                                            }
                                        </div>
                                    </fieldset>
                                    @helpers.FilterSkipLink()
                                </div>
                            </div>

                        </div>

                        @Selector("Local authority", GovernorSearchViewModel.BIND_ALIAS_LAIDS, Model.LocalAuthorities.OrderBy(x => x.Name), Model.SelectedLocalAuthorityIds, filterRefine: true, isExtraFilter: true)

                        <input type="submit" value="Update" class="govuk-button govuk-!-margin-top-2 gias-filter-submit js-hidden" id="filter-submit" />
                        @Html.HiddenFor(!Model.GovernorSearchModel.Forename.IsEmpty(), x => x.GovernorSearchModel.Forename)
                        @Html.HiddenFor(!Model.GovernorSearchModel.Surname.IsEmpty(), x => x.GovernorSearchModel.Surname)
                        @Html.HiddenFor(Model.GovernorSearchModel.IncludeHistoric, x => x.GovernorSearchModel.IncludeHistoric)

                        <div class="filter-additional-controls">
                            <a href="#" class="add-clear-filters" id="clear-filters" role="button">Clear all filters</a>
                        </div>
                    </div>

                </div>
            </div>
        </div>
    </form>
    <div role="alert" aria-live="assertive" id="results-notification" class="govuk-visually-hidden"></div>
    <h2 class="govuk-visually-hidden">Search results listing</h2>
    <div class="govuk-grid-column-two-thirds" id="results-container">

        @{Html.RenderPartial("Partials/_GovernorSearchResults");}

    </div>

</div>


@section ViewScripts
{
    <script src="@Html.Raw(Html.GetWebpackScriptUrl("search-results-bundle.*.js"))"></script>
}


@helper SearchWithin(string label)
{
    <div class="search-field-wrap">
        <label class="filter-searchwithin-label">
            <span class="govuk-visually-hidden">Search within @label filter</span>
            <input type="text" class="filter-search govuk-input" />
            <button class="field-clear hidden">
                <span class="govuk-visually-hidden">Clear</span>
            </button>
        </label>
    </div>
}

@helper Selector(string label, string name, IEnumerable<LookupItemViewModel> items, List<int> selectedItems, string additionalClassName = "", bool isExtraFilter = false, bool filterRefine = false, bool closed = false)
{
    if (!closed)
    {
        additionalClassName = additionalClassName.RemoveSubstring("hidden");
    }
    <div class="govuk-option-select js-collapsible @additionalClassName @Html.Conditional(filterRefine, "searchable-filters")" data-closed-on-load="@(isExtraFilter ? "false" : "true")"
         id="option-select-@label.ToLower().Replace(" ", "-").Replace("/", "-")" data-bind-alias="@name"
         role="search">
        <div class="container-head js-container-head">
            <div class="option-select-label">@label</div>
            <div class="js-selected-counter">
                <span class="js-selected-counter-text"></span>

            </div>
        </div>
        @if (filterRefine)
        {
            @SearchWithin(@label)
        }
        <div class="options-container" id="">
            <div class="suggestion-target"></div>
            <div class="js-auto-height-inner">
                <fieldset class="govuk-fieldset">
                    <legend class="govuk-visually-hidden">Select an option below to filter the results- changing the selection will refresh the results</legend>
                    <div class="govuk-checkboxes gias-filter-checkboxes">
                        <div class="govuk-checkboxes__item gias-filter-checkboxes__all">
                            <input id="@(name)_all" class="govuk-checkboxes__input select-all js-filter-input" type="checkbox" />
                            <label for="@(name)_all" class="govuk-checkboxes__label js-filter-label">
                                All
                            </label>
                        </div>
                    </div>
                    <div class="govuk-checkboxes gias-filter-checkboxes">
                        @foreach (var item in items)
                        {
                            <div class="govuk-checkboxes__item">
                                <input name="@name" value="@item.Id" id="@(name)_@item.Id" class="govuk-checkboxes__input trigger-result-update js-filter-input" type="checkbox" @Html.Conditional(selectedItems.Contains(item.Id), "checked") />
                                <label for="@(name)_@item.Id" class="govuk-checkboxes__label js-filter-label">
                                    @item
                                </label>
                            </div>
                        }
                    </div>
                </fieldset>
            </div>
            @helpers.FilterSkipLink()
        </div>
    </div>
}
