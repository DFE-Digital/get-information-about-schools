@using System.ServiceModel.Configuration
@using Edubase.Services.Enums
@model ChangeHistoryViewModel
@{
    ViewBag.Title = string.Concat(!ViewData.ModelState.IsValid ? "Error: " : string.Empty, "Download change history");
    ViewBag.Title = "";
    ViewBag.PageClass = "search-history-results search-results";
}

<div class="breadcrumbs">
    <ul>
        <li>
            @Html.ActionLink("Home", "Index", "Search", new { area = "" }, null)
        </li>
        <li>
            @Html.ActionLink("Tools", "Index", "Tools", new { area = "" }, null)
        </li>
        <li>
            @Html.ActionLink("Change history", "Index", "ChangeHistory", new { area = "" }, null)
        </li>
    </ul>
</div>

@Html.Partial("_ValidationSummary", ViewData.ModelState)

<h1 class="heading-xlarge">Download change history</h1>

<div class="grid-row">
    <div class="column-full">
        <h2 class="heading-medium">Select the file format of the data you are interested in</h2>
        <p class="text">You can download your requested data in either CSV or XLSX format. The file will download as a ZIP file: open the ZIP to access its contents.</p>
    </div>

    <div class="column-full">
        @using (Html.BeginRouteForm("ChangeHistoryDownload", FormMethod.Get))
        {
            <fieldset class="form-group @Html.ValidationCssClassFor(x => x.DownloadFormat)">
                <legend class="visually-hidden" id="@nameof(Model.DownloadFormat)">Download data options</legend>

                @Html.ValidationMessageFor(x => x.DownloadFormat)

                <div class="multiple-choice">
                    @Html.RadioButtonFor(m => m.DownloadFormat, eFileFormat.CSV, new { id = "download-csv" })
                    <label for="download-csv">Data in CSV format</label>
                </div>

                <div class="multiple-choice">
                    @Html.RadioButtonFor(m => m.DownloadFormat, eFileFormat.XLSX, new { id = "download-xslx" })
                    <label for="download-xslx">Data in XLSX (Excel) format</label>
                </div>
            </fieldset>

            @Html.HiddenFor(x => x.DisplayErrors, new { Value = "true" })

            @Html.HiddenFieldsFromQueryString()
            <div class="button-row">
                <button type="submit" class="button" value="Continue">Continue</button>
                <a href=@($"{Url.RouteUrl("ChangeHistorySearch")}?{Request.QueryString}") class="button button-secondary">Cancel</a>
            </div>

        }
    </div>
</div>
