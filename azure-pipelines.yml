## Note that C# assembly version parts are limited to a maximum value of 65534 (UInt16.MaxValue - 1)
## The C# assembly version is inferred from this build name/version, therefore yyyyMMdd cannot be used as a version part.
## Here we are using workaround of yyDDD (e.g., 23001) for year and day of year.
#name: $(BuildDefinitionName)_$(MajorVersion).$(MinorVersion).$(Year:yy)$(DayOfYear)$(Rev:.rr)
#name: $(BuildDefinitionName)_1.1.$(Year:yy)$(DayOfYear)$(Rev:.rr)
#name: $(Year:yyyy).$(Month).$(DayOfMonth)$(Rev:.rr)_$(BuildDefinitionName)
name: $(Date:yyyy).$(Date:MM).$(Date:dd)$(Rev:.rrr)

trigger:
  branches:
    include:
      ## Include all branches for this pipeline execution trigger - this will allow build and package to run for all changes.
      ## Note that _deployments_ have additional conditions applied:
      ##  - dev/sandbox environments are controlled via `variables` which can conditionally run the stage based on logic such as branch name.
      ##  - higher-than-dev must first go via dev, and then be manually approved/promoted to higher environments.
      - '*'


pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

  ## These variables distinguish between "dev" (incl. AFD/custom domain) and sandboxes
  isDev:      $[eq(variables['Build.SourceBranch'], 'refs/heads/dev')]
  isSandbox1: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')]
  isSandbox2: false   # currently unused
  isHolding:  false    # currently unused
  
  ## If this is part of a release, then we can deploy to higher environments
  ## - could consider this being done by tag instead? or `release/v1.11` format branch?
  ## - need condition to allow promotion of dev branch into test? but no higher?
  isRelease: $[startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')]


stages:
  
  ## Variables
  ## To be used as $[stageDependencies.{stageName}.{jobName}.outputs['{stepName}.{variableName}']]
  - stage: SetupVariablesStage
    jobs:
      - job: SetupVariablesJob
        displayName: Setup variables
        steps:
          - checkout: self
            clean: true
            fetchTags: true

          - task: PowerShell@2
            displayName: Pull version number from build name
            name: versionNumberOutputStep
            inputs:
              targetType: 'inline'
              script: |
                $buildName = "$(Build.BuildNumber)"
                Write-Host "Build Name: $buildName"
                
                ## Expect the build name to contain a version number in the format `X.X.X.X` - strip everything else away.
                $version = $buildName -replace '.*_(\d+)\.(\d+)\.(\d+)\.(\d+).*', '$1.$2.$3.$4'
                Write-Host "Version: $version"
                
                ## Make version number available to other steps in the pipeline
                Write-Host "##vso[task.setvariable variable=version;isoutput=true;isreadonly=true;]$version"


                $versionParts = $version -split '\.'
                
                ## convert parts to number to remove any leading zeros
                ## note that C# assembly version parts are limited to a maximum value of 65534 (UInt16.MaxValue - 1)
                $versionParts = $versionParts | ForEach-Object { [uint16]$_ }
                
                ## convert parts back to string (i.e., after leading zeros have been dropped)
                $versionParts = $versionParts | ForEach-Object { $_.ToString() }
                
                ## join parts back together
                $versionNoPadding = $versionParts -join '.'
                
                Write-Host "Version (no padding): $versionNoPadding"
                
                ## Make version number available to other steps in the pipeline
                Write-Host "##vso[task.setvariable variable=versionNoPadding;isoutput=true;isreadonly=true;]$versionNoPadding"


  ## Build, test, and package the Web App
  - stage: BuildAndTestAndPackageStage
    displayName: 'Build and test'
    dependsOn:
      - SetupVariablesStage
    variables:
      version: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.version'] ]
    jobs:
      - template: 'pipelines/template-build-and-test.yml'
        parameters:
          enabled: 'true'
          vmImage: 'windows-latest'   ## Uses .NET Framework, therefore must use Windows runner
          thisJobName: 'BuildTestAndPackageJob'
          version: $(version)
          artifactReference: 'BuiltAndPackagedWebUiZip'
  
  
  
  
  ## Run this deploy stage only if conditions met to deploy to this environment
  ## Deploy to dev "dev" slot (`gias-dev.[...]`)
  - stage: 'DeployDevSlotDev'
    displayName: 'Deploy to Dev (slot dev)'
    condition: and(succeeded(), or(eq(variables.isRelease, 'true'), eq(variables.isDev, 'true')))
    dependsOn:
      - SetupVariablesStage
      - BuildAndTestAndPackageStage
    variables:
      version: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.version'] ]
      versionNoPadding: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.versionNoPadding'] ]
    jobs:
      
      ## Deployment job - special job type which allows applying environment protection rules (e.g., approvals) prior to continuing on remaining jobs
      - deployment: devDeploymentEnvironmentCheck
        environment: 'gias-dev'
        displayName: 'ADO Environment: `gias-dev` and main slot'

      ## Debugging assistance job - display variables
      - job: DisplayVariablesJob
        steps:
          - task: PowerShell@2
            displayName: Display variables
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "version: $(version)"
                Write-Host "versionNoPadding: $(versionNoPadding)"

      ## Deploy the packaged and tested code
      - template: 'pipelines/template-deployment-stage.yml'
        parameters:
          enabled: 'true'
          vmImage: 'windows-latest'
          thisJobName: 'DeployWebUiDevSlotDevJob'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          deploymentServiceConnectionName: 'rg-t1dv-gias'
          artifactReference: 'BuiltAndPackagedWebUiZip'
          destinationResourceGroupName: 'rg-t1dv-gias'
          destinationWebAppName: 'gias'
          destinationDeployToSlotFlag: true
          destinationSlotName: 'dev'
      
      ## Smoke test the base URL to prove that the code has been deployed
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiDevSlotDevJobWebRoot'
          previousDeploymentJobName: 'DeployWebUiDevSlotDevJob'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          smokeTestUrl: '/'                                                     # Relative to the root of the web app
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'   # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'   # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                    # C# Web App normally starts up very fast (should normally be available near immediately)
      
      ## Smoke test a URL which exercises the API and file storage connections, to prove that the code+configuration works with background services
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiDevSlotDevJobDownloadsPage'
          previousDeploymentJobName: 'DeployWebUiDevSlotDevJob'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          smokeTestUrl: '/Downloads'                                            # Relative to the root of the web app
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'   # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'   # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                    # C# Web App normally starts up very fast (should normally be available near immediately) 



  ## Run this deploy stage only if conditions met to deploy to this environment
  ## Deploy to dev "main" slot, which integrates with Azure Front Door (ADF) and Web Application Firewall (WAF)
  - stage: 'DeployDevSlotMain'
    displayName: 'Deploy to Dev (main slot with AFD/WAF)'
    condition: and(succeeded(), or(eq(variables.isRelease, 'true'), eq(variables.isDev, 'true')))
    dependsOn:
      - SetupVariablesStage
      - BuildAndTestAndPackageStage
    variables:
      version: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.version'] ]
      versionNoPadding: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.versionNoPadding'] ]
    jobs:
      
      ## Deployment job - special job type which allows applying environment protection rules (e.g., approvals) prior to continuing on remaining jobs
      - deployment: devDeploymentEnvironmentCheck
        environment: 'gias-dev'
        displayName: 'ADO Environment: `gias-dev` and main slot'

      ## Debugging assistance job - display variables
      - job: DisplayVariablesJob
        steps:
          - task: PowerShell@2
            displayName: Display variables
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "version: $(version)"
                Write-Host "versionNoPadding: $(versionNoPadding)"

      ## Deploy the packaged and tested code
      - template: 'pipelines/template-deployment-stage.yml'
        parameters:
          enabled: 'true'
          vmImage: 'windows-latest'
          thisJobName: 'DeployWebUiDevSlotMainJob'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          deploymentServiceConnectionName: 'rg-t1dv-gias'
          artifactReference: 'BuiltAndPackagedWebUiZip'
          destinationResourceGroupName: 'rg-t1dv-gias'
          destinationWebAppName: 'gias'
          destinationDeployToSlotFlag: false
          #destinationSlotName: 'dev'
      
      ## Smoke test the base URL to prove that the code has been deployed
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiDevSlotMainJobWebRoot'
          previousDeploymentJobName: 'DeployWebUiDevSlotMainJob'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          #smokeTestUrl: '/'                                                        # Relative to the root of the web app
          smokeTestFullUrl: 'https://dev.get-information-schools.service.gov.uk/'   ## Override the URL as deployment task returns the `.azurewebsites.net` URL, which is behind AFD/WAF/Custom Domain
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'       # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'       # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                        # C# Web App normally starts up very fast (should normally be available near immediately)
      
      ## Smoke test a URL which exercises the API and file storage connections, to prove that the code+configuration works with background services
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiDevSlotMainJobDownloadsPage'
          previousDeploymentJobName: 'DeployWebUiDevSlotMainJob'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          #smokeTestUrl: '/'                                                        # Relative to the root of the web app
          smokeTestFullUrl: 'https://dev.get-information-schools.service.gov.uk/Downloads'  ## Override the URL as deployment task returns the `.azurewebsites.net` URL, which is behind AFD/WAF/Custom Domain
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'       # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'       # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                        # C# Web App normally starts up very fast (should normally be available near immediately) 
  
  
  
  
  ## Run this deploy stage only if conditions met to deploy to this environment
  - stage: 'DeployDevSandbox1'
    displayName: 'Deploy to Slot Sandbox1'
    condition: and(succeeded(), eq(variables.isSandbox1, 'true'))
    dependsOn:
      - SetupVariablesStage
      - BuildAndTestAndPackageStage
    variables:
      version: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.version'] ]
      versionNoPadding: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.versionNoPadding'] ]
    jobs:
      
      ## Deployment job - special job type which allows applying environment protection rules (e.g., approvals) prior to continuing on remaining jobs
      - deployment: devDeploymentEnvironmentCheck
        environment: 'gias-dev'
        displayName: 'ADO Environment: `gias-dev` - Slot Sandbox1'

      ## Debugging assistance job - display variables
      - job: DisplayVariablesJob
        steps:
          - task: PowerShell@2
            displayName: Display variables
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "version: $(version)"
                Write-Host "versionNoPadding: $(versionNoPadding)"

      ## Deploy the packaged and tested code
      - template: 'pipelines/template-deployment-stage.yml'
        parameters:
          enabled: 'true'
          vmImage: 'windows-latest'
          thisJobName: 'DeployWebUiDevSandbox1Job'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          deploymentServiceConnectionName: 'rg-t1dv-gias'
          artifactReference: 'BuiltAndPackagedWebUiZip'
          destinationResourceGroupName: 'rg-t1dv-gias'
          destinationWebAppName: 'gias'
          destinationDeployToSlotFlag: true
          destinationSlotName: 'dev-sandbox1'
      
      ## Smoke test the base URL to prove that the code has been deployed
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiSandbox1JobWebRoot'
          previousDeploymentJobName: 'DeployWebUiDevSandbox1Job'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          smokeTestUrl: '/'                                                     # Relative to the root of the web app
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'   # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'   # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                    # C# Web App normally starts up very fast (should normally be available near immediately)
      
      ## Smoke test a URL which exercises the API and file storage connections, to prove that the code+configuration works with background services
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiSandbox1JobDownloadsPage'
          previousDeploymentJobName: 'DeployWebUiDevSandbox1Job'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          smokeTestUrl: '/Downloads'                                            # Relative to the root of the web app
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'   # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'   # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                    # C# Web App normally starts up very fast (should normally be available near immediately) 





  ## Run this deploy stage only if conditions met to deploy to this environment
  - stage: 'DeployDevSandbox2'
    displayName: 'Deploy to Slot Sandbox2'
    condition: and(succeeded(), eq(variables.isSandbox2, 'true'))
    dependsOn:
      - SetupVariablesStage
      - BuildAndTestAndPackageStage
    variables:
      version: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.version'] ]
      versionNoPadding: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.versionNoPadding'] ]
    jobs:
      
      ## Deployment job - special job type which allows applying environment protection rules (e.g., approvals) prior to continuing on remaining jobs
      - deployment: devDeploymentEnvironmentCheck
        environment: 'gias-dev'
        displayName: 'ADO Environment: `gias-dev` - Slot Sandbox2'

      ## Debugging assistance job - display variables
      - job: DisplayVariablesJob
        steps:
          - task: PowerShell@2
            displayName: Display variables
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "version: $(version)"
                Write-Host "versionNoPadding: $(versionNoPadding)"

      ## Deploy the packaged and tested code
      - template: 'pipelines/template-deployment-stage.yml'
        parameters:
          enabled: 'true'
          vmImage: 'windows-latest'
          thisJobName: 'DeployWebUiDevSandbox2Job'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          deploymentServiceConnectionName: 'rg-t1dv-gias'
          artifactReference: 'BuiltAndPackagedWebUiZip'
          destinationResourceGroupName: 'rg-t1dv-gias'
          destinationWebAppName: 'gias'
          destinationDeployToSlotFlag: true
          destinationSlotName: 'dev-sandbox2'
      
      ## Smoke test the base URL to prove that the code has been deployed
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiSandbox2JobWebRoot'
          previousDeploymentJobName: 'DeployWebUiDevSandbox2Job'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          smokeTestUrl: '/'                                                     # Relative to the root of the web app
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'   # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'   # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                    # C# Web App normally starts up very fast (should normally be available near immediately)
      
      ## Smoke test a URL which exercises the API and file storage connections, to prove that the code+configuration works with background services
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiSandbox2JobDownloadsPage'
          previousDeploymentJobName: 'DeployWebUiDevSandbox2Job'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          smokeTestUrl: '/Downloads'                                            # Relative to the root of the web app
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'   # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'   # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                    # C# Web App normally starts up very fast (should normally be available near immediately) 




  ## Run this deploy stage only if conditions met to deploy to this environment
  - stage: 'DeployDevSandboxHolding'
    displayName: 'Deploy to Sandbox Slot Holding'
    condition: and(succeeded(), eq(variables.isHolding, 'true'))
    dependsOn:
      - SetupVariablesStage
      - BuildAndTestAndPackageStage
    variables:
      version: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.version'] ]
      versionNoPadding: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.versionNoPadding'] ]
    jobs:
      
      ## Deployment job - special job type which allows applying environment protection rules (e.g., approvals) prior to continuing on remaining jobs
      - deployment: devDeploymentEnvironmentCheck
        environment: 'gias-dev'
        displayName: 'ADO Environment: `gias-dev` - Sandbox Holding slot'

      ## Debugging assistance job - display variables
      - job: DisplayVariablesJob
        steps:
          - task: PowerShell@2
            displayName: Display variables
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "version: $(version)"
                Write-Host "versionNoPadding: $(versionNoPadding)"

      ## Deploy the packaged and tested code
      - template: 'pipelines/template-deployment-stage.yml'
        parameters:
          enabled: 'true'
          vmImage: 'windows-latest'
          thisJobName: 'DeployWebUiDevSandboxHoldingJob'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          deploymentServiceConnectionName: 'rg-t1dv-gias'
          artifactReference: 'BuiltAndPackagedWebUiZip'
          destinationResourceGroupName: 'rg-t1dv-gias'
          destinationWebAppName: 'gias'
          destinationDeployToSlotFlag: true
          destinationSlotName: 'dev-sandbox-holding'
      
      ## Smoke test the base URL to prove that the code has been deployed
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiSandboxHoldingJobWebRoot'
          previousDeploymentJobName: 'DeployWebUiDevSandboxHoldingJob'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          smokeTestUrl: '/'                                                     # Relative to the root of the web app
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'   # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'   # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                    # C# Web App normally starts up very fast (should normally be available near immediately)
      
      ## Smoke test a URL which exercises the API and file storage connections, to prove that the code+configuration works with background services
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiSandboxHoldingJobDownloadsPage'
          previousDeploymentJobName: 'DeployWebUiDevSandboxHoldingJob'
          keyVaultServiceConnectionName: 'rg-t1dv-edubase'
          keyVaultName: 'kv-t1dv-edubase'
          smokeTestUrl: '/Downloads'                                            # Relative to the root of the web app
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'   # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'   # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                    # C# Web App normally starts up very fast (should normally be available near immediately) 



  ## Run this deploy stage only if conditions met to deploy to this environment
  ## Deploy to test "sis" slot (`gias-stage-sis.[...]`)
  - stage: 'DeployTestSlotSignInSimulator'
    displayName: 'Deploy to Test (slot `stage-sis`, integrated with the sign-in-simulator)'
    condition: and(succeeded(), or(eq(variables.isRelease, 'true'), eq(variables.isDev, 'true')))
    dependsOn:
      - SetupVariablesStage
      - BuildAndTestAndPackageStage
      - DeployDevSlotMain
      - DeployDevSlotDev
    variables:
      version: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.version'] ]
      versionNoPadding: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.versionNoPadding'] ]
    jobs:

      ## Deployment job - special job type which allows applying environment protection rules (e.g., approvals) prior to continuing on remaining jobs
      - deployment: testDeploymentEnvironmentCheck
        environment: 'gias-test'
        displayName: 'ADO Environment: `gias-test` (known as `stage`)'

      ## Debugging assistance job - display variables
      - job: DisplayVariablesJob
        steps:
          - task: PowerShell@2
            displayName: Display variables
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "version: $(version)"
                Write-Host "versionNoPadding: $(versionNoPadding)"

      ## Deploy the packaged and tested code
      - template: 'pipelines/template-deployment-stage.yml'
        parameters:
          enabled: 'true'
          vmImage: 'windows-latest'
          thisJobName: 'DeployWebUiTestSlotSignInSimulatorJob'
          keyVaultServiceConnectionName: 'rg-t1te-edubase'
          keyVaultName: 'kv-t1te-edubase01'
          deploymentServiceConnectionName: 'rg-t1te-gias'
          artifactReference: 'BuiltAndPackagedWebUiZip'
          destinationResourceGroupName: 'rg-t1te-gias'
          destinationWebAppName: 'gias-stage'
          destinationDeployToSlotFlag: true
          destinationSlotName: 'sis'

      ## Smoke test the base URL to prove that the code has been deployed
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiTestSlotSignInSimulatorJobWebRoot'
          previousDeploymentJobName: 'DeployWebUiTestSlotSignInSimulatorJob'
          keyVaultServiceConnectionName: 'rg-t1te-edubase'
          keyVaultName: 'kv-t1te-edubase01'
          smokeTestUrl: '/'                                                     # Relative to the root of the web app
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'   # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'   # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                    # C# Web App normally starts up very fast (should normally be available near immediately)

      ## Smoke test a URL which exercises the API and file storage connections, to prove that the code+configuration works with background services
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiTestSlotSignInSimulatorJobDownloadsPage'
          previousDeploymentJobName: 'DeployWebUiTestSlotSignInSimulatorJob'
          keyVaultServiceConnectionName: 'rg-t1te-edubase'
          keyVaultName: 'kv-t1te-edubase01'
          smokeTestUrl: '/Downloads'                                            # Relative to the root of the web app
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'   # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'   # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                    # C# Web App normally starts up very fast (should normally be available near immediately) 



  ## Run this deploy stage only if conditions met to deploy to this environment
  ## Deploy to test "main" slot (`gias-stage.[..]`), which integrates with Azure Front Door (ADF) and Web Application Firewall (WAF)
  - stage: 'DeployTestSlotMain'
    displayName: 'Deploy to Test (main slot with DSI integration, known as `stage`)'
    condition: and(succeeded(), or(eq(variables.isRelease, 'true'), eq(variables.isDev, 'true')))
    dependsOn:
      - SetupVariablesStage
      - BuildAndTestAndPackageStage
      - DeployDevSlotMain
      - DeployDevSlotDev
    variables:
      version: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.version'] ]
      versionNoPadding: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.versionNoPadding'] ]
    jobs:

      ## Deployment job - special job type which allows applying environment protection rules (e.g., approvals) prior to continuing on remaining jobs
      - deployment: testDeploymentEnvironmentCheck
        environment: 'gias-test'
        displayName: 'ADO Environment: `gias-test` (known as `stage`)'

      ## Debugging assistance job - display variables
      - job: DisplayVariablesJob
        steps:
          - task: PowerShell@2
            displayName: Display variables
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "version: $(version)"
                Write-Host "versionNoPadding: $(versionNoPadding)"

      ## Deploy the packaged and tested code
      - template: 'pipelines/template-deployment-stage.yml'
        parameters:
          enabled: 'true'
          vmImage: 'windows-latest'
          thisJobName: 'DeployWebUiTestSlotMainJob'
          keyVaultServiceConnectionName: 'rg-t1te-edubase'
          keyVaultName: 'kv-t1te-edubase01'
          deploymentServiceConnectionName: 'rg-t1te-gias'
          artifactReference: 'BuiltAndPackagedWebUiZip'
          destinationResourceGroupName: 'rg-t1te-gias'
          destinationWebAppName: 'gias-stage'
          destinationDeployToSlotFlag: false
          #destinationSlotName: ''

      ## Smoke test the base URL to prove that the code has been deployed
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiTestSlotMainJobWebRoot'
          previousDeploymentJobName: 'DeployWebUiTestSlotMainJob'
          keyVaultServiceConnectionName: 'rg-t1te-edubase'
          keyVaultName: 'kv-t1te-edubase01'
          #smokeTestUrl: '/'                                                        # Relative to the root of the web app
          smokeTestFullUrl: 'https://test.get-information-schools.service.gov.uk/'  ## Override the URL as deployment task returns the `.azurewebsites.net` URL, which is behind AFD/WAF/Custom Domain
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'       # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'       # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                        # C# Web App normally starts up very fast (should normally be available near immediately)

      ## Smoke test a URL which exercises the API and file storage connections, to prove that the code+configuration works with background services
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiTestSlotMainJobDownloadsPage'
          previousDeploymentJobName: 'DeployWebUiTestSlotMainJob'
          keyVaultServiceConnectionName: 'rg-t1te-edubase'
          keyVaultName: 'kv-t1te-edubase01'
          #smokeTestUrl: '/Downloads'                                                        # Relative to the root of the web app
          smokeTestFullUrl: 'https://test.get-information-schools.service.gov.uk/Downloads'  ## Override the URL as deployment task returns the `.azurewebsites.net` URL, which is behind AFD/WAF/Custom Domain
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'       # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'       # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                        # C# Web App normally starts up very fast (should normally be available near immediately) 


  ## Run this deploy stage only if conditions met to deploy to this environment
  - stage: 'DeployPreProductionSlotMain'
    displayName: 'Deploy to PreProduction (main slot)'
    condition: and(succeeded(), eq(variables.isRelease, 'true'))
    dependsOn:
      - SetupVariablesStage
      - BuildAndTestAndPackageStage
      - DeployTestSlotMain
      - DeployTestSlotSignInSimulator
    variables:
      version: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.version'] ]
      versionNoPadding: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.versionNoPadding'] ]
    jobs:

      ## Deployment job - special job type which allows applying environment protection rules (e.g., approvals) prior to continuing on remaining jobs
      - deployment: testDeploymentEnvironmentCheck
        environment: 'gias-pre-prod'
        displayName: 'ADO Environment: `gias-pre-prod`'

      ## Debugging assistance job - display variables
      - job: DisplayVariablesJob
        steps:
          - task: PowerShell@2
            displayName: Display variables
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "version: $(version)"
                Write-Host "versionNoPadding: $(versionNoPadding)"

      ## Deploy the packaged and tested code
      - template: 'pipelines/template-deployment-stage.yml'
        parameters:
          enabled: 'true'
          vmImage: 'windows-latest'
          thisJobName: 'DeployWebUiPreProductionSlotMainJob'
          keyVaultServiceConnectionName: 'rg-t1pp-edubase'
          keyVaultName: 'kv-t1pp-edubase01'
          deploymentServiceConnectionName: 'rg-t1pp-edubase'                        ## Note change of naming convention from lower environments 
          artifactReference: 'BuiltAndPackagedWebUiZip'
          destinationResourceGroupName: 'rg-t1pp-gias'
          destinationWebAppName: 'ea-edubase-pp'                                    ## Note change of naming convention from lower environments
          destinationDeployToSlotFlag: false
          #destinationSlotName: ''

      ## Smoke test the base URL to prove that the code has been deployed
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiPreProductionSlotMainJobWebRoot'
          previousDeploymentJobName: 'DeployWebUiPreProductionSlotMainJob'
          keyVaultServiceConnectionName: 'rg-t1pp-edubase'
          keyVaultName: 'kv-t1pp-edubase01'
#          smokeTestUrl: '/'                                                         # Relative to the root of the web app
          smokeTestFullUrl: 'https://pp.get-information-schools.service.gov.uk/'   ## Override the URL as deployment task returns the `.azurewebsites.net` URL, which is behind AFD/WAF/Custom Domain
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'       # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'       # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                        # C# Web App normally starts up very fast (should normally be available near immediately)

      ## Smoke test a URL which exercises the API and file storage connections, to prove that the code+configuration works with background services
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiPreProductionSlotMainJobDownloadsPage'
          previousDeploymentJobName: 'DeployWebUiPreProductionSlotMainJob'
          keyVaultServiceConnectionName: 'rg-t1pp-edubase'
          keyVaultName: 'kv-t1pp-edubase01'
#          smokeTestUrl: '/Downloads'                                                         # Relative to the root of the web app
          smokeTestFullUrl: 'https://pp.get-information-schools.service.gov.uk/Downloads'   ## Override the URL as deployment task returns the `.azurewebsites.net` URL, which is behind AFD/WAF/Custom Domain
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'       # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'       # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                        # C# Web App normally starts up very fast (should normally be available near immediately) 






  ## Run this deploy stage only if conditions met to deploy to this environment
  - stage: 'DeployProductionSlotLcs'
    displayName: 'Deploy to Production ("Last Chance Saloon" ("LCS") slot)'
    condition: and(succeeded(), eq(variables.isRelease, 'true'))
    dependsOn:
      - SetupVariablesStage
      - BuildAndTestAndPackageStage
      - DeployPreProductionSlotMain
    variables:
      version: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.version'] ]
      versionNoPadding: $[ stageDependencies.SetupVariablesStage.SetupVariablesJob.outputs['versionNumberOutputStep.versionNoPadding'] ]
    jobs:

      ## Deployment job - special job type which allows applying environment protection rules (e.g., approvals) prior to continuing on remaining jobs
      - deployment: testDeploymentEnvironmentCheck
        environment: 'gias-prod'
        displayName: 'ADO Environment: `gias-prod`'

      ## Debugging assistance job - display variables
      - job: DisplayVariablesJob
        steps:
          - task: PowerShell@2
            displayName: Display variables
            inputs:
              targetType: 'inline'
              script: |
                Write-Host "version: $(version)"
                Write-Host "versionNoPadding: $(versionNoPadding)"

      ## Deploy the packaged and tested code
      - template: 'pipelines/template-deployment-stage.yml'
        parameters:
          enabled: 'true'
          vmImage: 'windows-latest'
          thisJobName: 'DeployWebUiProductionSlotLcsJob'
          keyVaultServiceConnectionName: 'rg-t1pr-edubase'
          keyVaultName: 'kv-t1pr-edubase01'                                         ## Note change of naming convention from lower environments
          deploymentServiceConnectionName: 'rg-t1pr-edubase'                        ## Note change of naming convention from lower environments 
          artifactReference: 'BuiltAndPackagedWebUiZip'
          destinationResourceGroupName: 'rg-t1pr-edubase'
          destinationWebAppName: 'ea-edubase-prod'                                  ## Note change of naming convention from lower environments
          destinationDeployToSlotFlag: true
          destinationSlotName: 'lcs'
      
      ## Smoke test the base URL to prove that the code has been deployed
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiProductionSlotLcsJobWebRoot'
          previousDeploymentJobName: 'DeployWebUiProductionSlotLcsJob'
          keyVaultServiceConnectionName: 'rg-t1pr-edubase'
          keyVaultName: 'kv-t1pr-edubase01'
          smokeTestUrl: '/'                                                         # Relative to the root of the web app
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'       # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'       # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                        # C# Web App normally starts up very fast (should normally be available near immediately)

      ## Smoke test a URL which exercises the API and file storage connections, to prove that the code+configuration works with background services
      - template: 'pipelines/template-smoke-test-deployment.yml'
        parameters:
          enabled: 'true'
          vmImage: 'ubuntu-latest'
          thisJobName: 'smokeTestGiasWebUiProductionSlotLcsJobDownloadsPage'
          previousDeploymentJobName: 'DeployWebUiProductionSlotLcsJob'
          keyVaultServiceConnectionName: 'rg-t1pr-edubase'
          keyVaultName: 'kv-t1pr-edubase01'
          smokeTestUrl: '/Downloads'                                                # Relative to the root of the web app
          smokeTestBasicAuthUsernameKey: 'gias-smoke-test-http-auth-username'       # Note this is specifically the username key, not the username itself
          smokeTestBasicAuthPasswordKey: 'gias-smoke-test-http-auth-password'       # Note this is specifically the password key, not the password itself
          smokeTestNeedleString: $(versionNoPadding)
          smokeTestDurationBetweenRequestsSeconds: 5
          smokeTestMaximumDurationMinutes: 5                                        # C# Web App normally starts up very fast (should normally be available near immediately) 


