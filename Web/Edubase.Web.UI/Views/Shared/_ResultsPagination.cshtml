@{
    var startResult = @Model.StartIndex + 1;
    var endResult = (@Model.StartIndex + @Model.PageSize > @Model.Count) ? @Model.Count : @Model.StartIndex + @Model.PageSize;
    var currentPage = @Model.StartIndex / @Model.PageSize;
    var totalPages = @Model.Results.Count / @Model.PageSize;
    var action = ViewContext.RouteData.Values["action"].ToString();    
}
<div class="pagination">
    <p>Showing @startResult - @endResult of @Model.Count</p>
    <ul class="pagination-links">
    @{
        if (currentPage > 0)
        {
            <li>@Html.ActionLink("Previous",
                     @action,
                     new { Model.SearchTerm, startIndex = ((currentPage - 1) * Model.PageSize)},
                     new { @class = "pagination-prev" })</li>
        }

        for (int i = 0; i < Model.PageCount; i++)
            {
                var displayPage = i + 1;
                if (i == currentPage)
                {
                 <li><span class="go-nowhere numeric-pagination">@displayPage.ToString()</span></li>
                }
                else
                {
                <li>@Html.ActionLink(displayPage.ToString(),
                        @action, 
                        new { Model.SearchTerm, startIndex = (i * Model.PageSize)},
                        new { @class = "numeric-pagination" })</li>
                }
         }

        if (currentPage < totalPages)
        {
            <li>@Html.ActionLink("Next", 
                    @action,
                    new { Model.SearchTerm,
                    startIndex = ((currentPage + 1) * Model.PageSize)},
                    new { @class = "pagination-next" })</li>
        }
    }
    </ul>
</div>
