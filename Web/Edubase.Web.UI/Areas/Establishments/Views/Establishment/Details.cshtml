@using Edubase.Web.UI.Helpers
@using Edubase.Web.UI.Models
@using Edubase.Common
@using Edubase.Services.Enums
@using Edubase.Web.UI.Models.Search
@using Microsoft.Ajax.Utilities
@model EstablishmentDetailViewModel
@{
    ViewBag.Title = Model.Establishment.Name;
    ViewBag.PageClass = "school-details";
    ViewBag.HideLogo = true;
}

@section BreadCrumbs {
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-breadcrumbs">
                <ol class="govuk-breadcrumbs__list">
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Search", "Index", "Search", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>

                    @if (!Model.SearchQueryString.IsNullOrWhiteSpace())
                    {
                        if (Model.SearchSource == eLookupSearchSource.Governors)
                        {
                            <li class="govuk-breadcrumbs__list-item">
                                <a class="govuk-breadcrumbs__link" href=@($"{Url.Action("Index", "GovernorSearch", new { area = "Governors" })}?{Model.SearchQueryString}")>Search results</a>
                            </li>
                        }
                        else
                        {
                            <li class="govuk-breadcrumbs__list-item">
                                <a class="govuk-breadcrumbs__link" href=@($"{Url.Action("Index", "EstablishmentsSearch", new { area = "Establishments" })}?{Model.SearchQueryString}")>Establishments</a>
                            </li>
                        }
                    }
                </ol>
            </div>
        </div>
    </div>
}

@if (ViewBag.ShowSaved != null && ViewBag.ShowSaved)
{
    var description = "Your changes have been saved";
    if (!((string)ViewBag.Confirmed).IsNullOrEmpty())
    {
        description = ViewBag.Confirmed == "Governance" ? "Governance information confirmed" : "Details confirmed";
    }

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="pending-updates-message js-dismiss-message js-trigger-aria-live" role="alert">
                <div id="update-banner-tick-icon" class="tick"></div>
                <p id="update-banner-body" class="message-text" aria-live="polite">@description</p>
                <a class="cross" href="#">
                    <span class="govuk-visually-hidden">Dismiss notification</span>
                </a>
            </div>
        </div>
    </div>
}

@if ((ViewBag.ApprovedCount != null && ViewBag.ApprovedCount > 0) || (ViewBag.PendingApprovalCount != null && ViewBag.PendingApprovalCount > 0))
{
    var approvedCount = (int)ViewBag.ApprovedCount;
    var pendingCount = (int)ViewBag.PendingApprovalCount;
    var pendingTickClass = approvedCount > 0 ? "tickNotTop" : "tick";
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="pending-updates-message js-dismiss-message js-trigger-aria-live" role="alert">
                <p id="approval-banner-body" class="message-text" aria-live="polite">
                    @if (approvedCount > 0)
                    {
                        <div id="approval-banner-tick-icon" class="tick"></div>
                        <p>@approvedCount change@(Html.Conditional(approvedCount > 1, "s")) to establishment details @(approvedCount > 1 ? "have" : "has") been instantly updated.</p>
                    }
                    @if (approvedCount > 0 && pendingCount > 0)
                    {
                        <p>
                            <br/>
                        </p>
                    }
                    @if (pendingCount > 0)
                    {
                        <div class="@pendingTickClass"></div>
                        <p>@pendingCount change@(Html.Conditional(pendingCount > 1, "s")) to establishment details require DfE approval. You do not need to take any action now and changes will be made soon. If the DfE need more information they will contact you.</p>
                    }
                </p>
                <a class="cross" href="#">
                    <span class="govuk-visually-hidden">Dismiss notification</span>
                </a>
            </div>
        </div>
    </div>
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <h1 class="govuk-heading-l gias-landing-heading">
            <span id="establishment-heading" class="heading-preamble">Establishment</span>
            <span id="establishment-name">@(Model.Establishment.Name.Clean() ?? "(name not recorded)")</span>
        </h1>

        <p class="urn establishment-fine-detail"><abbr id="urn-value" title="Unique Reference Number">URN</abbr>: @Model.Establishment.Urn</p>
        <p id="establishment-type" class="establishment-type establishment-fine-detail">@Model.TypeName</p>
        <p id="establishment-data-download" class="establishment-data-download">
            @Html.RouteLink("Download establishment data", "EstabDataDownload", new
            {
                Model.Establishment.Urn,
                state = UriHelper.SerializeToUrlToken(RouteDto.Create(
                    new RouteDto("Search", new RouteValueDictionary(new { SelectedTab = SearchViewModel.Tab.Establishments.ToString() }), "Search"),
                    Model.LegalParentGroupRouteDto,
                    Model.EstabDetailRouteDto))
            }, new { rel = "nofollow", id = "establishment-data-download-link" })
        </p>

        @if (Model.LegalParentGroup != null)
        {
            <div>
                <p class="establishment-fine-detail">@Model.GetGroupFieldLabel(Model.LegalParentGroup): @Html.RouteLink(Model.LegalParentGroupRouteDto.Label, Model.LegalParentGroupRouteDto.RouteName, Model.LegalParentGroupRouteDto.RouteValues, HtmlHelper.AnonymousObjectToHtmlAttributes(new { @class = "govuk-breadcrumbs__link" }))</p>
            </div>
        }

        @if (Model.IsClosed)
        {
            if (Model.Establishment.CloseDate != null)
            {
                <div id="gias-establishment-closed-message" class="gias-establishment-closed-message">
                    <p>
                        This establishment closed on @(Model.Establishment.CloseDate?.ToString("d MMMM yyyy")).
                        View details of <a href="#school-links" class="tab-manipulator">linked establishments</a>
                    </p>
                </div>
            }
            else
            {
                <div id="gias-establishment-closed-message" class="gias-establishment-closed-message">
                    <p>
                        This establishment is closed.
                        View details of <a href="#school-links" class="tab-manipulator">linked establishments</a>
                    </p>
                </div>
            }
        }
    </div>
</div>
@{ Html.RenderPartial(@"Partials\ConfirmationNotifications"); }

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <div class="gias-tabs-wrapper">
            <div class="tab-wrap" id="school-tab-wrap">
                <ul class="gias-tabs">
                    @if (Model.TabDisplayPolicy.Details)
                    {
                        <li class="gias-tabs__list-item">
                            <a href="#school-dashboard" id="details-tab-link" class="gias-tabs__tab">Details</a>
                        </li>
                    }

                    @if (Model.TabDisplayPolicy.Governance)
                    {
                        <li class="gias-tabs__list-item">
                            <a href="#school-governance" id="governance-tab-link" class="gias-tabs__tab">Governance</a>
                        </li>
                    }


                    @if (Model.TabDisplayPolicy.IEBT)
                    {
                        <li class="gias-tabs__list-item">
                            <a href="#school-iebt" id="iebt-tab-link" class="gias-tabs__tab">IEBT</a>
                        </li>
                    }

                    @if (Model.TabDisplayPolicy.Links)
                    {
                        <li class="gias-tabs__list-item">
                            <a href="#school-links" id="links-tab-link" class="gias-tabs__tab">Links</a>
                        </li>
                    }

                    @if (Model.TabDisplayPolicy.Location)
                    {
                        <li class="gias-tabs__list-item">
                            <a href="#school-location" id="location-tab-link" class="gias-tabs__tab">Location</a>
                        </li>
                    }

                    @if (Model.ChangeHistory != null && Model.TabDisplayPolicy.ChangeHistory)
                    {
                        <li class="gias-tabs__list-item">
                            <a href="#school-change-history" id="changes-tab-link" class="gias-tabs__tab">Changes</a>
                        </li>
                    }

                    @if (Model.TabDisplayPolicy.Helpdesk)
                    {
                        <li class="gias-tabs__list-item">
                            <a href="#helpdesk" id="helpdesk-tab-link" class="gias-tabs__tab">Helpdesk</a>
                        </li>
                    }
                </ul>
            </div>
            <div class="tab-content-wrapper gias-tabs-content">
                @{
                    if (Model.TabDisplayPolicy.Details)
                    {
                        Html.RenderPartial(@"Partials\TabDetails");
                    }

                    if (Model.TabDisplayPolicy.Governance)
                    {
                        Html.RenderPartial(@"Partials\TabGovernance");
                    }

                    if (Model.TabDisplayPolicy.IEBT)
                    {
                        Html.RenderPartial(@"Partials\TabIEBT");
                    }

                    if (Model.TabDisplayPolicy.Links)
                    {
                        Html.RenderPartial(@"Partials\TabLinks");
                    }

                    if (Model.TabDisplayPolicy.Location)
                    {
                        Html.RenderPartial(@"Partials\TabLocation");
                    }

                    if (Model.ChangeHistory != null && Model.TabDisplayPolicy.ChangeHistory)
                    {
                        Html.RenderPartial(@"Partials\TabChangeHistory");
                    }

                    if (Model.TabDisplayPolicy.Helpdesk)
                    {
                        Html.RenderPartial(@"Partials\TabHelpdesk");
                    }
                }
            </div>
        </div>
    </div>
</div>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full helptext-container">
        <div id="help-text-age-range">
            <h3 class="govuk-heading-s make-modal-header">Age range</h3>
            <p>@Model.AgeRangeToolTip</p>
            @if (!Model.AgeRangeToolTipLink.IsNullOrEmpty())
            {
                <p>
                    Link:
                    <a href="@Model.AgeRangeToolTipLink" target="_blank" rel="noreferrer noopener">
                        @Model.AgeRangeToolTipLink
                        (opens in new tab)
                    </a>
                </p>
            }
        </div>

        <div id="help-text-school-capacity">
            <h3 class="govuk-heading-s make-modal-header">School capacity</h3>
            <p class="govuk-body">@Model.SchoolCapacityToolTip</p>
            @if (!Model.SchoolCapacityToolTipLink.IsNullOrEmpty())
            {
                <p>
                    Link:
                    <a href="@Model.SchoolCapacityToolTipLink" target="_blank" rel="noreferrer noopener">
                        @Model.SchoolCapacityToolTipLink
                        (opens in new tab)
                    </a>
                </p>
            }
        </div>

        <div id="help-text-fsm">
            <h3 class="govuk-heading-s make-modal-header">Free school meals</h3>
            <div class="govuk-body">
                <p>
                    This field is not editable by establishment users as it is populated by the DfE using the underlying data
                    from the schools, pupils and their characteristics statistical release published each summer.
                    The figures used are the performance table figures which ensures GIAS and the Find and Compare Schools in
                    England service are consistent.
                </p>
                <p>
                    This information is compiled from the data returned by establishments for their establishment's situation
                    on the third Thursday in January, in the spring school census data collection return.
                </p>
                <p>
                    This field shows whether a pupil's family have claimed eligibility for free school meals as reported in
                    the annual spring school census. Pupils or their parents are able to claim free school meals if they
                    receive a qualifying benefit. This field does not show pupils who actually received free school meals
                    but the number of those who are eligible to receive them.
                </p>
            </div>
        </div>

        <div id="help-text-fsm-percentage">
            <h3 class="govuk-heading-s make-modal-header">Free school meals</h3>
            <div class="govuk-body">
                <p>
                    This field is not editable by establishment users as it is populated by the DfE using the underlying data
                    from the schools, pupils and their characteristics statistical release published each summer. The figures
                    used are the performance table figures which ensures GIAS and the Find and Compare Schools in England
                    service are consistent.
                </p>
                <p>
                    This information is compiled from the data returned by establishments for their establishment's situation
                    on the third Thursday in January, in the spring school census data collection return.
                </p>
                <p>
                    This field shows whether a pupil's family have claimed eligibility for free school meals as reported in
                    the annual spring school census. Pupils or their parents are able to claim free school meals if they
                    receive a qualifying benefit. This field does not show pupils who actually received free school meals but
                    the percentage of those who are eligible to receive them.
                </p>
            </div>
        </div>

        <div id="help-text-msoa">
            <h3 class="govuk-heading-s make-modal-header">Middle super output area (MSOA)</h3>
            <div class="govuk-body">
                <p>
                    The data presented for the middle super output area (MSOA) is representative of the 2021 census.
                </p>
            </div>
        </div>

        <div id="help-text-lsoa">
            <h3 class="govuk-heading-s make-modal-header">Lower super output area (LSOA)</h3>
            <div class="govuk-body">
                <p>
                    The data presented for the lower super output area (LSOA) is representative of the 2021 census.
                </p>
            </div>
        </div>
    </div>
</div>

@section ViewScripts {
    <script nonce="@Html.ScriptNonce()">
    var estabOpen = @((Model.Establishment.CloseDate == null).ToString().ToLower());
    var mapMode = 'establishment';
    </script>
    <script src="@Html.Raw(Html.GetWebpackScriptUrl("landing-page-bundle.*.js"))"></script>
}
