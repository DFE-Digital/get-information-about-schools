@model GlossaryItemViewModel
@{
    ViewBag.Title = string.Concat(!ViewData.ModelState.IsValid ? "Error: " : string.Empty, "GIAS: Glossary");
    ViewBag.SiteSection = "help";
}

@section BreadCrumbs
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-breadcrumbs">
                <ol class="govuk-breadcrumbs__list">
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
                    <li class="govuk-breadcrumbs__list-item">
                        @Html.RouteLink("Glossary", "Glossary", null,new {@class = "govuk-breadcrumbs__link"})
                    </li>
                </ol>
            </div>
        </div>
    </div>
}
<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        @Html.Partial("_ValidationSummary", ViewData.ModelState)

        <h1 class="govuk-heading-xl">@(Model.Id == null ? "Create" : "Edit") glossary entry</h1>
    </div>
</div>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">

        @using (Html.BeginRouteForm(Model.Id == null ? "PostCreateGlossaryItem" : "PostEditGlossaryItem", new { Model.Id } , FormMethod.Post))
        {
            @Html.HiddenFor(x => x.Id)
            <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.Title)">
                @Html.LabelFor(x => x.Title, new { @class = "govuk-label" })
                @Html.ValidationMessageFor(x => x.Title, null, new { @class = "govuk-error-message" })
                @Html.TextBoxFor(x => x.Title, new { @class = "govuk-input" })
            </div>

            <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.Content)">
                @Html.LabelFor(x => x.Content, new { @class = "govuk-label" })
                @Html.ValidationMessageFor(x => x.Content, null, new { @class = "govuk-error-message" })
                @Html.TextAreaFor(x => x.Content, 10, 40, new { @class = "govuk-textarea entry-content" })
            </div>

            <div class="button-row govuk-!-padding-top-8">
                <button type="submit" class="govuk-button">Save entry</button>
                @if (Model.Id != null)
                {
                    <button type="submit" class="govuk-button govuk-button--secondary" name="@nameof(Model.IsDeleting)"  id="delete-button" value="true">Delete</button>
                }
                @Html.RouteLink("Cancel", "Glossary", null, new { @class = "govuk-button govuk-button--secondary" })
            </div>
        }
    </div>
</div>


@section ViewScripts
{
    <script nonce="@Html.ScriptNonce()">  window.isGlossaryEdit = true; </script>

    <script src="@Html.Raw(Html.GetWebpackScriptUrl("edit-faq-glossary.*.js"))"></script>
}
