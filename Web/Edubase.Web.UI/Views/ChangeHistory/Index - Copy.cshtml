@using Edubase.Services.Enums
@model ChangeHistoryViewModel
@{
    ViewBag.Title = "Search change history";
    ViewBag.bodyClasses = "search-changes";

    var recordCount = 0;
    if (Model.Changes != null)
    {
        recordCount = (int)Model.Changes.Count;
    }
}
<div class="breadcrumbs">
    <ul>
        <li>
            @Html.ActionLink("Home", "Index", "Search", new { area = "" }, null)
        </li>
        <li>
            @Html.ActionLink("Tools", "Index", "Tools", new { area = "" }, null)
        </li>
        @if (Model.Changes != null)
        {
            <li>
                @Html.ActionLink("Change history", "Index", "ChangeHistory", new { area = "" }, null)
            </li>
        }
    </ul>
</div>

<h1 class="heading-xlarge">Change history</h1>

@Html.ValidationSummary("Incorrect or missing details", new { @class = "error-summary" })

<div class="grid-row" id="change-history-app">
    @using (Html.BeginRouteForm("ChangeHistorySearch", FormMethod.Get, new { id = "change-history-form", data_record_count = recordCount }))
    {
        <div class="column-two-thirds">
            <p>
                This allows you to find out when establishments (such as schools, colleges and
                children's centres) and groups (such as multi academy trusts and federations)
                made changes to their records and what was changed.
            </p>
            <p>
                If you want to view the change history for a single establishment or group, look in
                the 'Changes' tab on the establishment or group's page.
            </p>
        </div>
        <div class="column-full @(Model.Changes == null ? "" : "hidden")">
            <fieldset class="inline">
                <legend class="heading-small">Choose establishment or group change history</legend>
                <div class="form-group panel-toggler">
                    <span class="radio-button-wrap">
                        <input id="searchtype-establishment" name="@nameof(Model.SearchType)" value="establishment" type="radio" @Html.Conditional(Model.SearchType == "establishment", "checked") />
                        <label class="edubase-button-radio" for="searchtype-establishment">
                            All establishments
                        </label>
                    </span>
                    <span class="radio-button-wrap">
                        <input id="searchtype-group" name="@nameof(Model.SearchType)" value="group" type="radio" @Html.Conditional(Model.SearchType == "group", "checked") />
                        <label class="edubase-button-radio" for="searchtype-group">
                            All groups
                        </label>
                    </span>
                </div>
            </fieldset>

            <input type="submit" class="button" value="Update" id="update-search-type-selection" />

            <div id="establishment-search-filters" class="panel-indent" style="display:@(Model.SearchType != null ? "" : "none");">
                <div class="expander-panel open-expander">
                    <a href="#" class="panel-trigger heading-small">Changed date</a>
                    <a href="#date-reference-help" class="icon-help">
                        <span class="visuallyhidden">About date types</span>
                    </a>
                    <div class="expander-panel-content" >
                        <div class="form-group inline hidden" id="date-type">
                            <span class="radio-button-wrap">
                                <input id="date-applied" name="@nameof(Model.DateFilterMode)" value="@ChangeHistoryViewModel.DATE_FILTER_MODE_APPLIED" type="radio" @Html.Conditional(Model.DateFilterMode == ChangeHistoryViewModel.DATE_FILTER_MODE_APPLIED, "checked")>
                                <label class="edubase-button-radio" for="date-applied">Applied</label>
                            </span>

                            <span class="radio-button-wrap">
                                <input id="date-approved" name="@nameof(Model.DateFilterMode)" value="@ChangeHistoryViewModel.DATE_FILTER_MODE_APPROVED" type="radio" @Html.Conditional(Model.DateFilterMode == ChangeHistoryViewModel.DATE_FILTER_MODE_APPROVED, "checked")>
                                <label class="edubase-button-radio" for="date-approved">Approved</label>
                            </span>

                            <span class="radio-button-wrap">
                                <input id="date-effective" name="@nameof(Model.DateFilterMode)" value="@ChangeHistoryViewModel.DATE_FILTER_MODE_EFFECTIVE" type="radio" @Html.Conditional(Model.DateFilterMode != ChangeHistoryViewModel.DATE_FILTER_MODE_APPLIED || Model.DateFilterMode != ChangeHistoryViewModel.DATE_FILTER_MODE_APPROVED, "checked")>
                                <label class="edubase-button-radio" for="date-effective">Effective</label>
                            </span>
                        </div>

                        <div class="form-group panel-indent">
                            @Html.EditorFor(x => x.DateFilterFrom, new { title = "Changed date from", disableHint = true })
                            @Html.EditorFor(x => x.DateFilterTo, new { title = "Changed date to", disableHint = true })
                        </div>
                    </div>

                </div>
                <div class="expander-panel for-search-type-establishment" style="display:@(Model.SearchType == "establishment" ? "" : "none");">
                    <a href="#" class="panel-trigger heading-small">Establishment type</a>
                    <div class="expander-panel-content">

                        @foreach (var item in Model.EstablishmentTypes)
                        {
                            var name = ChangeHistoryViewModel.BIND_ALIAS_ESTABTYPEIDS;

                            <span class="checkbox-wrap">
                                <input id="@(name + "_" + item.Id)" name="@name" value="@item.Id" type="checkbox" @Html.Conditional(Model.SelectedEstablishmentTypeIds.Contains(item.Id), "checked") />
                                <label for="@(name + "_" + item.Id)" class="edubase-button-checkbox">@item.Name</label>
                            </span>
                        }

                    </div>

                </div>
                <div class="expander-panel for-search-type-establishment" style="display:@(Model.SearchType == "establishment" ? "" : "none");">
                    <a href="#" class="panel-trigger heading-small">Establishment fields</a>
                    <div class="expander-panel-content">
                        @foreach (var item in Model.EstablishmentFields)
                        {
                            var name = ChangeHistoryViewModel.BIND_ALIAS_FIELDS;
                            <span class="checkbox-wrap">
                                <input id="@(name + "_" + item.Key)" name="@name" value="@item.Key" type="checkbox" @Html.Conditional(Model.SelectedEstablishmentFields.Contains(item.Key), "checked") />
                                <label for="@(name + "_" + item.Key)" class="edubase-button-checkbox">@item.Text</label>
                            </span>
                        }
                    </div>
                </div>

                <div class="expander-panel for-search-type-group" style="display:@(Model.SearchType == "group" ? "" : "none");">
                    <a href="#" class="panel-trigger heading-small">Group type</a>
                    <div class="expander-panel-content">

                        @foreach (var item in Model.GroupTypes)
                        {
                            var name = ChangeHistoryViewModel.BIND_ALIAS_GROUPTYPEIDS;
                            <span class="checkbox-wrap">
                                <input id="@(name + "_" + item.Id)" name="@name" value="@item.Id" type="checkbox" @Html.Conditional(Model.SelectedGroupTypeIds.Contains(item.Id), "checked") />
                                <label for="@(name + "_" + item.Id)" class="edubase-button-checkbox">@item.Name</label>
                            </span>
                        }

                    </div>
                </div>
                <div class="expander-panel last-panel">
                    <a href="#" class="panel-trigger heading-small">Author and approver</a>
                    <div class="expander-panel-content">
                        <div class="column-third">
                            <div class="form-group">
                                @Html.LabelFor(x => x.SelectedSuggesterId, "Change suggested by", new { @class = "form-label" })
                                @Html.DropDownListFor(x => x.SelectedSuggesterId, Model.Suggesters, "Select user group", new { @class = "form-control" })
                            </div>

                            <div class="form-group hidden" id="approver-wrap">
                                @Html.LabelFor(x => x.SelectedApproverId, "Change approved by", new { @class = "form-label" })
                                @Html.DropDownListFor(x => x.SelectedApproverId, Model.Approvers, "Select user group", new { @class = "form-control" })
                            </div>
                        </div>
                    </div>
                </div>

            @Html.RouteLink("Reset filters", "ChangeHistoryCriteria", null)
            </div>

            <div class="button-row">
                <input type="submit" class="button" value="Search" />
                
            </div>
            <div class="helptext-container">
                <div id="date-reference-help">
                    <h3 class="bold-small">Types of dates</h3>
                    <p class="change-history-help">
                        <strong class="bold-xsmall">Applied:</strong>
                        When the establishment or group submitted the change request.
                        <br/>
                        <strong class="bold-xsmall">Approved:</strong>
                        When the relevant authority granted the change request.
                        <br/>
                        <strong class="bold-xsmall">Effective:</strong>
                        When the change actually took effect.
                    </p>
                </div>
            </div>
            
        </div>

        if (Model.Changes != null)
        {
            <div class="column-full">
                <h2 class="heading-small">Download change history</h2>

                <div class="form-group padded-group">
                    <span class="radio-button-wrap">
                        <input id="download-csv" name="@nameof(Model.DownloadFormat)" value="csv" type="radio" @Html.Conditional(Model.DownloadFormat == Edubase.Services.Enums.eFileFormat.CSV, "checked") />
                        <label class="edubase-button-radio" for="download-csv">
                            Data in CSV format
                        </label>
                    </span>
                    <span class="radio-button-wrap">
                        <input id="download-xlsx" name="@nameof(Model.DownloadFormat)" value="xlsx" type="radio" @Html.Conditional(Model.DownloadFormat == Edubase.Services.Enums.eFileFormat.XLSX, "checked") />
                        <label class="edubase-button-radio" for="download-xlsx">
                            Data in XLSX format
                        </label>
                    </span>
                </div>

                <button type="submit" name="@nameof(Model.StartDownload)" class="button" value="true" id="download-continue">Continue</button>

                <div>
                    <p><button type="submit" name="@nameof(Model.ClearResults)" class="button-as-link" value="true">Show filters</button></p>
                    @Html.Partial("_GenericPagination", Model)
                </div>

                @if (Model.IsEstablishmentSearch)
                    {
                    <table class="edubase-table change-history establishment-changes" id="changes-table">
                        <thead>
                            <tr>
                                <th scope="col" class="cell-urn">
                                    <abbr title="Unique reference number">
                                        URN
                                    </abbr>
                                </th>
                                <th scope="col" class="cell-estab">Establishment</th>
                                <th scope="col" class="cell-edate">Date changed</th>
                                <th scope="col" class="cell-updatedfield">Updated field</th>
                                <th scope="col" class="cell-oldvalue">Old value</th>
                                <th scope="col" class="cell-newvalue">New value</th>
                                <th scope="col" class="cell-suggested">Suggested by</th>
                                <th scope="col" class="cell-suggested">Approved by</th>
                            </tr>
                        </thead>
                        @if (Model.Changes.Items.Any())
                        {
                            <tbody>
                                @foreach (var item in Model.Changes.Items)
                                {
                                    <tr>
                                        <td aria-label="URN">@Html.RouteLink(item.EstablishmentUrn.ToString(), "EstabDetails", new { id =  item.EstablishmentUrn})</td>
                                        <td aria-label="Establishment">@Html.RouteLink(item.EstablishmentName, "EstabDetails", new { id = item.EstablishmentUrn })</td>
                                        <td aria-label="Date changed">@(item.DateChanged?.ToString("dd/MM/yyyy"))</td>
                                        <td aria-label="Updated field">@item.FieldName</td>
                                        <td aria-label="Old value">@item.OldValue</td>
                                        <td aria-label="New value">@item.NewValue</td>
                                        <td aria-label="Suggested by">@item.SuggesterName</td>
                                        <td aria-label="Approved by">@item.ApproverName</td>
                                    </tr>
                                }
                            </tbody>
                        }
                        else
                        {
                            <tbody>
                                <tr>
                                    <td colspan="9">
                                        <p> No items</p>
                                    </td>
                                </tr>
                            </tbody>
                        }
                    </table>
                }
                else
                {
                    <table class="edubase-table change-history" id="changes-table">
                        <thead>
                            <tr>
                                <th scope="col" class="cell-edate">Date changed</th>
                                <th scope="col" class="cell-requesttype">Request type</th>
                                <th scope="col" class="cell-urn">Group UID</th>
                                <th scope="col" class="cell-estab">Group</th>
                                <th scope="col" class="cell-change">Change</th>
                                <th scope="col" class="cell-suggested">Suggested by</th>
                            </tr>
                        </thead>
                        @if (Model.Changes.Items.Any())
                        {
                            <tbody>
                                @foreach (var item in Model.Changes.Items)
                                {
                                    <tr>
                                        <td aria-label="Date changed">@(item.DateChanged?.ToString("dd/MM/yyyy"))</td>
                                        <td aria-label="Request type">@item.RequestType</td>
                                        <td aria-label="Group UID">@Html.RouteLink(item.GroupUId.ToString(), "GroupDetails", new { id = item.GroupUId })</td>
                                        <td aria-label="Group">@Html.RouteLink(item.GroupName, "GroupDetails", new { id = item.GroupUId })</td>
                                        <td aria-label="Change">
                                            <dl class="key-value-list">
                                                @if (item.RequestType == GroupChangeRequestType.GroupChange)
                                                {
                                                    <dt>Field</dt>
                                                    <dd>@item.FieldName</dd>
                                                    <dt>Old value</dt>
                                                    <dd>@item.OldValue</dd>
                                                    <dt>New value</dt>
                                                    <dd>@item.NewValue</dd>
                                                }
                                                else
                                                {
                                                    <dt>Establishment</dt>
                                                    <dd>@item.LinkUrn @item.LinkEstablishmentName</dd>
                                                    <dt>Link date</dt>
                                                    <dd>@(item.LinkDateUtc?.ToString("dd/MM/yyyy"))</dd>
                                                    <dt>Type</dt>
                                                    <dd>@(item.LinkType?.ToString() ?? "not recorded")</dd>
                                                }

                                            </dl>
                                        </td>
                                        <td aria-label="Suggested by">@item.SuggesterName</td>
                                    </tr>
                                }
                            </tbody>
                        }
                        else
                        {
                            <tbody>
                                <tr>
                                    <td colspan="9">
                                        <p> No items</p>
                                    </td>
                                </tr>
                            </tbody>
                        }
                    </table>
                }
            </div>

        }
    }
</div>


@section ViewScripts {


    <script>
        (function () {
            var panels = document.querySelectorAll('.expander-panel');

            Array.prototype.forEach.call(panels,
                function (el) {
                    var trigger = el.querySelectorAll('.panel-trigger')[0];
                    var checkBoxes = el.querySelectorAll('.checkbox-wrap');

                    trigger.addEventListener('click', function (e) {
                        e.preventDefault();
                        el.classList.toggle('open-expander');

                        if (!el.getAttribute('data-checkboxheight')) {
                            for (var i = 0, len = checkBoxes.length; i < len; i++) {
                                var chxBox = checkBoxes[i];
                                if (chxBox.offsetHeight > 64) {
                                    chxBox.classList.add('long-label');
                                }
                                chxBox.addEventListener('click', function () {
                                    if (!el.getAttribute('data-checkboxescleared')) {
                                        [].forEach.call(checkBoxes, function (cb) {
                                            cb.querySelectorAll('input')[0].checked = false;
                                        });

                                        this.childNodes[0].checked = true;
                                        el.setAttribute('data-checkboxescleared', 1);
                                    }
                                });
                            }
                            el.setAttribute('data-checkboxheight', 1);
                        }
                    });
                });

            $("#update-search-type-selection").hide();

            $("#searchtype-establishment,#searchtype-group").change(function () {
                if (this.value === 'establishment') {
                    $('#approver-wrap, #date-type, .icon-help').removeClass('hidden');
                } else {
                    $('#approver-wrap, #date-type, .icon-help').addClass('hidden');
                }
                $("#establishment-search-filters").show();
            });

            $("#searchtype-establishment").change(function () {
                $(".for-search-type-group").hide();
                $(".for-search-type-establishment").show();
            });

            $("#searchtype-group").change(function () {
                $(".for-search-type-establishment").hide();
                $(".for-search-type-group").show();
            });

            if ($('#searchtype-establishment').prop('checked')) {
                $('#searchtype-establishment').change();
            }

            if ($('#searchtype-group').prop('checked')) {
                $('#searchtype-group').change();
            }


            if (Number($('#change-history-form').data().recordCount) > 20000) {
                $('#download-continue').okCancel({
                    ok: function () {
                        this.closeModal();
                    },
                    cancel: null,
                    title: 'Too many records',
                    content: 'Please filter your search to fewer than 20000 records.',
                    triggerEvent: 'click'

                });
            }
        }());
    </script>



}
