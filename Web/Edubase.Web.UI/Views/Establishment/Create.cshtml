@model CreateEstablishmentViewModel
@{
    ViewBag.Title = "Edubase: Create a new establishment";
    ViewBag.bodyClasses = "create-establishment";
}

<div class="breadcrumbs">
    <ul>
        <li>
            @Html.ActionLink("Home", "Index", "Search", new { area = "" }, null)
        </li>
        <li>
            @Html.ActionLink("Tools", "Index", "Tools", new { area = "" }, null)
        </li>
    </ul>
</div>

<div id="create-establishment">
    <div class="grid-row">
        <div class="column-full">
            <h1 class="heading-large">
                Create a school or college
            </h1>

            @Html.ValidationSummary("Incorrect or missing details", new { @class = "error-summary" })
        </div>

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="column-full top-button-panel">
                <div class="submit-cancel-panel">
                    <button type="submit" name="action" value="" class="button">Create establishment</button>
                    <button type="submit" name="action" value="" class="button button-grey cancel mobile-full-width">Cancel</button>
                </div>
            </div>

            <div class="column-half">
                <h2 class="heading-medium">New establishment</h2>

                <div class="form-group @Html.ValidationCssClassFor(x => x.Name)">
                    @Html.LabelFor(x => x.Name, "Establishment name")
                    @Html.ValidationMessageFor(x => x.Name)
                    @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
                </div>

                <div class="form-group @Html.ValidationCssClassFor(x => x.LocalAuthorityId)">
                    @Html.LabelFor(x => x.LocalAuthorityId, "Local authority", new { @class = "form-label" })
                    @Html.ValidationMessageFor(x => x.LocalAuthorityId)
                    @Html.DropDownListFor(x => x.LocalAuthorityId, Model.LocalAuthorities, "Please select", new { @class = "form-control" })
                </div>

                <div class="form-group @Html.ValidationCssClassFor(x => x.EducationPhaseId)">
                    @Html.LabelFor(x => x.EducationPhaseId, "Phase of education", new { @class = "form-label" })
                    @Html.ValidationMessageFor(x => x.EducationPhaseId)
                    @Html.DropDownListFor(x => x.EducationPhaseId, Model.EducationPhases, "Please select", new { @class = "form-control" })
                </div>

                <div class="form-group @Html.ValidationCssClassFor(x => x.EstablishmentTypeId)">
                    @Html.LabelFor(x => x.EstablishmentTypeId, "Establishment type", new { @class = "form-label" })
                    @Html.ValidationMessageFor(x => x.EstablishmentTypeId)
                    @Html.DropDownListFor(x => x.EstablishmentTypeId, Model.EstablishmentTypes, "Please select", new { @class = "form-control" })
                </div>
            </div>
            <div class="column-full">
                <fieldset class="inline" id="number-gen-options">
                    <legend class="heading-small">Establishment number</legend>
                    <div class="form-group @Html.ValidationCssClassFor(x => x.GenerateEstabNumber)">
                        @Html.ValidationMessageFor(x => x.GenerateEstabNumber)
                        <label class="block-label selection-button-radio" for="generate-number-radio">
                            @Html.RadioButtonFor(x => x.GenerateEstabNumber, true, new { id = "generate-number-radio" })
                            Generate number
                        </label>

                        <label class="block-label selection-button-radio" for="enter-number-radio">
                            @Html.RadioButtonFor(x => x.GenerateEstabNumber, false, new { id = "enter-number-radio" })
                            Enter number
                        </label>
                    </div>
                </fieldset>
            </div>

            <div class="column-half">
                <div id="enter-number" class="form-group panel-border-narrow estab-number-wrap hidden @Html.ValidationCssClassFor(x => x.EstablishmentNumber)">
                    @Html.LabelFor(x => x.EstablishmentNumber, "Enter the establishment number")
                    @Html.ValidationMessageFor(x => x.EstablishmentNumber)
                    @Html.TextBoxFor(x => x.EstablishmentNumber, new { @class = "form-control" })
                </div>
            </div>

            <div class="column-full">
                <div class="submit-cancel-panel">
                    <button type="submit" name="action" value="" class="button">Create establishment</button>
                    <button type="submit" name="action" value="" class="button button-grey cancel mobile-full-width">Cancel</button>
                </div>
            </div>
        }

    </div>
</div>

@section ViewScripts {
    <script type="text/javascript">

        $(function () {
            var $radios = $('#number-gen-options').find(':radio');
            var $enterNumber = $("#enter-number");

            var func = function () {
                if ($radios.filter(':checked').val() === 'False') {
                    $enterNumber.removeClass('hidden');
                } else {
                    $enterNumber.addClass('hidden');
                }
            };

            $radios.on('change', func);

            func();
        });

    </script>
}