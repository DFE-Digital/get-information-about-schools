@using System.Linq
@using ViewModel = Edubase.Web.UI.Models.EditEstablishmentModel
@model ViewModel
@{
    if (Model.ChangesSummary == null)
    {
        ViewBag.OriginalEstablishmentName = Model.OriginalEstablishmentName;
        ViewBag.OriginalTypeName = Model.OriginalTypeName;
        Layout = "_EditLayoutPage.cshtml";
    }
    else
    {
        ViewBag.bodyClasses = "create-edit school-details";
        ViewBag.hideLogo = true;
        ViewBag.Title = "Edit establishment";
    }
}

@section BreadCrumbs
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-breadcrumbs">
                <ol class="govuk-breadcrumbs__list">
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Search", new {area = ""}, null)</li>
                    @if (Model.LegalParentGroup != null)
                    {
                        <li class="govuk-breadcrumbs__list-item">@Html.ActionLink(Model.LegalParentGroup.Name, "Details", "Group", new {id = Model.LegalParentGroup.GroupUId, area = "Groups"}, null)</li>
                    }
                </ol>
            </div>
        </div>
    </div>
}

@using (Html.BeginForm())
{
    <div class="tab-content">
    @Html.AntiForgeryToken()
    @Html.HiddenFor(x => x.Urn)
    @Html.HiddenFor(x => x.SelectedTab)
    @Html.HiddenFor(x => x.TypeName)
    @Html.HiddenFor(x => x.LegalParentGroupToken)
    @Html.HiddenFor(x => x.ChangesInstantCount)
    @Html.HiddenFor(x => x.ChangesRequireApprovalCount)

    <div class="@Html.Conditional(Model.ChangesSummary != null, "hidden")">
    <div class="govuk-grid-row">
    <div class="govuk-grid-column-one-half">
    <div class="button-row govuk-!-padding-bottom-4">
        <button id="save-submit-top" type="submit" class="govuk-button" name="@nameof(Model.ActionSpecifier)" value="@ViewModel.ASSave">Save details</button>
        @Html.ActionLink("Cancel", "Details", "Establishment", new {id = Model.Urn}, new {@class = "govuk-button govuk-button--secondary cancel", data_module = "govuk-button"})
    </div>

    <div class="govuk-form-group first @Html.ValidationCssClassFor(x => x.Name)">
        <label class="govuk-label" for="Name">
            School / College name
        </label>
        @Html.ValidationMessageFor(x => x.Name, null, new {@class = "govuk-error-message"})
        @Html.TextBoxFor(x => x.Name, new {maxlength = 120, @class = "govuk-input"})
    </div>

    <div class="govuk-form-group">
        <label class="govuk-label" for="urn">Unique Reference Number (URN)</label>
        @Html.TextBoxFor(x => x.Urn, new {id = "urn", @class = "govuk-input", placeholder = "auto-generated", @readonly = true, disabled = "disabled"})
    </div>

    <div class="govuk-form-group">
        <label for="school-street" class="govuk-label">Street</label>
        @Html.TextBoxFor(x => x.Address_Line1, new {maxlength = 120, id = "school-street", @class = "govuk-input"})
    </div>

    <div class="govuk-form-group">
        <label for="school-locality" class="govuk-label">Locality</label>
        @Html.TextBoxFor(x => x.Address_Locality, new {maxlength = 120, id = "school-locality", @class = "govuk-input"})
    </div>

    <div class="govuk-form-group">
        <label for="school-addressline3" class="govuk-label">Address 3</label>
        @Html.TextBoxFor(x => x.Address_Line3, new {maxlength = 120, id = "school-addressline3", @class = "govuk-input"})
    </div>

    <div class="govuk-form-group">
        <label for="school-town" class="govuk-label">Town</label>
        @Html.TextBoxFor(x => x.Address_CityOrTown, new {maxlength = 120, id = "school-town", @class = "govuk-input"})
    </div>

    @if (Model.Address_CountryId == Edubase.Services.Texuna.Lookup.Constants.COUNTRY_ID_UK)
    {
        <div class="govuk-form-group">
            <label for="Address_CountyId" class="govuk-label">County</label>
            @Html.DropDownListFor(x => x.Address_CountyId, Model.Counties, "", new {@class = "govuk-input"})
        </div>
    }

    @if (Model.Address_CountryId != Edubase.Services.Texuna.Lookup.Constants.COUNTRY_ID_UK)
    {
        <div class="govuk-form-group">
            @Html.LabelFor(x => x.Address_CountryId, "Country", new {@class = "govuk-label"})
            @Html.DropDownListFor(x => x.Address_CountryId, Model.Countries, "", new {@class = "govuk-input", disabled = "disabled"})
        </div>
    }

    @Html.HiddenFor(x => x.Address_CountryId)

    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.Address_PostCode)">
        @Html.LabelFor(x => x.Address_PostCode, "Postcode", new {@class = "govuk-label"})
        @Html.ValidationMessageFor(x => x.Address_PostCode, null, new {@class = "govuk-error-message"})
        @Html.TextBoxFor(x => x.Address_PostCode, new {maxlength = 120, @class = "govuk-input govuk-input--width-10", disabled = "disabled"})
        @Html.HiddenFor(x => x.Address_PostCode)
        @Html.RouteLink("Replace this address", "AddOrReplaceEstablishmentAddress", new {urn = Model.Urn, target = "main"}, new {@class = "replace-address"})
    </div>

    @Html.HiddenFor(x => x.Address_UPRN)
    @Html.HiddenFor(x => x.Northing)
    @Html.HiddenFor(x => x.Easting)

    @if (Model.EditPolicy.AdditionalAddresses)
    {
        Html.RenderPartial("Partials/_EditAddresses");
        <div class="govuk-form-group">
            @Html.RouteLink("Add new address", "AddOrReplaceEstablishmentAddress", new {urn = Model.Urn, target = "alt-new"}, new {@class = "replace-address flush--left"})
        </div>
    }

    @if (Model.EditPolicy.HeadTitleId)
    {
        <div class="govuk-form-group">
            <label class="govuk-label" for="HeadTitleId">
                @(Model.EditPolicy.HeadteacherLabel) title
            </label>
            @Html.DropDownListFor(x => x.HeadTitleId, Model.HeadTitles, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.HeadFirstName)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.HeadFirstName)">
            <label class="govuk-label" for="HeadFirstName">
                @(Model.EditPolicy.HeadteacherLabel) first name
            </label>
            @Html.ValidationMessageFor(x => x.HeadFirstName, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.HeadFirstName, new {maxlength = 120, @class = "govuk-input", placeholder = "First name"})
            @Html.HiddenFor(x => x.OldHeadFirstName)
        </div>
    }

    @if (Model.EditPolicy.HeadLastName)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.HeadLastName)">
            <label class="govuk-label" for="HeadLastName">
                @(Model.EditPolicy.HeadteacherLabel) last name
            </label>
            @Html.ValidationMessageFor(x => x.HeadLastName, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.HeadLastName, new {maxlength = 120, @class = "govuk-input", placeholder = "Last name"})
            @Html.HiddenFor(x => x.OldHeadLastName)
        </div>
    }

    @if (Model.EditPolicy.HeadAppointmentDate)
    {
        @Html.EditorFor(x => x.HeadAppointmentDate, new {title = "Headteacher date of appointment", fieldsetClassName = "edit-date-fieldset"})
    }

    @if (Model.EditPolicy.HeadEmailAddress)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.HeadEmailAddress)">
            <label class="govuk-label" for="HeadEmailAddress">
                @(Model.EditPolicy.HeadteacherLabel) email address
                <a href="#help-text-headteacher-email-address" class="tooltip-link js-tooltip">
                    <span class="govuk-visually-hidden">Help with headteacher/principal email address field</span>
                </a>
            </label>
            @Html.ValidationMessageFor(x => x.HeadEmailAddress, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.HeadEmailAddress, new {maxlength = 120, @class = "govuk-input", placeholder = "email address", aria_describedby = "help-text-headteacher-email-address"})
        </div>
    }


    @if (Model.EditPolicy.AgeRange)
    {
        <div class="govuk-form-group range-group @Html.ValidationCssClassFor(x => x.StatutoryHighAge) @Html.ValidationCssClassFor(x => x.StatutoryLowAge)">
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-!-font-weight-bold govuk-!-font-size-16">
                    Age range
                </legend>
                @Html.ValidationMessageFor(x => x.StatutoryLowAge, null, new {@class = "govuk-error-message"})
                @Html.ValidationMessageFor(x => x.StatutoryHighAge, null, new {@class = "govuk-error-message"})

                <span class="inline-form-control">
                    <label for="StatutoryLowAge" class="govuk-label">
                        Low
                    </label>
                    @Html.TextBoxFor(x => x.StatutoryLowAge, new {maxlength = 2, @class = "govuk-input govuk-input--width-2 age-field", placeholder = "From"})

                </span>
                <span class="inline-form-control">
                    <label for="StatutoryHighAge" class="govuk-label">High</label>
                    @Html.TextBoxFor(x => x.StatutoryHighAge, new {maxlength = 2, @class = "govuk-input govuk-input--width-2 age-field", placeholder = "To"})
                </span>
            </fieldset>
        </div>
    }


    @if (Model.EditPolicy.TypeId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.TypeId)">
            <label class="govuk-label" for="TypeId">Establishment type</label>
            @Html.ValidationMessageFor(x => x.TypeId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.TypeId, Model.EstablishmentTypes, "", new {@class = "govuk-select"})
        </div>
    }
    else
    {
        @Html.HiddenFor(x => x.TypeId)
    }

    @if (Model.EditPolicy.EducationPhaseId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.EducationPhaseId)">
            <label for="EducationPhaseId" class="govuk-label">Phase of education</label>
            @Html.ValidationMessageFor(x => x.EducationPhaseId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.EducationPhaseId, Model.EducationPhases, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.FurtherEducationTypeId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.FurtherEducationTypeId)">
            <label class="govuk-label" for="FurtherEducationTypeId">Further education type</label>
            @Html.ValidationMessageFor(x => x.FurtherEducationTypeId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.FurtherEducationTypeId, Model.FurtherEducationTypes, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.GenderId)
    {
        <div class="govuk-form-group">
            <label class="govuk-label" for="GenderId">Gender of entry</label>
            @Html.DropDownListFor(x => x.GenderId, Model.Genders, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.LocalAuthorityId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.LocalAuthorityId)">
            <label for="LocalAuthorityId" class="govuk-label">Local authority</label>
            @Html.ValidationMessageFor(x => x.LocalAuthorityId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.LocalAuthorityId, Model.LocalAuthorities, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.EstablishmentNumber)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.EstablishmentNumber)">
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-!-font-weight-bold govuk-!-font-size-16">DfE number</legend>
                <p class="govuk-hint govuk-body-s">LA code and Establishment number</p>
                @Html.ValidationMessageFor(x => x.EstablishmentNumber, null, new {@class = "govuk-error-message"})
                <label class="govuk-visually-hidden" for="lacode"> LA code</label>
                <input type="text" id="lacode" class="govuk-input govuk-input--width-5" size="5" disabled="disabled" value="@Model.LocalAuthorityId"/>
                <label class="govuk-visually-hidden" for="EstablishmentNumber">Establishment number</label>
                @Html.TextBoxFor(x => x.EstablishmentNumber, new {@class = "govuk-input govuk-input--width-10"})
            </fieldset>
        </div>
    }

    @if (Model.EditPolicy.UKPRN)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.UKPRN)">
            <label class="govuk-label" for="UKPRN">UK provider reference number (UKPRN)</label>
            @Html.ValidationMessageFor(x => x.UKPRN, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.UKPRN, new {@class = "govuk-input", type = "text"})
        </div>
    }

    @if (Model.EditPolicy.StatusId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.StatusId)">
            <label class="govuk-label" for="StatusId">Establishment status</label>
            @Html.ValidationMessageFor(x => x.StatusId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.StatusId, Model.Statuses, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.AdmissionsPolicyId)
    {
        <div class="govuk-form-group">
            <label for="AdmissionsPolicyId" class="govuk-label">Admissions policy</label>
            @Html.DropDownListFor(x => x.AdmissionsPolicyId, Model.AdmissionsPolicies, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.Contact_WebsiteAddress)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.Contact_WebsiteAddress)">
            <label for="Contact_WebsiteAddress" class="govuk-label">Website</label>
            @Html.ValidationMessageFor(x => x.Contact_WebsiteAddress, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.Contact_WebsiteAddress, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.Contact_TelephoneNumber)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.Contact_TelephoneNumber)">
            <label for="Contact_TelephoneNumber" class="govuk-label">Telephone</label>
            @Html.ValidationMessageFor(x => x.Contact_TelephoneNumber, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.Contact_TelephoneNumber, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.OfstedRatingDetails)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.OfstedRatingId)">
            @Html.LabelFor(x => x.OfstedRatingId, "Ofsted rating", new {@class = "govuk-label"})
            @Html.DropDownListFor(x => x.OfstedRatingId, Model.OfstedRatings, "", new {@class = "govuk-select"})
        </div>

        @Html.EditorFor(x => x.OfstedInspectionDate, new {title = "Ofsted last inspection"})

        <div class="govuk-form-group">
            <label for="ofsted-report" class="govuk-label">Ofsted report link</label>
            <input type="text" class="govuk-input" id="ofsted-report" disabled="disabled" value="http://reports.ofsted.gov.uk/inspection-reports/find-inspection-report/provider/ELS/@Model.Urn"/>
        </div>
    }

    @if (Model.EditPolicy.InspectorateId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.InspectorateId)">
            <label class="govuk-label" for="InspectorateId">Inspectorate</label>
            @Html.ValidationMessageFor(x => x.InspectorateId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.InspectorateId, Model.Inspectorates, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.ProprietorName)
    {
        <div class="govuk-form-group">
            <label for="proprietor" class="govuk-label">Proprietor's name</label>
            @Html.TextBoxFor(x => x.ProprietorName, new {maxlength = 120, id = "proprietor", @class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.ReligiousCharacterId)
    {
        <div class="govuk-form-group">
            <label class="govuk-label" for="religious-character">Religious character</label>
            @Html.DropDownListFor(x => x.ReligiousCharacterId, Model.ReligiousCharacters, "", new {@class = "govuk-select", id = "religious-character"})
        </div>
    }

    @if (Model.EditPolicy.DioceseId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.DioceseId)">
            <label class="govuk-label" for="diocese">Diocese</label>
            @Html.DropDownListFor(x => x.DioceseId, Model.Dioceses, "", new {id = "diocese", @class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.ReligiousEthosId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.ReligiousEthosId)">
            <label class="govuk-label" for="ReligiousEthosId">Religious ethos</label>
            @Html.ValidationMessageFor(x => x.ReligiousEthosId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.ReligiousEthosId, Model.ReligiousEthoses, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.ProvisionBoardingId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.ProvisionBoardingId)">
            <label class="govuk-label" for="boarders">Boarders</label>
            @Html.DropDownListFor(x => x.ProvisionBoardingId, Model.BoardingProvisions, "", new {@class = "govuk-select", id = "boarders"})
        </div>
    }

    @if (Model.EditPolicy.ProvisionNurseryId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.ProvisionNurseryId)">
            <label class="govuk-label" for="nursery">Nursery provision</label>
            @Html.DropDownListFor(x => x.ProvisionNurseryId, Model.NurseryProvisions, "", new {@class = "govuk-select", id = "nursery"})
        </div>
    }

    @if (Model.EditPolicy.ProvisionOfficialSixthFormId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.ProvisionOfficialSixthFormId)">
            <label class="govuk-label" for="sixthform">Official sixth form</label>
            @Html.DropDownListFor(x => x.ProvisionOfficialSixthFormId, Model.OfficialSixthFormProvisions, "", new {@class = "govuk-select", id = "sixthform"})
        </div>
    }

    @if (Model.EditPolicy.Capacity)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.Capacity)">
            <label class="govuk-label" for="Capacity">School capacity</label>
            @Html.ValidationMessageFor(x => x.Capacity, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.Capacity, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.NumberOfPupilsOnRoll)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.NumberOfPupilsOnRoll)">
            <label class="govuk-label" for="NumberOfPupilsOnRoll">Number of pupils</label>
            @Html.ValidationMessageFor(x => x.NumberOfPupilsOnRoll, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.NumberOfPupilsOnRoll, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.Section41ApprovedId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.Section41ApprovedId)">
            <label class="govuk-label" for="Section41ApprovedId">Section 41 approved</label>
            @Html.ValidationMessageFor(x => x.Section41ApprovedId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.Section41ApprovedId, Model.Section41ApprovedItems, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.OpenDate)
    {
        @Html.EditorFor(x => x.OpenDate, new {title = "Open date"})
    }

    @if (Model.EditPolicy.ReasonEstablishmentOpenedId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.ReasonEstablishmentOpenedId)">
            <label class="govuk-label" for="ReasonEstablishmentOpenedId">Reason establishment opened</label>
            @Html.ValidationMessageFor(x => x.ReasonEstablishmentOpenedId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.ReasonEstablishmentOpenedId, Model.ReasonsEstablishmentOpened, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.CloseDate)
    {
        @Html.EditorFor(x => x.CloseDate, new {title = "Close date"})
    }

    @if (Model.EditPolicy.ReasonEstablishmentClosedId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.ReasonEstablishmentClosedId)">
            <label class="govuk-label" for="ReasonEstablishmentClosedId">Reason establishment closed</label>
            @Html.ValidationMessageFor(x => x.ReasonEstablishmentClosedId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.ReasonEstablishmentClosedId, Model.ReasonsEstablishmentClosed, "", new {@class = "govuk-select"})
        </div>
    }


    @if (Model.EditPolicy.CCOperationalHoursId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.CCOperationalHoursId)">
            @Html.LabelFor(x => x.CCOperationalHoursId, "Operational hours", new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.CCOperationalHoursId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.CCOperationalHoursId, Model.CCOperationalHours, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.CCUnder5YearsOfAgeCount)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.CCUnder5YearsOfAgeCount)">
            @Html.LabelFor(x => x.CCUnder5YearsOfAgeCount, "Number of under 5s", new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.CCUnder5YearsOfAgeCount, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.CCUnder5YearsOfAgeCount, new {maxlength = 120, @class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.CCGovernanceId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.CCGovernanceId)">
            @Html.LabelFor(x => x.CCGovernanceId, "Governance", new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.CCGovernanceId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.CCGovernanceId, Model.CCGovernanceList, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.CCGovernanceDetail)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.CCGovernanceDetail)">
            @Html.LabelFor(x => x.CCGovernanceDetail, "Governance detail", new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.CCGovernanceDetail, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.CCGovernanceDetail, new {maxlength = 240, @class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.CCDeliveryModelId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.CCDeliveryModelId)">
            @Html.LabelFor(x => x.CCDeliveryModelId, "Delivery model", new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.CCDeliveryModelId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.CCDeliveryModelId, Model.CCDeliveryModels, "", new {@class = "form-control"})
        </div>
    }

    @if (Model.EditPolicy.CCGroupLeadId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.CCGroupLeadId)">
            @Html.LabelFor(x => x.CCGroupLeadId, "Group lead centre", new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.CCGroupLeadId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.CCGroupLeadId, Model.CCGroupLead, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.CCPhaseTypeId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.CCPhaseTypeId)">
            @Html.LabelFor(x => x.CCPhaseTypeId, "Phase", new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.CCPhaseTypeId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.CCPhaseTypeId, Model.CCPhaseTypes, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.CCDisadvantagedAreaId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.CCDisadvantagedAreaId)">
            @Html.LabelFor(x => x.CCDisadvantagedAreaId, "Disadvantaged area", new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.CCDisadvantagedAreaId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.CCDisadvantagedAreaId, Model.CCDisadvantagedAreas, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.CCDirectProvisionOfEarlyYearsId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.CCDirectProvisionOfEarlyYearsId)">
            @Html.LabelFor(x => x.CCDirectProvisionOfEarlyYearsId, "Direct provision of early years", new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.CCDirectProvisionOfEarlyYearsId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.CCDirectProvisionOfEarlyYearsId, Model.CCDirectProvisionOfEarlyYears, "", new {@class = "govuk-select"})
        </div>
    }


    @if (Model.EditPolicy.ProvisionSpecialClassesId)
    {
        <div class="govuk-form-group">
            <label class="govuk-label" for="special-classes">
                Special classes
            </label>
            @Html.DropDownListFor(x => x.ProvisionSpecialClassesId, Model.SpecialClassesProvisions, "", new {@class = "govuk-select", id = "special-classes"})
        </div>
    }

    @if (Model.EditPolicy.FreeSchoolMealsNumber)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.FreeSchoolMealsNumber)">
            @Html.LabelFor(x => x.FreeSchoolMealsNumber, new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.FreeSchoolMealsNumber, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.FreeSchoolMealsNumber, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.FreeSchoolMealsPercentage)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.FreeSchoolMealsPercentage)">
            @Html.LabelFor(x => x.FreeSchoolMealsPercentage, new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.FreeSchoolMealsPercentage, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.FreeSchoolMealsPercentage, new {@class = "govuk-input"})
        </div>
    }


    @if (Model.EditPolicy.SENStat)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.SENStat)">
            @Html.LabelFor(x => x.SENStat, new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.SENStat, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.SENStat, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.SENNoStat)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.SENNoStat)">
            @Html.LabelFor(x => x.SENNoStat, new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.SENNoStat, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.SENNoStat, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.Contact_EmailAddress)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.Contact_EmailAddress)">
            <label class="govuk-label" for="@nameof(Model.Contact_EmailAddress)">
                Email address
                <a href="#help-text-email-address" class="tooltip-link js-tooltip">
                    <span class="govuk-visually-hidden">Help with email address field</span>
                </a>
            </label>
            @Html.ValidationMessageFor(x => x.Contact_EmailAddress, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.Contact_EmailAddress, new {@class = "govuk-input", aria_describedby = "help-text-email-address"})
        </div>
    }

    @if (Model.EditPolicy.ContactAlt_EmailAddress)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.ContactAlt_EmailAddress)">
            <label class="govuk-label" for="@nameof(Model.ContactAlt_EmailAddress)">
                Alternative email address
                <a href="#help-text-email-address" class="tooltip-link js-tooltip">
                    <span class="govuk-visually-hidden">Help with alternative email address field</span>
                </a>
            </label>
            @Html.ValidationMessageFor(x => x.ContactAlt_EmailAddress, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.ContactAlt_EmailAddress, new {@class = "govuk-input", aria_describedby = "help-text-email-address"})
        </div>
    }


    @if (Model.EditPolicy.SENIds)
    {
        <div class="govuk-form-group sen-provision">
            <fieldset class="govuk-fieldset">
                <legend class="govuk-fieldset__legend govuk-!-font-weight-bold">Type of SEN provision</legend>
                <div class="govuk-checkboxes">
                    @foreach (var item in Model.SENProvisions)
                    {
                        <div class="govuk-checkboxes__item">
                            <input id="@nameof(Model.SENProvisions)_@item.Id" type="checkbox" name="@nameof(Model.SENIds)" class="govuk-checkboxes__input"
                                   value="@item.Id" @Html.Conditional(Model.SENIds != null && Model.SENIds.Contains(item.Id), "checked")/>
                            <label for="@nameof(Model.SENProvisions)_@item.Id" class="govuk-checkboxes__label">@item.Name</label>
                        </div>
                    }
                </div>
            </fieldset>
        </div>
                        @* Flags the SEN list has been included in the request - DO NOT REMOVE. *@
        <input type="hidden" name="SENList" value="1"/>
    }

    @if (Model.EditPolicy.TeenageMothersProvisionId)
    {
        <div class="govuk-form-group">
            @Html.LabelFor(x => x.TeenageMothersProvisionId, new {@class = "govuk-label"})
            @Html.DropDownListFor(x => x.TeenageMothersProvisionId, Model.TeenageMothersProvisions, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.TeenageMothersCapacity)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.TeenageMothersCapacity)">
            @Html.LabelFor(x => x.TeenageMothersCapacity, new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.TeenageMothersCapacity, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.TeenageMothersCapacity, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.ChildcareFacilitiesId)
    {
        <div class="govuk-form-group">
            @Html.LabelFor(x => x.ChildcareFacilitiesId, new {@class = "govuk-label"})
            @Html.DropDownListFor(x => x.ChildcareFacilitiesId, Model.ChildcareFacilitiesProvisions, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.PRUSENId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.PRUSENId)">
            @Html.LabelFor(x => x.PRUSENId, new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.PRUSENId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.PRUSENId, Model.PRUSENOptions, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.PRUEBDId)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.PRUEBDId)">
            @Html.LabelFor(x => x.PRUEBDId, new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.PRUEBDId, null, new {@class = "govuk-error-message"})
            @Html.DropDownListFor(x => x.PRUEBDId, Model.PRUEBDOptions, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.PlacesPRU)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.PlacesPRU)">
            @Html.LabelFor(x => x.PlacesPRU)
            @Html.ValidationMessageFor(x => x.PlacesPRU, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.PlacesPRU, new {@class = "form-control"})
        </div>
    }

    @if (Model.EditPolicy.PruFulltimeProvisionId)
    {
        <div class="govuk-form-group">
            @Html.LabelFor(x => x.PruFulltimeProvisionId, new {@class = "govuk-label"})
            @Html.DropDownListFor(x => x.PruFulltimeProvisionId, Model.PruFulltimeProvisionOptions, "", new {@class = "govuk-select"})
        </div>
    }

    @if (Model.EditPolicy.PruEducatedByOthersId)
    {
        <div class="govuk-form-group">
            @Html.LabelFor(x => x.PruEducatedByOthersId, new {@class = "govuk-label"})
            @Html.DropDownListFor(x => x.PruEducatedByOthersId, Model.PruEducatedByOthersOptions, "", new {@class = "govuk-select"})
        </div>
    }


    @if (Model.EditPolicy.TypeOfResourcedProvisionId)
    {
        <div class="govuk-form-group">
            <label class="govuk-label" for="resourced-provision-type">
                Type of resourced provision
            </label>

            @Html.DropDownListFor(x => x.TypeOfResourcedProvisionId, Model.TypeOfResourcedProvisions, "", new {@class = "govuk-select", id = "resourced-provision-type"})
        </div>
    }

    @if (Model.EditPolicy.ResourcedProvisionOnRoll)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.ResourcedProvisionOnRoll)">
            <label class="govuk-label" for="ResourcedProvisionOnRoll">Resourced provision number on roll</label>
            @Html.ValidationMessageFor(x => x.ResourcedProvisionOnRoll, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.ResourcedProvisionOnRoll, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.ResourcedProvisionCapacity)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.ResourcedProvisionCapacity)">
            @Html.LabelFor(x => x.ResourcedProvisionCapacity, "Resourced provision capacity", new {@class = "govuk-label"})
            @Html.ValidationMessageFor(x => x.ResourcedProvisionCapacity, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.ResourcedProvisionCapacity, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.SenUnitOnRoll)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.SenUnitOnRoll)">
            <label class="govuk-label" for="SenUnitOnRoll">SEN unit number on roll</label>
            @Html.ValidationMessageFor(x => x.SenUnitOnRoll, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.SenUnitOnRoll, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.SenUnitCapacity)
    {
        <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.SenUnitCapacity)">
            <label class="govuk-label" for="SenUnitCapacity">SEN unit capacity</label>
            @Html.ValidationMessageFor(x => x.SenUnitCapacity, null, new {@class = "govuk-error-message"})
            @Html.TextBoxFor(x => x.SenUnitCapacity, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.BSOInspectorateId)
    {
        <div class="govuk-form-group">
            <label class="govuk-label" for="bso-inspectorate">BSO: Inspectorate name</label>
            @Html.DropDownListFor(x => x.BSOInspectorateId, Model.BSOInspectorates, "", new {@class = "govuk-select", id = "bso-inspectorate"})
        </div>
    }

    @if (Model.EditPolicy.BSOInspectorateReportUrl)
    {
        <div class="govuk-form-group">
            @Html.LabelFor(x => x.BSOInspectorateReportUrl, "Inspectorate report", new {@class = "govuk-label"})
            @Html.TextBoxFor(x => x.BSOInspectorateReportUrl, new {@class = "govuk-input"})
        </div>
    }

    @if (Model.EditPolicy.BSODateOfLastInspectionVisit)
    {
        @Html.EditorFor(x => x.BSODateOfLastInspectionVisit, new {title = "BSO: Date of last inspection"})
    }

    @if (Model.EditPolicy.BSODateOfNextInspectionVisit)
    {
        @Html.EditorFor(x => x.BSODateOfNextInspectionVisit, new {title = "BSO: Next inspection visit"})
    }
    <div class="button-row">
        <button id="save-submit-bottom" type="submit" class="govuk-button" name="@nameof(Model.ActionSpecifier)" value="@ViewModel.GetActionSpecifier(ViewModel.ASSave, "details")">Save details</button>
        @Html.ActionLink("Cancel", "Details", "Establishment", new {id = Model.Urn}, new {@class = "govuk-button govuk-button--secondary cancel", data_module = "govuk-button"})
    </div>
    </div>
    </div>
    </div>

    @if (Model.ChangesSummary != null)
    {
        Html.RenderPartial("Partials/_ConfirmChanges");

        <div class="button-row">
            <button class="govuk-button--secondary govuk-button" name="@nameof(Model.ActionSpecifier)" type="submit" value="@ViewModel.ASCancel">&laquo; Back</button>
            <button type="submit" name="@nameof(Model.ActionSpecifier)" value="@ViewModel.ASConfirm" class="govuk-button js-confirm">Confirm</button>

            @Html.ActionLink("Cancel", "Details", "Establishment", new {id = Model.Urn}, new {@class = "govuk-button govuk-button--secondary", id = "cancel-edit"})
        </div>

        @section ViewScripts {
            <script nonce="@Html.ScriptNonce()">var isConfimingChanges = @((Model.ChangesSummary != null).ToString().ToLower());</script>
            <script src="/public/assets/scripts/build/edit-details.js"></script>
        }
    }
    else
    {
        @section ViewScripts {
        <script nonce="@Html.ScriptNonce()">
            var isConfimingChanges = @((Model.ChangesSummary != null).ToString().ToLower());
            var isDirty = @(Model.IsDirty.ToString().ToLower());
            var type2PhaseMap = @Html.Json(Model.Type2PhaseMap);
            var phases = @Html.Json(Model.EducationPhases);
        </script>
        <script src="/public/assets/scripts/build/edit-details.js"></script>
        }
    }

    </div>
}

@if (Model.ShowDuplicateRecordError)
{
@section validation {
    <div class="validation-summary-errors error-summary">
        <span>Duplicate record found</span>
        <ul>
            <li>An establishment is already registered with this name, local authority and postcode. To complete the record:</li>
            <li>
                <a href="#Name">Please enter a different establishment name</a>
                or
                <a href="#LocalAuthorityId">Please enter a different local authority </a>
                or
                <a href="#Address_PostCode">Please enter a different postcode</a>
            </li>
        </ul>
    </div>
}
}


<div class="column-full helptext-container">
    <div id="help-text-email-address">
        <h3 class="govuk-heading-s">Email address</h3>
        <p>Please provide your official school email address. This is usually the email address that is displayed on your school website. You should not provide a personal email address in this field as this information may be released in certain circumstances.</p>
    </div>

    <div id="help-text-headteacher-email-address">
        <h3 class="govuk-heading-s">@(Model.EditPolicy.HeadteacherLabel) email address</h3>
        <p>The email address added to this field will be treated as personal and will not be visible to the public or included in responses to Freedom of Information Requests. The address will be used for official Departmental use where direct communication with the headteacher/ principal is required.</p>
    </div>
</div>
