@model PredefinedLASetViewModel
@{
    ViewBag.Title = string.Concat(!ViewData.ModelState.IsValid ? "Error: " : string.Empty, Model.PageTitle);
    ViewBag.bodyClasses = "independent-sigdates-edit";
}


@section BreadCrumbs
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-breadcrumbs">
                <ol class="govuk-breadcrumbs__list">
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
                    <li class="govuk-breadcrumbs__list-item">
                        @Html.ActionLink("Tools", "Index", "Tools", new {area = ""}, new {@class = "govuk-breadcrumbs__link"})
                    </li>
                    <li class="govuk-breadcrumbs__list-item">
                        @Html.ActionLink("View independent schools' significant dates","IndependentSchoolsSearch","Tools", new {area = ""},new {@class = "govuk-breadcrumbs__link"})
                    </li>
                </ol>
            </div>
        </div>
    </div>
}

@Html.Partial("_ValidationSummary", ViewData.ModelState)

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full results-heading">
        <h1 class="govuk-heading-xl">
            @Model.PageTitle
        </h1>
    </div>
</div>
<div class="govuk-grid-row">


        @using (Html.BeginRouteForm((Model.IsNewEntity ? "CreatePredefinedLASetPost" : "EditPredefinedLASetPost"), new { Model.Id }, FormMethod.Post, new { @class = "has-typeahead" }))
        {
            <div class="govuk-grid-column-two-thirds">
                @Html.HiddenFor(x => x.Id)
                @Html.HiddenFor(x=>x.Referrer)
                @Html.HiddenFor(x=>x.Mode)

                @if (Model.WarningNameClash)
                {
                <div class="modal-overlay" id="warning-modal-overlay-0"></div>
                <div class="modal-content" id="warning-modal-content-0" role="dialog" aria-labelledby="modal-label" aria-describedby="modal-desc">
                    <a href="#" id="warning-exit-overlay-0" class="modal-exit js-allow-exit">Close</a>
                    <div class="modal-inner">
                        <h3 class="govuk-heading-l" tabindex="0" id="modal-label">A set already exists with this name.</h3>
                        <p tabindex="0" id="model-desc">Saving with this name will overwrite the existing set.</p>
                    </div>
                    <div class="button-row">
                        <a href="#" class="govuk-button" id="overlay-proceed-0">Ok</a>
                        <a href="#" class="govuk-button govuk-button--secondary js-allow-exit" id="overlay-cancel-0">Cancel</a>
                    </div>
                </div>

                <!-- Set to true ONLY when 'Ok' is clicked.  -->
                <input type="hidden" id="@nameof(Model.SuppressWarning)" name="@nameof(Model.SuppressWarning)" value="false" />
                }

                <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.Title)">
                    @Html.LabelFor(x => x.Title, "Name", new { @class = "govuk-label" })
                    @Html.ValidationMessageFor(x => x.Title, null, new { @class = "govuk-error-message"})
                    @Html.TextBoxFor(x => x.Title, new { @class = "govuk-input" })
                </div>

                <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.SelectedLocalAuthorityIds)">
                    @Html.LabelFor(x => x.SelectedLocalAuthorityIds, "Local authorities", new { @id=nameof(Model.SelectedLocalAuthorityIds), @class = "govuk-label", @for="LocalAuthorityToAdd" })
                    @Html.ValidationMessageFor(x => x.SelectedLocalAuthorityIds, null, new { @class = "govuk-error-message"})


                    <div id="la-id-target" class="la-id-target form-control">

                        @foreach (var id in Model.SelectedLocalAuthorityIds)
                        {
                            var la = Model.LocalAuthorities.First(x => x.Id == id);
                            <input value="@la.Name" type="hidden" class="form-control user-selected-la" />
                            <button type="submit" class="remove-suggest-la" name="LocalAuthorityToRemove" data-remove="@id" value="@id">@la.Name</button>
                            <input type="hidden" name="d" value="@id" id="@la.Name.ToLower().Replace(" ", "-")">
                        }
                        <div class="floating-text-field-wrap">
                            <input class="govuk-input floating-text-field" id="LocalAuthorityToAdd" autocomplete="off" />
                        </div>
                    </div>
                </div>
                <div class="button-row govuk-!-padding-top-4">
                    <button id="edit-submit" class="govuk-button" type="submit">Save set</button>
                    @Html.ActionLink("Cancel", "IndependentSchoolsSearch", "Tools", new { @class = "govuk-button govuk-button--secondary", data_module = "govuk-button" })
                </div>
            </div>
        }



</div>

@section ViewScripts{
    <script nonce="@Html.ScriptNonce()">
        window.localAuthorities = @Html.Json(Model.LocalAuthorities);

        (function () {
            var canProceed = false;
            var $modalCancels = $("[id|='warning-exit-overlay'], [id|='overlay-cancel']");
            var $modalProceeds = $("[id|='overlay-proceed']");

            $modalCancels.on('click',
                function (e) {
                    e.preventDefault();
                    var idInt = $(this).attr('id').split('-').slice(-1);
                    $('#warning-modal-overlay-' + idInt).addClass('hidden');
                    $('#warning-modal-content-' + idInt).addClass('hidden');
                });

            $modalProceeds.on('click',
                function (e) {
                    canProceed = true;
                    $('#SuppressWarning').val(true);
                    $('#edit-submit').click();
                });
        }());


        if ($('#warning-modal-content-0').length > 0) {
            $('.modal-exit').focus();
        }
    </script>
    <script src="@Html.Raw(Html.GetWebpackScriptUrl("independent-schools-sig-search.*.js"))"></script>
}
