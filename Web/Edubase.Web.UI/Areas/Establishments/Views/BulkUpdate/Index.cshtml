@using Microsoft.Ajax.Utilities
@model BulkUpdateViewModel

@{
    ViewBag.Title = string.Concat(!ViewData.ModelState.IsValid ? "Error: " : string.Empty, "Bulk update establishments");
    ViewBag.SiteSection = "tools";
    ViewBag.BodyClasses = "create-edit bulk-change";
}

@section BreadCrumbs
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-breadcrumbs">
                <ol class="govuk-breadcrumbs__list">
                    <li class="govuk-breadcrumbs__list-item">
                        @Html.ActionLink("Home", "Index", "Home", new {area = ""}, new {@class = "govuk-breadcrumbs__link"})
                    </li>
                    <li class="govuk-breadcrumbs__list-item">
                        @Html.ActionLink("Tools", "Index", "Tools", new {area = ""}, new {@class = "govuk-breadcrumbs__link"})
                    </li>
                </ol>
            </div>
        </div>
    </div>
}

@Html.Partial("_ValidationSummary", ViewData.ModelState)

@if (Model.Result?.RowErrors > 0)
{
    <div class="govuk-error-summary" aria-labelledby="error-summary-title" data-module="govuk-error-summary" tabindex="-1">
        <h2 id="error-summary-title" class="govuk-error-summary__title">Incorrect or missing details</h2>
        <div class="govuk-error-summary__body">
            <ul class=" govuk-list govuk-error-summary__list">
                @if (Model.Result.Errors.Any(x => x.Code == "error.mismatchType.EduBaseBulkUpload-MultipleColumnsfile.type.bulkUpload"))
                {
                    <li>
                        <a href="#BulkFile">Multiple column files must be XLSX and bulk upload files can be XLSX or tab delimited text files. For more information, see the Establishment bulk update guidance document below within 'Help with preparing files'</a>
                    </li>
                }
                else if (Model.Result.Errors.Any())
                {
                    <li>
                        <a href="#BulkFile">@Model.Result.Errors.First().Message</a>
                    </li>
                }
                else
                {
                    if (Model.Result.IsFailure())
                    {
                        <li>
                            <a href="#error-log">Errors were found with your data. Correct your data before resubmitting.</a>
                        </li>
                    }

                    if (Model.Result.CompletedWithErrors())
                    {
                        <li>
                            <a href="#error-log">@Model.Result.RowErrors rows encountered errors during import. Correct your data before resubmitting.</a>
                        </li>
                    }
                }
            </ul>
        </div>
    </div>
}



<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        @if (Model.Result != null && Model.Result.IsCompleted() && !Model.Result.IsFailure() && !Model.Result.CompletedWithErrors())
        {
            <div class="pending-updates-message js-dismiss-message js-trigger-aria-live" role="alert">
                <div class="tick"></div>
                <p class="message-text" aria-live="polite">Your bulk update was successful.</p>
                <a class="cross" href="#"><span class="govuk-visually-hidden">Dismiss notification</span></a>
            </div>
        }
    <h1 class="govuk-heading-xl">Bulk update establishments</h1>
    </div>
</div>
<div class="govuk-grid-row">
    <div class="govuk-grid-column-two-thirds">
    <p class="govuk-body">
        Update establishment records by uploading a CSV or XLSX file. Multiple column updates must be in XLSX format.
    </p>
</div>
    <div class="govuk-grid-column-full">

        <details class="govuk-details" data-module="govuk-details">
           <summary class="govuk-details__summary">
             <span class="govuk-details__summary-text">
                Help with preparing files
            </span>
             </summary>
              <div class="govuk-details__text">
                  <p>
                      For a step by step guide to prepare documents for bulk update please reference the
                      @Html.ActionLink("Establishment bulk update guidance", "EstablishmentBulkUpdate", "Guidance", new {area = ""}, null).
                  </p>
              </div>
        </details>

        @if (Model.Result != null)
        {
            if (Model.Result.IsFailure() || Model.Result.CompletedWithErrors())
            {
                var uri = new Uri(Model.Result.ErrorLogFile.Url);
                var path = uri.GetLeftPart(UriPartial.Path);

                using (Html.BeginRouteForm("DownloadExtract", FormMethod.Post))
                {
                    @Html.Hidden("id", @Model.Result.Id)
                    @Html.Hidden("path", path)

                    <div class="govuk-form-group govuk-form-group--error" id="error-log">

                        @if (Model.Result.CompletedWithErrors())
                        {
                            <p class="govuk-error-message">@Model.Result.RowErrors rows encountered errors during import. Please download the error log to correct your data before resubmitting</p>
                        }
                        else
                        {
                            <p class="govuk-error-message">Please download the error log to correct your data before resubmitting</p>
                        }

                        <p>
                            <input type="submit" class="govuk-button" value="@Model.Result.ErrorLogFile.Name" /><br />
                        </p>
                    </div>
                }
            }
        }
    </div>

    @using (Html.BeginRouteForm("ProcessBulkUpdate", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="govuk-grid-column-one-half">
            <div class="govuk-form-group  @Html.ValidationCssClassFor(x => x.BulkFile)">
                <label for="BulkFile" class="govuk-label">Upload a file</label>
                <details class="govuk-details" data-module="govuk-details">
                  <summary class="govuk-details__summary">
                    <span class="govuk-details__summary-text">
                        Max file size and other limits
                    </span>
                    </summary>
                      <div class="govuk-details__text">
                          <p>Max file size is 1MB. There are also limits of:</p>
                            <ul class="govuk-list govuk-list--bullet inside flush--bottom">
                                <li>
                                    5,000 rows per file for back office users
                                </li>
                                <li>
                                    1,000 rows per file for EFADO, SFC and DDCE users
                                </li>
                                <li>
                                    200 rows per file for establishment and multi-academy trust users
                                </li>
                            </ul>
                    </div>
                </details>
                @Html.ValidationMessageFor(x => x.BulkFile, null, new { @class = "govuk-error-message" })
                @Html.TextBoxFor(x => x.BulkFile, new { type = "file", @class = "govuk-file-upload" })
            </div>

            <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.BulkUpdateType)">
                <label class="govuk-label" for="BulkUpdateType">
                    Select file type
                </label>
                @Html.ValidationMessageFor(x => x.BulkUpdateType, null, new { @class = "govuk-error-message" })
                @Html.EnumDropDownListFor(x => x.BulkUpdateType, "Select...", new { @class = "govuk-select" })
            </div>

            @Html.EditorFor(m => m.EffectiveDate, new { title = "Effective date (optional)", fieldsetClassName = "edit-date-fieldset", labelClass = "govuk-label" })

            @if (Model.CanOverrideCRProcess)
            {
                <div class="govuk-form-group ">
                    <div class="govuk-checkboxes">
                        <div class="govuk-checkboxes__item">
                            @Html.CheckBoxFor(x => x.OverrideCRProcess, new {@id = "override-cr", @class = "govuk-checkboxes__input"})
                            @Html.LabelFor(x => x.OverrideCRProcess, "Override change request", new {@for = "override-cr", @class = "govuk-checkboxes__label"})
                        </div>
                    </div>
                </div>
            }

        </div>
        <div class="govuk-grid-column-full">
            <div class="button-row govuk-!-padding-top-6">
                <button type="submit" class="govuk-button" value="Submit">Submit</button>
                @Html.ActionLink("Cancel", "Index", "Tools", new {area = ""}, new {@class = "govuk-button govuk-button--secondary cancel", data_module = "govuk-button" })
            </div>
        </div>

        }
    </div>


