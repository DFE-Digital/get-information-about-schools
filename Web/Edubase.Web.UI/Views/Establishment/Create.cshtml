@using ViewModel = Edubase.Web.UI.Models.CreateEditEstablishmentModel
@model ViewModel
@{
    ViewBag.bodyClasses = "create-edit-school school-details";
    ViewBag.hideLogo = true;
    ViewBag.Title = "Create/Edit establishment";
    var dc = new Edubase.Data.DbContext.ApplicationDbContext();
}

@section ViewScripts {   
   @if (Model.ScrollToLinksSection)
    {
        <script type="text/javascript">
            
            setTimeout(function () { window.location.href = '#addlinkedschool'; }, 300);
        </script>
        
    }
    <script type="text/javascript">
        var laestabRules = @Html.Json(Model.SimplifiedLAESTABRules);
        function processLAESTABTextBox() {
            var $input = $("#laestab");
            var p = $("#educationphaseid").val();
            var t = $("#typeid").val();
            if (!p) p = "";
            if (!t) t = "";
            var c = p + "-" + t;
            var rule = laestabRules[c];
            if (rule) {
                if (rule == "UserDefined") {
                    $input.removeProp("disabled");
                    $input.prop("placeholder", "Input an LAESTAB no.");

                } else if (rule == "SystemGenerated") {
                    $input.val("")
                        .attr("disabled", "disabled")
                        .prop("placeholder", "autogenerated");

                } else if (rule == "NonePermitted") {
                    $input.val("")
                        .attr("disabled", 'disabled')
                        .prop("placeholder", "n/a");
                }
            }

            $input.parent().removeClass("error");
        }

        $("#educationphaseid,#typeid").change(processLAESTABTextBox);
    </script>
}

@helper FormHint(string controlId, string hintText = "help with this field. <br>and more help - even more help could go here...")
{
    <a class="help-icon" tab-index="0">?</a>
    <div class="help-text" id="help-@controlId">
        <p>Here is some thext that would assist a user with filling in the associated field:</p>
        <p>
            Lorem ipsum dolor sit amet, reque mollis ponderum vis et, no reprimique efficiantur accommodare
            nec. Nec ad deleniti percipitur. Salutandi erroribus sea ex. At vidisse honestatis
        </p>
    </div>

}

<div class="grid-row">
    <div class="column-two-thirds">
        @Html.ActionLink("Search for schools or colleges", "Index", "Search", null, new { @class = "home-link" })

    </div>
</div>

@using (Html.BeginForm((Model.Urn == null ? "Create" : "Edit"), "Establishment", FormMethod.Post))
{
    @Html.AntiForgeryToken();
    @Html.HiddenFor(x => x.Urn)

    <div class="grid-row">
        <div class="column-full">
            <button type="submit" name="action" value="@ViewModel.eAction.Save" class="button header-submit">Submit</button>
            <h1 class="heading-xlarge">Create a new school or college</h1>
            @Html.ValidationSummary(null, new { @class = "error-summary" })
        </div>
    </div>

    <div class="grid-row">
        <div class="column-half">

            <div class="form-group create-edit-form-group @Html.ValidationCssClassFor(x => x.Name)">
                <label for="school-name" class="form-label">School / College name</label>
                @Html.EduTextBoxFor(x => x.Name, new { maxlength = 120, id = "school-name", @class = "form-control", aria_describedby = "help-school-name"})
            </div>

            <div class="form-group create-edit-form-group @Html.ValidationCssClassFor(x => x.LocalAuthorityId)">
                <label for="LocalAuthorityId" class="form-label">Local authority</label>
                @Html.EduLocalAuthorityDropDownFor(x => x.LocalAuthorityId)
            </div>

            <div class="form-group create-edit-form-group @Html.ValidationCssClassFor(x => x.EducationPhaseId)">
                <label for="EducationPhaseId" class="form-label">Phase of education</label>
                @Html.EduEducationPhasesDropDownFor(x => x.EducationPhaseId)
            </div>

            <div class="form-group create-edit-form-group @Html.ValidationCssClassFor(x => x.TypeId)">
                <label for="TypeId" class="form-label">School type</label>
                @Html.EduEstablishmentTypesDropDownFor(x => x.TypeId)
            </div>

            <div class="form-group create-edit-form-group">
                <label for="urn" class="form-label">URN</label>
                @Html.TextBoxFor(x => x.Urn, new { id = "urn", @class = "form-control", aria_describedby = "help-urn", placeholder = "auto-generated", @readonly = "readonly", disabled = "disabled" })
            </div>

            <div class="form-group create-edit-form-group @Html.ValidationCssClassFor(x => x.LAESTAB)">
                <label for="laestab" class="form-label">LAESTAB</label>
                @Html.EduTextBoxFor(x => x.LAESTAB,
                            new { id = "laestab", @class = "form-control", aria_describedby = "help-laestab", type = "number", maxlength = 7 },
                            "EstablishmentNumber")
            </div>

            <div class="form-group create-edit-form-group @Html.ValidationCssClassFor(x => x.StatusId)">
                <label for="status" class="form-label">Establishment status</label>
                @Html.EduStatusesPoliciesDropDownFor(x => x.StatusId)
            </div>

        </div>
    </div>
    <div class="grid-row">
        <div class="column-full">
            <h2 class="heading-medium create-edit-section-break" >Details</h2>            
        </div>
    </div>
    <div class="grid-row">
        <div class="column-half">
            <div class="form-group create-edit-form-group @Html.ValidationCssClassFor(x => x.ReasonEstablishmentOpenedId)">
                <label for="reason-establishment-opened" class="form-label">Reason establishment opened</label>
                @Html.ValidationMessageFor(x => x.ReasonEstablishmentOpenedId)
                @Html.DropDownListFor(x => x.ReasonEstablishmentOpenedId, dc.LookupReasonEstablishmentOpened.Select(x => new SelectListItem { Text = x.Name, Value = x.Id.ToString() }), "", new { id = "reason-establishment-opened", @class = "form-control" })
            </div>

            <div class="form-group create-edit-form-group drop-down-date @Html.ValidationCssClassFor(x => x.OpenDate)">
                <label for="open-date-day" class="form-label">Establishment open date</label>
                <span class="form-hint">For example, 20 03 2003</span>
                @Html.ValidationMessageFor(x => x.OpenDate)
                @Html.EduDropDownFor(x => x.OpenDate.Day,
                            Enumerable.Range(1, 31).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString() }),
                            new
                            {
                                id = "opendate-day",
                                @class = "form-control",
                                aria_describedby = "help-opendate-day"
                            }, label: "DD", fieldName: "OpenDate")

                @Html.EduDropDownFor(x => x.OpenDate.Month,
                            Enumerable.Range(1, 12).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString() }),
                            new
                            {
                                id = "opendate-month",
                                @class = "form-control",
                                aria_describedby = "help-opendate-month"
                            }, label: "MM", fieldName: "OpenDate")

                @Html.EduDropDownFor(x => x.OpenDate.Year,
                            Enumerable.Range(1900, 2050).Select(x => new SelectListItem { Text = x.ToString(), Value = x.ToString() }),
                            new
                            {
                                id = "opendate-year",
                                @class = "form-control",
                                aria_describedby = "help-opendate-year"
                            }, label: "YYYY", fieldName: "OpenDate")
            </div>

        </div>
    </div>

    <div class="grid-row">
        <div class="column-full">
            <button type="submit" name="action" value="@ViewModel.eAction.Save" class="button mobile-full-width">Submit</button>
        </div>
    </div>
}
