@model ConvertSATViewModel
@{
    ViewBag.Title = string.Concat(!ViewData.ModelState.IsValid ? "Error: " : string.Empty, "Convert single-academy trusts to multi-academy trusts");
    ViewBag.SiteSection = "tools";
}

@section BreadCrumbs
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="govuk-breadcrumbs">
                <ol class="govuk-breadcrumbs__list">
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Search", new {area = ""}, new { @class = "govuk-breadcrumbs__link"})</li>
                    <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Tools", "Index", "Tools", new {area = ""}, new { @class = "govuk-breadcrumbs__link" })</li>
                    @if (Model.Details != null)
                    {
                        <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Convert to multi-academy trust", "Convert", "Group", new {area = "Groups"},new { @class = "govuk-breadcrumbs__link"})</li>
                    }
                </ol>
            </div>
        </div>
    </div>
}


@Html.Partial("_ValidationSummary", ViewData.ModelState)

<h1 class="govuk-heading-xl">Convert to multi-academy trust</h1>

@if (Model.Details == null)
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <p>Convert single-academy trusts into multi-academy trusts using either the current company record or a new one from Companies House</p>
            <h2 class="govuk-heading-m">Current single-academy trust</h2>

        </div>
    </div>

    using (Html.BeginRouteForm("PostGroupConvertSAT2MAT", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.Text)">
                    @Html.LabelFor(x => x.Text, "Companies House number, Group UID or ID", new { @class = "govuk-label" })
                    @Html.ValidationMessageFor(x => x.Text, null, new { @class = "govuk-error-message"})
                    @Html.TextBoxFor(x => x.Text, new { @class = "govuk-input govuk-!-width-one-half" })
                </div>
            </div>
        </div>
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <div class="button-row">
                    <button type="submit" name="actionname" class="govuk-button" value="find">Continue</button>
                    @Html.ActionLink("Cancel", "Index", "Tools", new { area = "" }, new { @class = "govuk-button govuk-button--secondary cancel", data_module="govuk-button" })
                </div>
            </div>
        </div>
    }
}
else
{
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <p>Check this is the correct single-academy trust before converting. A new <abbr title="Unique Identifier">UID</abbr> will be created on conversion.</p>
        </div>
    </div>

    using (Html.BeginRouteForm("PostGroupConvertSAT2MAT", FormMethod.Post))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.Token)
        @Html.HiddenFor(x => x.CountryName)
        @Html.HiddenFor(x => x.CountyName)
        @Html.HiddenFor(x => x.Text)
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">

                <h2 class="govuk-heading-s">Existing trust details</h2>

                <dl class="gias-summary-list gias-summary-list-l">
                    <div class="gias-summary-list__row">
                        <dt class="gias-summary-list__key">Trust name:</dt>
                        <dd class="gias-summary-list__value">@Model.Details.Name</dd>
                    </div>
                    <div class="gias-summary-list__row">
                        <dt class="gias-summary-list__key">Companies House number:</dt>
                        @if (Model.Details.CompaniesHouseNumber != null)
                        {
                            <dd class="gias-summary-list__value">
                                <a href="@System.Configuration.ConfigurationManager.AppSettings["CompaniesHouseBaseUrl"]@Model.Details.CompaniesHouseNumber" target="_blank">
                                    @Model.Details.CompaniesHouseNumber <span class="govuk-visually-hidden">Opens in new window</span>
                                </a>
                            </dd>
                        }
                        else
                        {
                            <dd class="gias-summary-list__value">Not recorded</dd>
                        }
                    </div>
                    <div class="gias-summary-list__row">
                        <dt class="gias-summary-list__key">Address:</dt>
                        <dd class="gias-summary-list__value">@Model.GetAddress()</dd>
                    </div>
                    <div class="gias-summary-list__row">
                        <dt class="gias-summary-list__key">Group <abbr title="Unique Identifier">UID</abbr>:</dt>
                        <dd class="gias-summary-list__value">@Model.Details.GroupUId</dd>
                    </div>
                    <div class="gias-summary-list__row">
                        <dt class="gias-summary-list__key">Group ID:</dt>
                        <dd class="gias-summary-list__value">@(Model.Details.GroupId ?? "Not recorded")</dd>
                    </div>
                </dl>

            </div>
        </div>
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <div class="govuk-form-group govuk-!-padding-top-4">
                    @Html.GiasCheckboxFor(x => x.CopyGovernanceInfo, "Copy single-academy trust governance to multi-academy trust", " gias-wrapped-label-at-mobile ", new { @class = "govuk-checkboxes__input"})
                </div>

                <div class="button-row">
                    @Html.RouteLink(HttpUtility.HtmlDecode("&laquo; Go back"), "GroupConvertSAT2MAT", null, new {@class = "govuk-button govuk-button--secondary cancel"})
                    <button type="submit" name="actionname" class="govuk-button" value="confirm">Convert</button>
                    @Html.ActionLink("Cancel", "Index", "Tools", new {area = ""}, new {@class = "govuk-button govuk-button--secondary cancel", data_module="govuk-button"})
                </div>
            </div>
        </div>
    }
}
