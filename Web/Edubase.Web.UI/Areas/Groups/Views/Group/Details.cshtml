@using Edubase.Common
@using Edubase.Services.Enums
@model GroupDetailViewModel
@{
    ViewBag.Title = Model.Group.Name;
    ViewBag.PageClass = "mat-details";
}
<p>
    <a class="font-xsmall" href="/#groups">Back to search</a>
</p>

<h1 class="heading-large">@Model.Group.Name</h1>

<div class="grid-row horizontal-tabs-wrapper">
    <div class="column-full">

        <div class="tab-wrap">
            <ul class="horizontal-tabs">
                <li><a href="#details" class="horizontal-tab">Details</a></li>
                <li><a href="#list" class="horizontal-tab">@Model.EstablishmentsPluralName (@Model.Establishments.Count)</a></li>
                    
                @if (Model.Group.GroupTypeId == (int)eLookupGroupType.MultiacademyTrust)
                {
                    <li><a href="#governance" class="horizontal-tab">Governance</a></li>
                }

                @if (Model.IsUserLoggedOn)
                {
                    <li><a href="#change-history" class="horizontal-tab">Changes</a></li>
                }

            </ul>
        </div>
        
        <div class="tab-content-wrapper horizontal-tabs-content">
            <div id="details" class="tab-content">

                @if (Model.CanUserEdit)
                {
                    @Html.ActionLink("Edit details", "EditDetails", "Group", new { id = Model.Group.GroupUID, area = "Groups" }, new { @class = "button button-grey mobile-full-width" })
                }

                <div style="float:none; clear:both;"></div>

                <table class="borderless no-padding">
                    @if (Model.Group.GroupTypeId.OneOfThese(eLookupGroupType.MultiacademyTrust, eLookupGroupType.SingleacademyTrust))
                    {
                        <tr>
                            <th scope="row">Companies House Number</th>
                            <td>
                                @if (Model.Group.CompaniesHouseNumber.IsNullOrEmpty())
                                {
                                    <text>Not recorded</text>
                                }
                                else
                                {
                                    <a href="@Model.CompaniesHouseUrl">@Model.Group.CompaniesHouseNumber</a>
                                }
                            </td>
                        </tr>
                    }

                    <tr>
                        <th scope="row">Type</th>
                        <td>@Model.GroupTypeName</td>
                    </tr>

                    <tr>
                        <th scope="col">@Model.OpenDateLabel</th>
                        <td>@(Model.Group.OpenDate?.ToString("dd/MM/yyyy") ?? "Not recorded")</td>
                    </tr>

                    @if (Model.IsUserLoggedOn)
                    {
                        <tr>
                            <th scope="col">Closed date</th>
                            <td>@(Model.Group.ClosedDate?.ToString("dd/MM/yyyy") ?? "Not recorded")</td>
                        </tr>

                        <tr>
                            <th scope="col">Status</th>
                            <td>@(Model.GroupStatusName ?? "Not recorded")</td>
                        </tr>
                    }

                    @if (Model.Group.GroupTypeId.OneOfThese(eLookupGroupType.ChildrensCentresGroup, eLookupGroupType.SingleacademyTrust, eLookupGroupType.MultiacademyTrust))
                    {
                        <tr>
                            <th scope="col">Address</th>
                            <td>@(Model.Address ?? "Not recorded")</td>
                        </tr>
                    }

                    @if (Model.Group.GroupTypeId == (int)eLookupGroupType.ChildrensCentresGroup)
                    {
                        <tr>
                            <th scope="col">Group manager email</th>
                            <td>@(Model.Group.ManagerEmailAddress ?? "Not recorded")</td>
                        </tr>
                    }

                    @if (Model.Group.GroupTypeId.OneOfThese(eLookupGroupType.ChildrensCentresGroup, eLookupGroupType.ChildrensCentresCollaboration))
                    {
                        <tr>
                            <th scope="col">Local authority</th>
                            <td>@(Model.LocalAuthorityName ?? "Not recorded")</td>
                        </tr>
                    }

                    @if (Model.Group.GroupTypeId.OneOfThese(eLookupGroupType.MultiacademyTrust, eLookupGroupType.SingleacademyTrust, eLookupGroupType.SchoolSponsor))
                    {
                        <tr>
                            <th scope="col">Group ID</th>
                            <td>@(Model.Group.GroupId.Clean() ?? "Not recorded")</td>
                        </tr>
                    }

                    <tr>
                        <th scope="col">UID</th>
                        <td>@Model.Group.GroupUID</td>
                    </tr>


                </table>


                @if (Model.CanUserEdit)
                {
                    @Html.ActionLink("Edit details", "EditDetails", "Group", new { id = Model.Group.GroupUID, area = "Groups" }, new { @class = "button button-grey mobile-full-width" })
                }

            </div>
            
            <div id="list" class="tab-content">
                
                @if (Model.CanUserEdit)
                {
                    @Html.ActionLink("Edit " + Model.EstablishmentsPluralName.ToLower(), "EditLinks", "Group", new { id = Model.Group.GroupUID, area = "Groups" }, new { @class = "button button-grey mobile-full-width" })
                }

                <div style="float:none; clear:both;"></div>

                <div class="column-full2">
                    <ul class="school-results-listing">
                        @foreach (var result in Model.Establishments)
                        {
                            <li>
                                <h2>
                                    @Html.ActionLink(result.Name, "Details", "Establishment", new { id = result.Urn, area = "" }, new { @class = "bold-small" }) 
                                    @if (result.CCIsLeadCentre)
                                    {
                                        <text>(Lead centre)</text>
                                    }
                                </h2>
                                <dl>
                                    <dt>Address:</dt>
                                    <dd>@result.Address</dd>
                                    <dt><abbr title="Unique Reference Number">URN</abbr>:</dt>
                                    <dd> @result.Urn</dd>
                                    <dt>School type:</dt>
                                    <dd>@result.TypeName</dd>
                                    <dt>Headteacher name:</dt>
                                    <dd>@result.HeadFullName</dd>
                                    <dt>Joined date:</dt>
                                    <dd>@(result.JoinedDate?.ToString("dd/MM/yyyy") ?? "Not recorded")</dd>
                                </dl>
                            </li>
                        }
                    </ul>
                </div>

                @if (Model.CanUserEdit)
                {
                    @Html.ActionLink("Edit " + Model.EstablishmentsPluralName.ToLower(), "EditLinks", "Group", new { id = Model.Group.GroupUID, area = "Groups" }, new { @class = "button button-grey mobile-full-width" })
                }


            </div>
            <div id="governance" class="tab-content">
                
                @if (Model.GovernorsDetails.DomainModel.HasGovernors)
                {
                    Html.RenderPartial("_Governors", Model.GovernorsDetails);
                }
                else
                {
                    <p>There is no governance information for this establishment</p>
                }

            </div>

            @if (Model.IsUserLoggedOn)
            {
                <div id="change-history" class="tab-content">
                    <h2 class="bold-small">Change History</h2>
                    @if (!Model.ChangeHistory.Any())
                    {
                        <p>There are no change records available at the moment</p>
                    }
                    else
                    {
                        <p>
                            @Html.ActionLink("Download data in CSV format", "DownloadCsvChangeHistory", new { id = Model.Group.GroupUID, area = "Groups" }, new { style = "margin-bottom:10px; display:block;" })
                            @Html.ActionLink("Download data in XLSX format", "DownloadXlsxChangeHistory", new { id = Model.Group.GroupUID, area = "Groups" })
                            <br />
                        </p>

                        <table class="approval-items">
                            <thead>
                                <tr>
                                    <th>Updated field</th>
                                    <th>Old value</th>
                                    <th>New value</th>
                                    <th>Date changed</th>
                                    <th>Date requested</th>
                                    <th>Suggested from</th>
                                    <th>Approved by</th>
                                    <th>Reason</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.ChangeHistory)
                                {
                                    <tr>
                                        <td>@item.Name</td>
                                        <td>@item.OldValue</td>
                                        <td>@item.NewValue</td>
                                        <td>@item.EffectiveDateUtc</td>
                                        <td>@item.RequestedDateUtc</td>
                                        <td>@item.OriginatorUserName</td>
                                        <td>@(item.ApproverUserName ?? "--")</td>
                                        <td>--</td><!-- Reason field will be implemented by Texuna -->
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <ul class="school-results-listing approval-items">
                            @foreach (var item in Model.ChangeHistory)
                            {
                                <li>
                                    <dl>
                                        <dt>Updated field:</dt>
                                        <dd>@item.Name</dd>
                                        <dt>Old value:</dt>
                                        <dd>@item.OldValue</dd>
                                        <dt>New value:</dt>
                                        <dd>@item.NewValue</dd>
                                        <dt>Date changed:</dt>
                                        <dd>@item.EffectiveDateUtc</dd>
                                        <dt>Date requested:</dt>
                                        <dd>@item.RequestedDateUtc</dd>
                                        <dt>Suggested from:</dt>
                                        <dd>@item.OriginatorUserName</dd>
                                        <dt>Approved by:</dt>
                                        <dd>@(item.ApproverUserName ?? "--")</dd>
                                        <dt>Reason:</dt>
                                        <dd>--</dd> <!-- Reason field will be implemented by Texuna -->
                                    </dl>
                                </li>
                            }
                        </ul>
                    }
                </div>
            }
        </div>
    </div>
</div>