@using ViewModel = Edubase.Web.UI.Models.EditEstablishmentModel
@model ViewModel
@{
    if (Model.ChangesSummary == null)
    {
        Layout = "_EditLayoutPage.cshtml";
    }
    else
    {
        ViewBag.bodyClasses = "create-edit-school school-details";
        ViewBag.hideLogo = true;
        ViewBag.Title = "Edit establishment";
    }
}
@using (Html.BeginForm())
{
    <div class="tab-content">
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.Urn)
        @Html.HiddenFor(x => x.Name)
        @Html.HiddenFor(x => x.SelectedTab)
        @Html.HiddenFor(x => x.LegalParentGroupToken)
        @Html.HiddenFor(x => x.ChangesInstantCount)
        @Html.HiddenFor(x => x.ChangesRequireApprovalCount)

        <div style="display:@Html.Conditional(Model.ChangesSummary != null, "none");">

            <div class="column-half">

                <button type="submit" class="button" name="@nameof(Model.ActionSpecifier)" value="@ViewModel.GetActionSpecifier(ViewModel.ASSave, ViewModel.ASSaveHelpdesk)">Save helpdesk note</button>
                @Html.ActionLink("Cancel", "Details", "Establishment", new { id = Model.Urn }, new { @class = "button button-secondary cancel" })

                @if (Model.EditPolicy.HelpdeskNotes)
                {
                    <div class="form-group first">
                        @Html.LabelFor(x => x.HelpdeskNotes, new { @class = "form-label" })
                        @Html.TextAreaFor(x => x.HelpdeskNotes, new { @class = "form-control", rows = "10", maxlength = "1000" })
                    </div>
                }

                @if (Model.EditPolicy.HelpdeskLastUpdate)
                {
                    @Html.EditorFor(x => x.HelpdeskLastUpdate)
                }

                @if (Model.EditPolicy.HelpdeskPreviousLocalAuthorityId)
                {
                    <div class="form-group @Html.ValidationCssClassFor(x => x.HelpdeskPreviousLocalAuthorityId)">
                        @Html.LabelFor(x => x.HelpdeskPreviousLocalAuthorityId)
                        @Html.DropDownListFor(x => x.HelpdeskPreviousLocalAuthorityId, Model.LocalAuthorities, "Please select a local authority", new { @class = "form-control" })
                    </div>
                }

                @if (Model.EditPolicy.HelpdeskPreviousEstablishmentNumber)
                {
                    <div class="form-group @Html.ValidationCssClassFor(x => x.HelpdeskPreviousEstablishmentNumber)">
                        @Html.LabelFor(x => x.HelpdeskPreviousEstablishmentNumber)
                        @Html.ValidationMessageFor(x => x.HelpdeskPreviousEstablishmentNumber)
                        @Html.TextBoxFor(x => x.HelpdeskPreviousEstablishmentNumber, new { @class = "form-control" })
                    </div>
                }
                
                <div class="button-row push--top">
                    <button type="submit" class="button" name="@nameof(Model.ActionSpecifier)" value="@ViewModel.GetActionSpecifier(ViewModel.ASSave, ViewModel.ASSaveHelpdesk)">Save helpdesk note</button>
                    @Html.ActionLink("Cancel", "Details", "Establishment", new { id = Model.Urn }, new { @class = "button button-secondary cancel" })
                </div>

            </div>
        </div>

        @if (Model.ChangesSummary != null)
        {
            Html.RenderPartial("Partials/_ConfirmChanges");

            <div class="button-row">
                <button class="button-secondary button" name="@nameof(Model.ActionSpecifier)" type="submit" value="@ViewModel.ASCancel">&laquo; Back</button>
                <button type="submit" name="@nameof(Model.ActionSpecifier)" value="@ViewModel.ASConfirm" class="button js-confirm">Confirm</button>

                @Html.ActionLink("Cancel", "Details", "Establishment", new {id = Model.Urn}, new {@class = "button button-secondary", id = "cancel-edit"})
            </div>

            @section ViewScripts {

                <script nonce="@Html.ScriptNonce()">
                    $('#cancel-edit, .requires-conf-to-leave').okCancel({
                        ok: function() {
                            window.location = this.el.getAttribute('href');
                        },
                        title: 'Are you sure you want to leave this page?',
                        content: 'Any unsaved changes will be lost',
                        triggerEvent: 'click'
                    });

                    $('#HelpdeskNotes').textCount({ maxLength: 255 });
                </script>

            }
        }
        else
        {
            @section ViewScripts {
                <script nonce="@Html.ScriptNonce()">

                    var $fields = $('#content').find('.form-control');
                    var exitAttached = false;

                    $fields.on('change keyup', function () {
                        if (!exitAttached) {
                            DfE.Util.showUnload('Are you sure you want to leave this page? Any unsaved changes will be lost');
                            exitAttached = true;
                        }
                    });

                    $('#HelpdeskNotes').textCount({ maxLength: 255 });

                </script>
            }
        }

    </div>
}
