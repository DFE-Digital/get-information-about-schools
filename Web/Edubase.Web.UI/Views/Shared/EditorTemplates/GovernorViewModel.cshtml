@using Edubase.Services.Enums
@model Edubase.Web.UI.Areas.Governors.Models.GovernorViewModel
    
<div class="form-group @Html.ValidationCssClassFor(x => x.GovernorTitle)">
    @Html.LabelFor(x => x.GovernorTitle)
    @Html.ValidationMessageFor(x => x.GovernorTitle)
    @Html.DropDownListFor(x => x.GovernorTitle, Model.Titles, "", new { @class = "form-control" })
</div>

<div class="form-group @Html.ValidationCssClassFor(x => x.FirstName)">
    @Html.LabelFor(x => x.FirstName)
    @Html.ValidationMessageFor(x => x.FirstName)
    @Html.TextBoxFor(x => x.FirstName, new { @class = "form-control" })
</div>

<div class="form-group @Html.ValidationCssClassFor(x => x.MiddleName)">
    @Html.LabelFor(x => x.MiddleName)
    @Html.ValidationMessageFor(x => x.MiddleName)
    @Html.TextBoxFor(x => x.MiddleName, new { @class = "form-control" })
</div>

<div class="form-group @Html.ValidationCssClassFor(x => x.LastName)">
    @Html.LabelFor(x => x.LastName)
    @Html.ValidationMessageFor(x => x.LastName)
    @Html.TextBoxFor(x => x.LastName, new { @class = "form-control" })
</div>

@if (Model.DisplayPolicy.Id)
{
<div class="form-group">
    @Html.LabelFor(x => x.GID)
    <input class="form-control" value="@Model.GID" readonly="readonly" disabled="disabled" />
</div>
}

@if (Model.DisplayPolicy.AppointingBodyId)
{
<div class="form-group @Html.ValidationCssClassFor(x => x.AppointingBodyId)">
    @Html.LabelFor(x => x.AppointingBodyId)
    @Html.ValidationMessageFor(x => x.AppointingBodyId)
    @Html.DropDownListFor(x => x.AppointingBodyId, Model.AppointingBodies, "", new { @class = "form-control" })
</div>
}

@if (Model.DisplayPolicy.AppointmentStartDate)
{
    @Html.EditorFor(x => x.AppointmentStartDate)
}

@if (Model.DisplayPolicy.AppointmentEndDate)
{
    @Html.EditorFor(x => x.AppointmentStartDate, new {title = Model.GovernorRole == eLookupGovernorRole.Member ? "Date stepped down" : "Date term ends"})
}

@if (Model.DisplayPolicy.EmailAddress)
{
    <div class="form-group @Html.ValidationCssClassFor(x => x.EmailAddress)">
        @Html.LabelFor(x => x.EmailAddress)
        @Html.ValidationMessageFor(x => x.EmailAddress)
        @Html.TextBoxFor(x => x.EmailAddress, new { @class = "form-control" })
    </div>
}

@if (Model.DisplayPolicy.PostCode)
{
    <div class="form-group @Html.ValidationCssClassFor(x => x.PostCode)">
        @Html.LabelFor(x => x.PostCode)
        @Html.ValidationMessageFor(x => x.PostCode)
        @Html.TextBoxFor(x => x.PostCode, new { @class = "form-control" })
    </div>
}

@if (Model.DisplayPolicy.DOB)
{
    @Html.EditorFor(x => x.DOB)
}

@if (Model.DisplayPolicy.PreviousFullName)
{
    <div class="form-group @Html.ValidationCssClassFor(x => x.PreviousTitle)">
        @Html.LabelFor(x => x.PreviousTitle)
        @Html.ValidationMessageFor(x => x.PreviousTitle)
        @Html.DropDownListFor(x => x.PreviousTitle, Model.PreviousTitles, "", new { @class = "form-control" })
    </div>

    <div class="form-group @Html.ValidationCssClassFor(x => x.PreviousFirstName)">
        @Html.LabelFor(x => x.PreviousFirstName)
        @Html.ValidationMessageFor(x => x.PreviousFirstName)
        @Html.TextBoxFor(x => x.PreviousFirstName, new { @class = "form-control" })
    </div>

    <div class="form-group @Html.ValidationCssClassFor(x => x.PreviousMiddleName)">
        @Html.LabelFor(x => x.PreviousMiddleName)
        @Html.ValidationMessageFor(x => x.PreviousMiddleName)
        @Html.TextBoxFor(x => x.PreviousMiddleName, new { @class = "form-control" })
    </div>

    <div class="form-group @Html.ValidationCssClassFor(x => x.PreviousLastName)">
        @Html.LabelFor(x => x.PreviousLastName)
        @Html.ValidationMessageFor(x => x.PreviousLastName)
        @Html.TextBoxFor(x => x.PreviousLastName, new { @class = "form-control" })
    </div>
}

@if (Model.DisplayPolicy.Nationality)
{
    <div class="form-group @Html.ValidationCssClassFor(x => x.NationalityId)">
        @Html.LabelFor(x => x.NationalityId)
        @Html.ValidationMessageFor(x => x.NationalityId)
        @Html.DropDownListFor(x => x.NationalityId, Model.Nationalities, "", new { @class = "form-control" })
    </div>
}

@if (Model.DisplayPolicy.TelephoneNumber)
{
    <div class="form-group @Html.ValidationCssClassFor(x => x.TelephoneNumber)">
        @Html.LabelFor(x => x.TelephoneNumber)
        @Html.ValidationMessageFor(x => x.TelephoneNumber)
        @Html.TextBoxFor(x => x.TelephoneNumber, new { @class = "form-control" })
    </div>
}