@model ReplaceChairViewModel

@{
    ViewBag.hideLogo = true;
    ViewBag.SelectedTab = "EditGovernance";
    Layout = Model.Layout;
}


@using (Html.BeginForm("ReplaceChair", "Governor", FormMethod.Post))
{
    @Html.HiddenFor(m => m.ExistingGovernorId)
    @Html.HiddenFor(m => m.GovernorFullName)
    @Html.HiddenFor(m => m.ExistingChairType)
    @Html.HiddenFor(m => m.Urn)
    @Html.HiddenFor(m => m.Name)
    @Html.HiddenFor(m => m.Role)
    <div id="select-shared-governor" class="govuk-grid-row">
        <div class="govuk-grid-column-one-half">
            <div class="button-row govuk-!-margin-bottom-4">
                <input type="submit" value="Save" class="govuk-button"/>
                <a href="@Url.RouteUrl("EstabEditGovernance", new {establishmentUrn = Model.Urn.Value})" class="govuk-button govuk-button--secondary">Cancel</a>
            </div>
            <h2 class="govuk-heading-m">Replace @Model.RoleName</h2>
            <h3 class="govuk-heading-s">@Model.GovernorFullName</h3>

            @Html.EditorFor(m => m.DateTermEnds, new {fieldsetClassName = "edit-date-fieldset"})


            @if (Model.AllowReinstatement)
            {
            <div class="govuk-form-group">
                <div class="govuk-checkboxes">
                    @FormHelpers.GiasCheckbox("true", "Reinstate", "Re-instate as local governor", null, new {id = "Reinstate"}, @Model.Reinstate)
                </div>
            </div>
            }

            <div class="govuk-form-group">
                <div class="govuk-radios govuk-radios--conditional" data-module="govuk-radios">
                    <div class="govuk-radios__item">
                        @Html.GiasRadioFor(m => m.NewChairType, ReplaceChairViewModel.ChairType.LocalChair, "New Chair", null, new {id = "newChair", @class = "govuk-radios__input panel-trigger", data_aria_controls = "replacement-chair-details"})
                    </div>
                    <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="replacement-chair-details" data-module="govuk-radios">
                        <div class="replacement-chair-option">
                            @if (Model.ExistingNonChairs.Any())
                            {
                                <div class="govuk-form-group js-when-on">
                                    @Html.LabelFor(x => x.SelectedPreviousExistingNonChairId, "Choose replacement", new {@class = "govuk-label"})
                                    @Html.DropDownListFor(x => x.SelectedPreviousExistingNonChairId, Model.ExistingNonChairs, "New", new {@class = "govuk-select choose-replacement"})
                                </div>
                            }

                            @Html.EditorFor(m => m.NewLocalGovernor, new {disableStartDate = true, editorPrefix = nameof(Model.NewLocalGovernor), fieldsetClassName = "edit-date-fieldset"})
                        </div>
                    </div>
                    <div class="govuk-radios__item">
                        @Html.GiasRadioFor(m => m.NewChairType, ReplaceChairViewModel.ChairType.SharedChair, "Shared Chair", null, new {id = "sharedChair", @class = "govuk-radios__input panel-trigger", data_aria_controls = "SharedGovernors"})
                    </div>
                    <div class="govuk-radios__conditional govuk-radios__conditional--hidden" id="SharedGovernors">
                        <div class="replacement-chair-option">
                            <div class="shared-governor-list">
                                @if (Model.SharedGovernors.Any())
                                {
                                    <ul class="govuk-list">
                                        @for (var index = 0; index < Model.SharedGovernors.Count; index++)
                                        {
                                            @Html.EditorFor(x => x.SharedGovernors[index], new {disableStartDate = true, fieldsetClassName = "edit-date-fieldset"})
                                        }
                                    </ul>
                                }
                                else
                                {
                                    <div class="form-group @Html.ValidationCssClass("SharedGovernors")">
                                        @if (Html.ValidationCssClass("SharedGovernors").ToString() == "error")
                                        {
                                            @Html.ValidationMessage("SharedGovernors")
                                        }
                                        else
                                        {
                                            <p class="govuk-body-s">There are no shared governors available for this establishment</p>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="button-row">
                <input type="submit" value="Save" class="govuk-button"/>
                <a href="@Url.RouteUrl("EstabEditGovernance", new {establishmentUrn = Model.Urn.Value})" class="govuk-button govuk-button--secondary">Cancel</a>
            </div>

        </div>
    </div>
}

@section ViewScripts
{
    <script nonce="@Html.ScriptNonce()">
        $day = $('#DateTermEnds_Day');
        $month = $('#DateTermEnds_Month');
        $year = $('#DateTermEnds_Year');

        function checkAndUpdateDate() {
            if (Number($day.val()) > 0 && Number($month.val()) > 0 && Number($year.val()) > 0) {
                var date = new Date($year.val(), $month.val() - 1, $day.val(), 0, 0, 0, 0);
                date.setDate(date.getDate() + 1);
                $('.start-date-day').val(date.getDate());
                $('.start-date-month').val(date.getMonth() + 1);
                $('.start-date-year').val(date.getFullYear());
            }
        }

        $day.blur(checkAndUpdateDate);
        $month.blur(checkAndUpdateDate);
        $year.blur(checkAndUpdateDate);

        $(function () {
            checkAndUpdateDate();

            $(".choose-replacement").on("change", function () {
                var queryParameters = {}, queryString = location.search.substring(1),
                    re = /([^&=]+)=([^&]*)/g, m;

                while (m = re.exec(queryString)) {
                    queryParameters[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);
                }

                queryParameters['rgid'] = $(this).val();
                queryParameters['d'] = $("#DateTermEnds_Day").val();
                queryParameters['m'] = $("#DateTermEnds_Month").val();
                queryParameters['y'] = $("#DateTermEnds_Year").val();
                queryParameters['ri'] = $("#Reinstate").prop("checked");

                location.search = $.param(queryParameters);

            });
        });
    </script>
}

