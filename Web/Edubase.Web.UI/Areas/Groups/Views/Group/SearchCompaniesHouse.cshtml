@model SearchCompaniesHouseModel
@{
    ViewBag.bodyClasses = "create-edit-school create-academy-trust";
    ViewBag.hideLogo = true;
    ViewBag.Title = "Create academy trust";
}

<div class="breadcrumbs">
    <ol>
        <li>@Html.ActionLink("Home", "Index", "Search", new { area = "" }, null)</li>
        <li>@Html.ActionLink("Tools", "Index", "Tools", new { area = "" }, null)</li>
    </ol>
</div>

@Html.Partial("_ValidationSummary", ViewData.ModelState)

@using (Html.BeginForm("SearchCompaniesHouse", "Group", FormMethod.Post))
{
    <div class="grid-row">
        <div class="column-full">
            <h1 class="heading-xlarge">Create an academy trust</h1>
            <p>To create an academy trust record select the company record from Companies House.</p>
        </div>
    </div>
    <div class="grid-row">
        <div class="column-two-thirds">
            <h2 class="heading-small">Add company</h2>
            <div class="form-group inline-with-button @Html.ValidationCssClassFor(x => x.SearchText)">
                @Html.LabelFor(x => x.SearchText, "Enter the Companies House name or number", new { @class = "form-label" })
                @Html.ValidationMessageFor(x => x.SearchText)
                @Html.TextBoxFor(x => x.SearchText, new { maxlength = 120, @class = "form-control " })
                <button type="submit" class="button inline-submit">Search</button>
            </div>

        </div>
    </div>

    if (Model.Results != null)
    {
        var startResult = Model.StartIndex + 1;
        var endResult = (Model.StartIndex + Model.PageSize > Model.Count) ? Model.Count : Model.StartIndex + Model.PageSize;

        if (Model.Results.PageCount > 1)
        {
            <div class="grid-row">
                <div class="column-full top-pagination">
                    @Html.Partial("_GenericPagination", Model, new ViewDataDictionary
                    {
                        {"resultsDescription", String.Concat("Showing ", @startResult, "-", @endResult, " of <span id='list-count'>", @Model.Count, "</span> establishments")},
                        {"maxPages", 5 }
                    })
                </div>
            </div>
        }


        if (Model.Results.Items.Any())
        {
            <div class="grid-row">
                <div class="column-full">
                    <table class="edubase-table company-details">
                        <caption class="visuallyhidden">Company search results</caption>
                        <thead>
                            <tr>
                                <th scope="col">Name</th>
                                <th scope="col">Companies House no.</th>
                                <th scope="col">Incorporated</th>
                                <th scope="col">Address</th>
                            </tr>
                        </thead>
                        @foreach (var result in Model.Results.Items)
                        {
                            <tr class="company-result">
                                <td data-label="Name">@Html.ActionLink(result.Name, "CreateAcademyTrust", "Group", new { companiesHouseNumber = result.Number, area = "Groups" }, null)</td>
                                <td data-label="Companies House no."><a href="@System.Configuration.ConfigurationManager.AppSettings["CompaniesHouseBaseUrl"]@result.Number" target="_blank">@result.Number <span class="visually-hidden">Opens in new window</span></a></td>
                                <td data-label="Incorporated">@(result.IncorporationDate?.ToString("dd/MM/yyyy"))</td>
                                <td data-label="Address">@(result.Address.ToString() ?? "Not recorded")</td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        }

        if (Model.Results.PageCount > 1)
        {
            <div class="grid-row">
                <div class="column-full">
                    <div class="lower-pagination push--bottom">
                        @Html.Partial("_GenericPagination", Model, new ViewDataDictionary
                        {
                            {"resultsDescription", String.Concat("Showing ", @startResult, "-", @endResult, " of <span id='list-count'>", @Model.Count, "</span> establishments")},
                            {"maxPages", 5 }
                        })
                    </div>
                    <a class="back-to-top-link" href="#full-content">
                        <svg role="presentation" focusable="false" class="back-to-top-icon" xmlns="http://www.w3.org/2000/svg" width="13" height="17" viewBox="0 0 13 17">
                            <path fill="currentColor" d="M6.5 0L0 6.5 1.4 8l4-4v12.7h2V4l4.3 4L13 6.4z"></path>
                        </svg>
                        Back to top
                    </a>
                </div>
            </div>
        }
    }
}

@section ViewScripts{
    <script src="/public/assets/scripts/standalone/accessibility.js"></script>
}
