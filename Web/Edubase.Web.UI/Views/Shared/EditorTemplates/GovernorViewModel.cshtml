@using Edubase.Common
@using Edubase.Services.Enums
@model Edubase.Web.UI.Areas.Governors.Models.GovernorViewModel

@{
    bool disableStartDate;
    if (!bool.TryParse(ViewData["disableStartDate"]?.ToString(), out disableStartDate))
    {
        disableStartDate = false;
    }

    bool showReactivationWarning;
    if (!bool.TryParse(ViewData["reactivationWarning"]?.ToString(), out showReactivationWarning))
    {
        showReactivationWarning = false;
    }

    string editorPrefix = ViewData["editorPrefix"]?.ToString();
}

@if (Model.DisplayPolicy.FullName)
{
    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.GovernorTitleId)">
        @Html.LabelFor(x => x.GovernorTitleId, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.GovernorTitleId, null, new { @class = "govuk-error-message" })
        @Html.DropDownListFor(x => x.GovernorTitleId, Model.Titles, "", new { @class = string.Concat("govuk-select ", Html.TextBoxValidationClass(x => x.GovernorTitleId)) })
    </div>

    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.FirstName)">
        @Html.LabelFor(x => x.FirstName, "First name (required to save record)", new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.FirstName, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.FirstName, new { @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.FirstName)) })
    </div>

    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.MiddleName)">
        @Html.LabelFor(x => x.MiddleName, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.MiddleName, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.MiddleName, new { @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.MiddleName)) })
    </div>

    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.LastName)">
        @Html.LabelFor(x => x.LastName, "Last name (required to save record)", new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.LastName, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.LastName, new { @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.LastName)) })
    </div>
}

@if (Model.DisplayPolicy.IsOriginalSignatoryMember)
{
    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.IsOriginalSignatoryMember)">
        @Html.LabelFor(x => x.IsOriginalSignatoryMember, "Original signatory member", new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.IsOriginalSignatoryMember, null, new { @class = "govuk-error-message" })
        @Html.DropDownListFor(x => x.IsOriginalSignatoryMember, Model.YesNoSelect, new { @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.IsOriginalSignatoryMember)) })
    </div>
}

@if (Model.DisplayPolicy.IsOriginalChairOfTrustees)
{
    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.IsOriginalChairOfTrustees)">
        @Html.LabelFor(x => x.IsOriginalChairOfTrustees, "Original signatory member", new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.IsOriginalChairOfTrustees, null, new { @class = "govuk-error-message" })
        @Html.DropDownListFor(x => x.IsOriginalChairOfTrustees, Model.YesNoSelect, "No", new { @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.IsOriginalChairOfTrustees)) })
    </div>
}


@if (Model.DisplayPolicy.Id)
{
    <div class="govuk-form-group">
        @Html.LabelFor(x => x.GID, new { @class = "govuk-label" })
        <input class="govuk-input" value="@Model.GID" readonly="readonly" disabled="disabled" />
    </div>
}

@if (Model.DisplayPolicy.AppointingBodyId)
{
    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.AppointingBodyId)">
        @Html.LabelFor(x => x.AppointingBodyId, "Appointing body (required to save record)", new { @class = "govuk-label" })
        @Html.HtmlNewlines(Html.ValidationMessageFor(x => x.AppointingBodyId, null, new { @class = "govuk-error-message" }))
        @Html.DropDownListFor(x => x.AppointingBodyId, Model.AppointingBodies, "", new { @class = string.Concat("govuk-select ", Html.TextBoxValidationClass(x => x.AppointingBodyId)) })
    </div>
}

@if (Model.DisplayPolicy.AppointmentStartDate)
{
    var detail = disableStartDate ? @"based on current governor's end date" : @"required to save record";
    var title = $"Date of appointment ({detail})";

    @Html.EditorFor(x => x.AppointmentStartDate, new { title, @readonly = disableStartDate, ClassPrefix = "start-date", editorPrefix })
}

@if (Model.DisplayPolicy.AppointmentEndDate)
{
    @Html.EditorFor(x => x.AppointmentEndDate, new { title = Model.GovernorRole == eLookupGovernorRole.Member ? "Date stepped down" : "Date term ends", showReactivationWarning })
}

@if (Model.DisplayPolicy.EmailAddress)
{
    var labelText = "Email address";
    if (Model.GovernorRole.OneOfThese(
        eLookupGovernorRole.ChairOfGovernors,
        eLookupGovernorRole.ChairOfTrustees,
        eLookupGovernorRole.AccountingOfficer,
        eLookupGovernorRole.ChiefFinancialOfficer,
        eLookupGovernorRole.ChairOfLocalGoverningBody
        ))
    {
        labelText += " (required to save record)";
    }

    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.EmailAddress)">
        @Html.LabelFor(x => x.EmailAddress, labelText, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.EmailAddress, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.EmailAddress, new { @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.EmailAddress)) })
    </div>
}

@if (Model.DisplayPolicy.PostCode)
{
    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.PostCode)">
        @Html.LabelFor(x => x.PostCode, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.PostCode, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.PostCode, new { @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.PostCode)) })
    </div>
}

@if (Model.DisplayPolicy.DOB)
{
    @Html.EditorFor(x => x.DOB)
}

@if (Model.DisplayPolicy.PreviousFullName)
{
    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.PreviousTitleId)">
        @Html.LabelFor(x => x.PreviousTitleId, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.PreviousTitleId, null, new { @class = "govuk-error-message" })
        @Html.DropDownListFor(x => x.PreviousTitleId, Model.PreviousTitles, "", new { @class = string.Concat("govuk-select ", Html.TextBoxValidationClass(x => x.PreviousTitleId)) })
    </div>

    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.PreviousFirstName)">
        @Html.LabelFor(x => x.PreviousFirstName, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.PreviousFirstName, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.PreviousFirstName, new { @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.PreviousFirstName)) })
    </div>

    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.PreviousMiddleName)">
        @Html.LabelFor(x => x.PreviousMiddleName, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.PreviousMiddleName, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.PreviousMiddleName, new { @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.PreviousMiddleName)) })
    </div>

    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.PreviousLastName)">
        @Html.LabelFor(x => x.PreviousLastName, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.PreviousLastName, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.PreviousLastName, new { @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.PreviousLastName)) })
    </div>
}

@if (Model.DisplayPolicy.TelephoneNumber)
{
    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.TelephoneNumber)">
        @Html.LabelFor(x => x.TelephoneNumber, "Telephone (required to save record)", new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.TelephoneNumber, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.TelephoneNumber, new { @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.TelephoneNumber)) })
    </div>
}
