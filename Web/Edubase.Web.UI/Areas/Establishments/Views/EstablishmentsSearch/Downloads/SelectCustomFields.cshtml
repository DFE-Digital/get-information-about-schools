@using Edubase.Services.Enums
@using Microsoft.Ajax.Utilities
@using Edubase.Web.UI.Areas.Establishments.Models.Search
@model EstablishmentSearchDownloadViewModel
@using Edubase.Web.UI.Models.Search
@using Edubase.Web.UI.Helpers
@{
    ViewBag.Title = string.Format("Download establishment search results");
    ViewBag.bodyClasses = " search-page custom-fields-download";
    ViewBag.hideLogo = true;
}
@section Head
{
    <meta name="robots" content="noindex,nofollow" />
}

@section BreadCrumbs
{
    @if (Model.SearchQueryString.IsNullOrWhiteSpace() || Model.SearchSource == null)
    {
        @Html.ActionLink("Search", "Index", "Search", new { area = "" }, new { @class = "govuk-back-link" })
    }
    else
    {
        <div class="govuk-grid-row">
            <div class="govuk-grid-column-full">
                <div class="govuk-breadcrumbs">
                    <ol class="govuk-breadcrumbs__list">
                        <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "govuk-breadcrumbs__link" })</li>
                        <li class="govuk-breadcrumbs__list-item">@Html.ActionLink("Search", "Index", "Search", new {area = "", SelectedTab = SearchViewModel.Tab.Establishments}, new {@class = "govuk-breadcrumbs__link"})</li>
                        <li class="govuk-breadcrumbs__list-item"><a class="govuk-breadcrumbs__link" href=@($"{Url.Action("Index", "EstablishmentsSearch", new {area = "Establishments"})}?{Model.SearchQueryString}")>Search results</a></li>
                    </ol>
                </div>
            </div>
        </div>
    }
}

<div id="field-select-app" v-cloak>
    <div class="govuk-grid-row js-show-block">
        <div class="govuk-grid-column-full">
            <error-summary error-title="There was a problem" :errors="errorMessages" />
        </div>
    </div>

    <div class="govuk-grid-row">
        <div class="govuk-grid-column-full">
            <div class="no-js-show-block">
                @Html.Partial("_ValidationSummary", ViewData.ModelState)
            </div>
            <h1 class="govuk-heading-xl">Download data</h1>

            <h2 class="govuk-heading-m">Download establishment search results</h2>
            <h2 class="govuk-heading-m">Select the data you are interested in</h2>
        </div>
    </div>
    @using (Html.BeginForm("PrepareDownload", "Search", FormMethod.Get, new Dictionary<string, object> { ["@submit"] = "handleSubmit", ["id"] = "field-selection" }))
    {
        <div id="js-field-selection" class="js-show-block">

            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">
                    <search-by-field-name :fields="fields" :selected-fields="selectedFields" />
                </div>
                <div class="govuk-grid-column-one-third govuk-!-padding-top-6">
                    <view-switcher :view-as-list="viewAsList" />
                </div>
            </div>

            <div class="govuk-grid-row" v-if="shouldShowContinue">
                <div class="govuk-grid-column-one-half">
                    <input type="submit" class="govuk-button" value="Next" />
                </div>
                <checkbox-remote-selection :selected-fields="selectedFields" />
            </div>

            <div class="govuk-grid-row" v-show="!viewAsList">
                <div class="govuk-grid-column-full">
                    <download-categorised-fields accordion-id="categorised-fields"
                                                 :panel-data="categoryList"
                                                 :selected-fields="selectedFields"
                                                 :has-error="radioError" />
                </div>
            </div>

            <div class="govuk-grid-row" v-show="viewAsList">
                <div class="govuk-grid-column-full">
                    <div v-bind:class="['govuk-form-group', radioError? 'govuk-form-group--error' : '']" v-if="searchMatches.length === 0  && !isFilteringFields">
                        <span v-if="radioError" class="govuk-error-message">Select at least one field</span>
                        <div class="govuk-checkboxes">
                            <checkbox :input-id="chx.id"
                                      id-prefix="alpha"
                                      :label="chx.name"
                                      :value="chx.id"
                                      v-model="selectedFields"
                                      v-for="(chx, i) in fields" :key="i+'_'"></checkbox>
                        </div>
                    </div>
                    <div v-bind:class="['govuk-form-group', radioError? 'govuk-form-group--error' : '']" v-else>
                        <span v-if="radioError" class="govuk-error-message">Select at least one field</span>
                        <div class="govuk-checkboxes">
                            <checkbox :input-id="chx.id"
                                      id-prefix="alpha"
                                      :label="chx.name"
                                      :value="chx.id"
                                      v-model="selectedFields"
                                      v-for="(chx, i) in searchMatches" :key="i+'_'">
                            </checkbox>
                        </div>
                    </div>
                </div>
            </div>

            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full  govuk-!-padding-top-4" v-if="shouldShowContinue">
                    <input type="submit" class="govuk-button" value="Next" />
                </div>
            </div>
        </div>

        <div id="no-js-container">
            <input type="hidden" value="true" name="ViewedCustomFields" />
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full">
                    <input type="submit" class="govuk-button" value="Next" />
                </div>
            </div>
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full">
                    <div class="gias-download-fields  @Html.ValidationGroupCssClass("CustomFieldsByCategory")" id="CustomFieldsByCategory">
                        @Html.ValidationMessageFor(x => x.CustomFieldsByCategory, null, new { @class = "govuk-error-message" })
                        @foreach (var fieldCategory in Model.CustomFieldsByCategory)
                        {

                            <div class="gias-download-fields--section">
                                <h2 class="govuk-heading-m">@fieldCategory.Category</h2>
                                <div class="gias-download-fields--section__content">
                                    <div class="govuk-checkboxes">
                                        @foreach (var chx in fieldCategory.CustomFields)
                                        {
                                            <div class="govuk-checkboxes__item">
                                                <input class="govuk-checkboxes__input" id="@chx.Id" name="zm" type="checkbox" value="@chx.Id">
                                                <label class="govuk-label govuk-checkboxes__label" for="@chx.Id">
                                                    @chx.Name
                                                </label>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <p>@helpers.BackToTopLink()</p>

                </div>
            </div>
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-full govuk-!-padding-top-4">
                    <input type="submit" class="govuk-button" value="Next" />
                </div>
            </div>
        </div>
        @Html.HiddenFieldsFromQueryString(new[] { EstablishmentSearchDownloadViewModel.SelectedCustomFieldsBindAlias })
    }
</div>



@section ViewScripts
{
    <script nonce="@Html.ScriptNonce()">
        var fieldListByCat = @Html.Json(Model.CustomFieldsByCategory);
        var fieldList = @Html.Json(Model.CustomFields);
    </script>
    <script src="@Html.Raw(Html.GetWebpackScriptUrl("download-select-fields.*.js"))"></script>
}
