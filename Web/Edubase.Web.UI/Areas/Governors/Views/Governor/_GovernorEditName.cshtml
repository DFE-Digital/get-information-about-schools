@using Edubase.Common
@using Edubase.Services.Enums
@model Edubase.Web.UI.Areas.Governors.Models.GovernorViewModel

@if (Model.DisplayPolicy.FullName)
{
    <div class="govuk-form-group" id="governorFullNameDiv" style="display:none">
        <label class="govuk-label" for="FullName">
            Name
            <a id="FullNameTooltipLink" href="#help-text-full-name" class="help-icon modal-link">
                <span class="govuk-visually-hidden">Help with the name field</span>
                @helpers.DialogHiddenPrompt()
            </a>
        </label>
        @Html.TextBoxFor(x => x.FullName,
            new { id = "governorFullNameInput", @class = "govuk-input", @readonly = true, disabled = "disabled" })
    </div>

    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.GovernorTitleId)">
        @Html.LabelFor(x => x.GovernorTitleId, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.GovernorTitleId, null, new { @class = "govuk-error-message" })
        @Html.DropDownListFor(x => x.GovernorTitleId, Model.Titles, "",
            new { id = "governorTitleInput", @class = string.Concat("govuk-select ", Html.TextBoxValidationClass(x => x.GovernorTitleId)) })
    </div>

    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.FirstName)">
        @Html.LabelFor(x => x.FirstName, "First name (required to save record)", new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.FirstName, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.FirstName,
            new { id = "governorFirstNameInput", @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.FirstName)) })
    </div>

    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.MiddleName)">
        @Html.LabelFor(x => x.MiddleName, new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.MiddleName, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.MiddleName,
            new { id = "governorMiddleNameInput", @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.MiddleName)) })
    </div>

    <div class="govuk-form-group @Html.ValidationCssClassFor(x => x.LastName)">
        @Html.LabelFor(x => x.LastName, "Last name (required to save record)", new { @class = "govuk-label" })
        @Html.ValidationMessageFor(x => x.LastName, null, new { @class = "govuk-error-message" })
        @Html.TextBoxFor(x => x.LastName,
            new { id = "governorLastNameInput", @class = string.Concat("govuk-input ", Html.TextBoxValidationClass(x => x.LastName)) })
    </div>

    <div class="govuk-grid-column-full helptext-container">
        <div id="help-text-full-name">
            <h3 class="govuk-heading-s make-modal-header">Name</h3>
            <p class="govuk-body">
                This field is greyed out as it is not editable because it is auto populated by the name fields in the system.
            </p>
        </div>
    </div>
}
