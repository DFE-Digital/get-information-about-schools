@using Edubase.Common;
@model GovernorSearchViewModel
@{
    ViewBag.Title = string.Format("Governor search results");
    ViewBag.PageClass = "search-results";
    ViewBag.HideLogo = true;

    var gSearch = Request.QueryString["gsearch"];
}

<div class="grid-row">
    <div class="column-full results-heading">
        <div class="breadcrumbs">            
            @Html.ActionLink("Back to find a governor", "Index", "Search", new { area = "", SelectedTab = "Governors", gsearch = gSearch }, null)                        
        </div>
        <h1 class="heading-xlarge">Search results</h1>
        <a class="download-link @(Model.Count > 5000 ? "prevent-download": "")" href="@Url.Action("PrepareDownload", "GovernorSearch", new {area = "Governors"})?@Url.CurrentQueryString()">Download these search results</a>        
    </div>
    <div class="column-full">
        <div class="warning-message @Html.Conditional(!Model.SelectedLocalAuthorityIds.Any(), "hidden")" id="gov-la-warning">
            <p>You can only view governors of establishments by local authority. For multi academy trust governors clear the local authority filter.</p>
        </div>
    </div>
</div>
@if (Model.GovernorSearchModel.Forename.Clean() != null ||
     Model.GovernorSearchModel.Surname.Clean() != null ||
     Model.SelectedRoleIds.Any())
{
    <div class="grid-row">
        <div class="column-full">
            <p>
                Governor@(Model.Count == 1 ? "" : "s")
                <text>matching</text>

                @if (Model.GovernorSearchModel.Forename.Clean() != null)
                {
                <text>first name &lsquo;<span class="bold-small">@Model.GovernorSearchModel.Forename</span>&rsquo;</text>

                }

                @if (Model.GovernorSearchModel.Surname.Clean() != null)
                {
                    if (Model.GovernorSearchModel.Forename.Clean() != null)
                    {
                    <text>, </text>
                    }
                <text>last name &lsquo;<span class="bold-small">@Model.GovernorSearchModel.Surname</span>&rsquo;</text>
                }

                @if (Model.SelectedRoleIds.Any())
                {
                if (Model.GovernorSearchModel.Surname.Clean() != null || Model.GovernorSearchModel.Forename.Clean() != null)
                {
                <text>and </text>
                }
                else
                {
                <text>for </text>
                }
                <text>roles <span class="governor-roles">@Html.Raw(Model.RoleNames)</span></text>
                }


        </p>
    </div>
    </div>
}

<div class="grid-row">

    <div class="column-third">
        <div class="filter-form" id="filter-form">
            <div id="EditSearchCollapse" aria-expanded="true" class="blanket-container">
                <form method="get" action="@Url.Action("Index", "GovernorSearch", new {area = "Governors"})">
                    <input type="hidden" id="client-only-searchtype" value="Governors" />
                    <div class="govuk-option-select js-collapsible"
                         id="option-select-sort-by">
                        <div class="container-head js-container-head">
                            <div class="option-select-label">Sort by</div>
                            <div class="js-selected-counter"></div>
                        </div>
                        <select class="form-control trigger-result-update" name="SortBy">
                            <option value="a" @Html.Conditional(Model.SortOption == Edubase.Services.Enums.eSortBy.NameAlphabeticalAZ, "selected")>alphabetical a-z</option>
                            <option value="z" @Html.Conditional(Model.SortOption == Edubase.Services.Enums.eSortBy.NameAlphabeticalZA, "selected")>alphabetical z-a</option>
                        </select>
                    </div>

                    <div class="govuk-option-select js-collapsible" id="option-select-role-type">
                        <div class="container-head js-container-head">
                            <div class="option-select-label">Role</div>
                            <div class="js-selected-counter">
                                <span class="js-selected-counter-text"></span>
                            </div>
                        </div>
                        <div class="options-container" id="">
                            <div class="js-auto-height-inner">
                                <fieldset>
                                    <legend class="visuallyhidden">Select an option below to filter the results</legend>
                                    <div class="filter-wrapper select-all-wrap">
                                        <input id="govrole_all" class="filter-input select-all" type="checkbox"/>
                                        <label for="govrole_all" class="filter-radio">
                                            All
                                        </label>
                                    </div>
                                    @foreach (var item in Model.GovernorRoles.OrderBy(x => x.Name))
                                    {
                                        <div class="filter-wrapper">
                                            <input name="@GovernorSearchViewModel.BIND_ALIAS_ROLE_ID" class="trigger-result-update filter-input" value="@item.Id" id="role_@item.Id" type="checkbox" @Html.Conditional(Model.SelectedRoleIds.Contains(item.Id), "checked")/>
                                            <label for="role_@item.Id" class="filter-radio">
                                                @item
                                            </label>
                                        </div>

                                    }
                                </fieldset>
                            </div>
                        </div>
                    </div>

                    <div class="govuk-option-select js-collapsible" id="option-select-group-type">
                        <div class="container-head js-container-head">
                            <div class="option-select-label">Establishment/group type</div>
                            <div class="js-selected-counter">
                                <span class="js-selected-counter-text"></span>
                            </div>
                        </div>
                        <div class="options-container" id="">
                            <div class="js-auto-height-inner">
                                <fieldset>
                                    <legend class="visuallyhidden">Select an option below to filter the results</legend>
                                    <div class="filter-wrapper select-all-wrap">
                                        <input id="grouptype_all" class="filter-input select-all" type="checkbox"/>
                                        <label for="grouptype_all" class="filter-radio">
                                            All
                                        </label>
                                    </div>
                                    @foreach (var item in Model.GovernorTypeFlags.OrderBy(x => x.Name))
                                    {
                                        <div class="filter-wrapper">
                                            <input name="g" class="trigger-result-update filter-input" value="@item.Id" id="group-type_@item.Id" type="checkbox" @Html.Conditional(Model.SelectedGovernorTypeFlagIds.Contains(item.Id), "checked")/>
                                            <label for="group-type_@item.Id" class="filter-radio">
                                                @item
                                            </label>
                                        </div>
                                    }
                                </fieldset>
                            </div>
                        </div>

                    </div>
                    
                    @Selector("Local authority", GovernorSearchViewModel.BIND_ALIAS_LAIDS, Model.LocalAuthorities.OrderBy(x => x.Name), Model.SelectedLocalAuthorityIds, filterRefine: true, isExtraFilter: true)

                    <div id="filter-addtional-controls">
                        <a href="#" class="add-clear-filters" id="clear-filters">Clear all filters</a>
                    </div>

                    <input type="submit" value="Update" class="button edubase-filter-submit" id="filter-submit"/>
                    @Html.HiddenFor(!Model.GovernorSearchModel.Forename.IsEmpty(), x => x.GovernorSearchModel.Forename)
                    @Html.HiddenFor(!Model.GovernorSearchModel.Surname.IsEmpty(), x => x.GovernorSearchModel.Surname)
                    @Html.HiddenFor(Model.GovernorSearchModel.IncludeHistoric, x => x.GovernorSearchModel.IncludeHistoric)
                </form>
            </div>

        </div>
    </div>

    <div class="column-two-thirds" id="results-container">

        @{Html.RenderPartial("Partials/_GovernorSearchResults");}

    </div>

</div>

@section ViewScripts
{
    <script language="javascript">
        DfE.searchResults.init();
        $('#filter-form').find('.searchable-filters').searchWithinFilters(); 
    </script>
}


@helper SearchWithin()
{
    <div class="search-field-wrap">
        <label class="filter-searchwithin-label">
            <span class="visually-hidden">Search within this filter</span>
            <input type="text" class="filter-search" />
            <button class="field-clear hidden"><span class="visually-hidden">Clear</span></button>
        </label>        
    </div>
}

@helper Selector(string label, string name, IEnumerable<LookupItemViewModel> items, List<int> selectedItems, string additionalClassName = "", bool isExtraFilter = false, bool filterRefine = false, bool closed = false)
{
    if (!closed)
    {
        additionalClassName = additionalClassName.RemoveSubstring("hidden");
    }
    <div class="govuk-option-select js-collapsible @additionalClassName @Html.Conditional(filterRefine, "searchable-filters")" data-closed-on-load="@(isExtraFilter ? "false" : "true")"
         id="option-select-@label.ToLower().Replace(" ", "-").Replace("/","-")" data-bind-alias="@name">
        <div class="container-head js-container-head">
            <div class="option-select-label">@label</div>
            <div class="js-selected-counter">
                <span class="js-selected-counter-text"></span>
                
            </div>
        </div>
        @if (filterRefine)
        {
            @SearchWithin()
        }
        <div class="options-container" id="">
            <div class="suggestion-target"></div>
            <div class="js-auto-height-inner">
                <fieldset>
                    <legend class="visuallyhidden">Select an option below to filter the results- changing the selection will refresh the results</legend>
                    <div class="filter-wrapper select-all-wrap">
                        <input id="@(name)_all" class="filter-input select-all" type="checkbox" />
                        <label for="@(name)_all" class="filter-radio">
                            All
                        </label>
                    </div>
                    @foreach (var item in items)
                    {
                        <div class="filter-wrapper">
                            <input name="@name" value="@item.Id" id="@(name)_@item.Id" class="trigger-result-update filter-input" type="checkbox" @Html.Conditional(selectedItems.Contains(item.Id), "checked")/>
                            <label for="@(name)_@item.Id" class="filter-radio">
                                @item
                            </label>
                        </div>
                    }
                </fieldset>
            </div>
        </div>
    </div>
}
