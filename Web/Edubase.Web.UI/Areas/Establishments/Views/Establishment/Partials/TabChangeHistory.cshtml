@using Edubase.Services.Domain
@model EstablishmentDetailViewModel

@{
    var request = HttpContext.Current.Request;
    var sortDir = "desc";
    var sortDirText = "a descending order";
    var sortField = "changedDateUtc";

    if (request.QueryString["sortby"] != null)
    {
        sortField = request.QueryString["sortby"].Substring(0, request.QueryString["sortby"].IndexOf("-"));
        sortDir = (request.QueryString["sortby"] ?? "").Contains("asc") ? "asc" : "desc";
        sortDirText = (request.QueryString["sortby"] ?? "").Contains("asc") ? "an ascending order" : "a descending order";
    }

    var sortedDescription = " is sorted in " + sortDirText + ". Click to change order. All other columns are sortable.";
    var unsortedDescription = ". Click to sort data by this column.";

    var tableColumns = new List<Tuple<string, string>>
    {
        Tuple.Create("changedDateUtc", "Date changed"),
        Tuple.Create("effectiveDateUtc", "Effective date"),
        Tuple.Create("fieldName", "Updated field"),
        Tuple.Create("oldValue", "Old value"),
        Tuple.Create("newValue", "New value"),
        Tuple.Create("requestedDateUtc", "Date requested"),
        Tuple.Create("originatorUserName", "Suggested from"),
        Tuple.Create("approverUserName", "Approved by"),
    };

}
<div id="school-change-history" class="tab-content approval-data">

    <h2 class="bold-small change-history-title">Change History</h2>

    @if (User.Identity.IsAuthenticated && Model.GovernorsGridViewModel.DomainModel.HasGovernors)
    {
        <div class="school-governance-history">
            @Html.RouteLink("View governance change history", "EstabDetailGovChangeHistory", new { id = Model.GovernorsGridViewModel.EstablishmentUrn })
            <br /><br />
        </div>
    }

    @if (!Model.ChangeHistory.Items.Any())
    {
        <p>There are no change records available at the moment</p>
    }
    else
    {
        <p>
            @Html.ActionLink("Download data in CSV format", "DownloadChangeHistory", "Downloads", new {establishmentUrn = Model.Establishment.Urn, area = "", downloadType = DownloadType.csv}, new {style = "margin-bottom:10px; display:block;"})
            @Html.ActionLink("Download data in XLSX format", "DownloadChangeHistory", "Downloads", new {establishmentUrn = Model.Establishment.Urn, area = "", downloadType = DownloadType.xlsx}, null)
            <br/>
        </p>
        if (Model.ChangeHistory.PageCount > 1)
        {
            <div class="top-pagination">
                @Html.Partial("_GenericPaginationV2", Model.ChangeHistory)
            </div>
        }
        <table class="approval-changes edubase-table sortable-table">
            <caption class="visuallyhidden">Change history</caption>
            <thead>
            <tr>
                @foreach (var tableColumn in tableColumns)
                {
                    <th scope="col">
                        <a href="@Url.SortUrl(tableColumn.Item1, "#school-change-history")"
                           class="@Html.Conditional(sortField == tableColumn.Item1, "selected-sort") @Html.Conditional(sortDir.Contains("asc"), "sorted-asc") @Html.Conditional(sortDir.Contains("desc"), "sorted-desc")"
                           aria-label="@string.Concat(tableColumn.Item2, (sortField == tableColumn.Item1 ? sortedDescription : unsortedDescription))">@tableColumn.Item2</a>
                    </th>
                }
            </tr>
            </thead>
            <tbody>
            @foreach (var item in Model.ChangeHistory.Items)
            {
                <tr>
                    <td data-label="Date changed">@(item.ChangedDateUtc?.ToString("dd/MM/yyyy"))</td>
                    <td data-label="Effective date">@(item.EffectiveDateUtc?.ToString("dd/MM/yyyy"))</td>
                    <td data-label="Updated field">@item.Name</td>
                    <td data-label="Old value">@item.OldValue</td>
                    <td data-label="New value">@item.NewValue</td>
                    <td data-label="Date requested">@(item.RequestedDateUtc?.ToString("dd/MM/yyyy"))</td>
                    <td data-label="Suggested from">@item.OriginatorUserName</td>
                    <td data-label="Approved by">@(item.ApproverUserName ?? "--")</td>
                </tr>
            }
            </tbody>
        </table>
        if (Model.ChangeHistory.PageCount > 1)
        {
            <div class="lower-pagination push--bottom">
                @Html.Partial("_GenericPaginationV2", Model.ChangeHistory)
            </div>
            @helpers.BackToTopLink()
        }

    }
</div>
