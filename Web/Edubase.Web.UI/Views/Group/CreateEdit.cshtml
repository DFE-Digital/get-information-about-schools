@model CreateEditGroupModel
@{
    ViewBag.bodyClasses = "create-edit-school school-details";
    ViewBag.hideLogo = true;
    ViewBag.Title = "Create/edit academy trust";
}


@using (Html.BeginForm((Model.GroupUID == null ? "Create" : "Edit"), "Group", FormMethod.Post))
{ 
    @Html.HiddenFor(x => x.GroupUID)
    <div class="grid-row">
        <div class="column-full">
            @Html.ActionLink("Search for an Academy Trust", "Index", "Search", null, new { @class = "home-link" })
            
            <h1 class="heading-xlarge">Edit Academy Trust</h1>
           
            <div class="column-half">
                @Html.ValidationSummary(null, new { @class = "error-summary" })

                <div class="form-group">
                    <label for="name">Trust name</label>
                    <input type="text" value="@Model.Name" disabled="disabled" class="form-control" />
                    @Html.HiddenFor(x => x.Name)
                </div>

                <div class="form-group">
                    <label for="la">Trust type</label>
                    <input type="text" value="@Model.TypeName" disabled="disabled" class="form-control" />
                    @Html.HiddenFor(x => x.TypeName)
                </div>
                
                <div class="form-group">
                    <label>Incorporated on</label>
                    <input type="text" value="@(Model.OpenDate?.ToString("dd/MM/yyyy"))" class="form-control" disabled="disabled" />
                    @Html.HiddenFor(x => x.OpenDate)
                </div>
                
                <div class="form-group">
                    <label>Companies house number</label>
                    <input type="text" value="@Model.CompaniesHouseNumber" class="form-control" disabled="disabled" />
                    @Html.HiddenFor(x => x.CompaniesHouseNumber)
                </div>

                <div class="form-group">
                    <label for="groupid">Group ID</label>
                    @Html.TextBoxFor(x => x.GroupId, new { @class = "form-control", maxlength = 120, id = "groupid" })
                </div>
            </div>
            
            <div class="column-two-thirds">
                <div class="form-group">
                    <label>Address</label>
                    <input type="text" value="@Model.Address" class="form-control" disabled="disabled" />
                    @Html.HiddenFor(x => x.Address)
                </div>
            </div>
                     
        </div>
    </div>

    if (Model.GroupUID.HasValue)
    {
        <div class="grid-row">
            <div class="column-half">
                <span class="bold-xsmall">Add establishment to this Academy Trust</span>
                <p  class="font-xsmall">Enter the establishment URN</p>
                <div class="form-group">
                    @Html.TextBoxFor(x => x.SearchURN, new { @class = "form-control form-control-1-2 search-box" })
                    <button type="submit" name="action" value="Search" class="button button-find-inline">Find</button>
                </div>
                @if (Model.EstablishmentName != null)
                {
                    <p class="bold-xsmall">Establishment found</p>
                    <p>@Model.EstablishmentName</p>


                    <div class="form-group create-edit-form-group drop-down-date range-group @Html.ValidationCssClassFor(x => x.OpenDate)">
                        <fieldset>
                            <legend>Joined date</legend>
                            <div class="form-hint">For exampe, 20 03 2003</div>
                            @Html.ValidationMessageFor(x => x.JoinedDate)
                            <span class="inline-form-control">
                                <label for="opendate-day">Day</label>
                                @Html.EduDayDropDownFor(x => x.JoinedDate.Day,
                                new
                                {
                                    id = "joineddate-day",
                                    @class = "form-control",
                                    aria_describedby = "help-joineddate-day",
                                })
                            </span>
                            <span class="inline-form-control">
                                <label for="joineddate-month">Month</label>
                                @Html.EduMonthDropDownFor(x => x.JoinedDate.Month,
                                new
                                {
                                    id = "joineddate-month",
                                    @class = "form-control",
                                    aria_describedby = "help-joineddate-month",
                                })

                            </span>
                            <span class="inline-form-contol">
                                <label for="joineddate-year">Year</label>
                                @Html.EduYearDropDownFor(x => x.JoinedDate.Year,
                                new
                                {
                                    id = "joineddate-year",
                                    @class = "form-control",
                                    aria_describedby = "help-joineddate-year",
                                })
                            </span>
                        </fieldset>
                    </div>
                    
                    <input type="submit" name="action" value="Add" class="button" />
                    @Html.HiddenFor(x => x.EstablishmentUrn)
                }
                @if (Model.EstablishmentNotFound)
                {
                    <p class="bold-xsmall">Establishment not found</p>
                }
            </div>
        </div>
    }
    <div class="grid-row">
        <div class="column-two-thirds">

            @if (Model.Establishments.Count > 0)
            {
                <h2 class="heading-large">List of academies (@Model.Establishments.Count)</h2>
            }

            @Html.HiddenFor(x => x.EstabUrnToRemove)
            <ul class="school-results-listing">
                @for (int i = 0; i < Model.Establishments.Count; i++)
                {
                    <li>
                        <h2>@Html.ActionLink(Model.Establishments[i].Name, "Details", "Establishment", new { id = Model.Establishments[i].Urn }, new { @class = "bold-small", target = "_blank" })</h2>
                        <dl>
                            <dt>Address:</dt>
                            <dd>@Model.Establishments[i].Address</dd>
                            <dt>URN:</dt>
                            <dd>@Model.Establishments[i].Urn</dd>
                            <dt>School type:</dt>
                            <dd>@Model.Establishments[i].Type</dd>
                            <dt>Headteacher name:</dt>
                            <dd>@Model.Establishments[i].HeadteacherName</dd>

                            @if (!Model.Establishments[i].EditMode)
                            {
                                <dt>Joined date:</dt>
                                <dd>@(Model.Establishments[i].JoinedDate?.ToString("dd/MM/yyyy") ?? "Not recorded")</dd>
                                @Html.HiddenFor(x => x.Establishments[i].JoinedDate)
                            }
                        </dl>

                        @if (Model.Establishments[i].EditMode)
                        {
                            <div class="form-group create-edit-form-group drop-down-date range-group @Html.ValidationCssClassFor(x => x.OpenDate)">
                            <fieldset>
                                <legend>Joined date</legend>
                                <div class="form-hint">For exampe, 20 03 2003</div>
                                @Html.ValidationMessageFor(x => x.Establishments[i].JoinedDateEditable)
                                <span class="inline-form-control">
                                    <label for="opendate-day">Day</label>
                                    @Html.EduDayDropDownFor(x => x.Establishments[i].JoinedDateEditable.Day,
                                     new
                                     {
                                         id = "joineddate-day",
                                         @class = "form-control",
                                         aria_describedby = "help-joineddate-day",
                                     })
                                </span>
                                <span class="inline-form-control">
                                    <label for="joineddate-month">Month</label>
                                    @Html.EduMonthDropDownFor(x => x.Establishments[i].JoinedDateEditable.Month,
                                     new
                                     {
                                         id = "joineddate-month",
                                         @class = "form-control",
                                         aria_describedby = "help-joineddate-month",
                                     })
                                </span>
                                <span class="inline-form-contol">
                                    <label for="joineddate-year">Year</label>
                                    @Html.EduYearDropDownFor(x => x.Establishments[i].JoinedDateEditable.Year,
                                     new
                                     {
                                         id = "joineddate-year",
                                         @class = "form-control",
                                         aria_describedby = "help-joineddate-year",
                                     })
                                </span>
                            </fieldset>
                        </div>
                        }

                        @if (!Model.Establishments.Any(x => x.EditMode))
                        {
                            <div class="form-group">
                                <input type="submit" class="button button-grey" name="action" value="Remove" onclick="$('#EstabUrnToRemove').val(@Model.Establishments[i].Urn);" />
                                <button type="submit" name="action" value="edit-@Model.Establishments[i].Urn" class="button button-grey">Edit</button>
                            </div>
                        }
                        else if (Model.Establishments[i].EditMode)
                        {
                            <div class="form-group">
                                <input type="submit" class="button button-grey" name="action" value="Cancel" />
                                <button type="submit" class="button button-grey" name="action" value="SaveJoinedDate">Save</button>
                            </div>
                        }


                        @Html.HiddenFor(x => x.Establishments[i].Name)
                        @Html.HiddenFor(x => x.Establishments[i].Urn)
                        @Html.HiddenFor(x => x.Establishments[i].Address)
                        @Html.HiddenFor(x => x.Establishments[i].Type)
                        @Html.HiddenFor(x => x.Establishments[i].HeadteacherName)
                        @Html.HiddenFor(x => x.Establishments[i].EditMode)
                    </li>                   
                }
            </ul>
        </div>
    </div>
    <div class="grid-row">
        <div class="column-full">
            <div class="submit-cancel-panel">
                
                @if (Model.GroupUID.HasValue)
                {
                    @Html.ActionLink("Cancel", "Details", "Group", new { id = Model.GroupUID }, new { @class = "button button-grey cancel" })
                }
                <button type="submit" class="button submit" name="action" value="save">Submit</button>
            </div>
        </div>
    </div>
}
