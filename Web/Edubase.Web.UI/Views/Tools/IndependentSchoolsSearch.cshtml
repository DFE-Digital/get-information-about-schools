@using VM = Edubase.Web.UI.Models.Tools.IndSchoolsSearchViewModel; 
@model VM
@{
    ViewBag.Title = "View independent schools’ significant dates";
    ViewBag.bodyClasses = "";
}

<div class="breadcrumbs">
    <ul>
        <li>
            @Html.ActionLink("Home", "Index", "Search", new { area = "" }, null)
        </li>
        <li>@Html.ActionLink("Tools", "Index", "Tools", new { area = "" }, null)</li>
    </ul>
</div>

<div class="grid-row">
    <div class="column-full">
        <h1 class="heading-intro">View independent schools’ significant dates</h1>
        <br />
        <p>Use this tool to view independent schools’ ‘Next general action required’ or ‘Next action required by welfare' date. Local authorities can be added manually or with custom predeﬁned sets.</p>
    </div>
</div>

@using (Html.BeginRouteForm("IndSchSearch", FormMethod.Get, new { @class = "has-typeahead" }))
{
    <div class="grid-row">
        <fieldset class="column-half">
            <div class="form-group">
                <fieldset class="stacked-controls">
                    <legend class="bold-small">Select the action you’re interested in</legend>
                    <br />
                    @Html.GiasRadioFor(x => x.Mode, VM.SpecifierDateOfActionGeneral, "Next general action required")
                    @Html.GiasRadioFor(x => x.Mode, VM.SpecifierDateOfActionWelfare, "Next action required by welfare")
                </fieldset>
            </div>


            <div class="form-group @Html.ValidationCssClassFor(x => x.SelectedLocalAuthorityIds)">
                @Html.LabelFor(x => x.SelectedLocalAuthorityIds, "Select local authorities", new { @class = "form-label-bold" })
                @Html.DropDownListFor(x => x.SelectedLocalAuthoritySetId, Model.LocalAuthoritySetSelectList, "", new { @class = "form-control" })
                @Html.RouteLink("View predefined sets", "PredefinedLASets", null, new { style="float:right;" })
            </div>

            <div id="la-id-target">
                @foreach (var id in Model.SelectedLocalAuthorityIds)
                {
                    var la = Model.LocalAuthorities.Single(x => x.Id == id);
                    <input value="@la.Name" type="hidden" class="form-control user-selected-la" />
                    <button type="submit" class="link-button font-small remove-suggest-la" name="LocalAuthorityToRemove" data-remove="la-@id" value="@id">@la.Name</button>
                    <input type="hidden" name="@VM.BindAliasForSelectedLocalAuthorityIds" value="@id" id="la-@id">
                }
                <div class="floating-text-field-wrap">
                    <input class="floating-text-field" id="LocalAuthorityToAdd" autocomplete="off" />
                </div>
            </div>
            <button class="button-as-link" name="@VM.BindAliasForActionName" value="@VM.ActionSaveSet">Save as set</button>
            <br />
            <br />

            <div class="form-group">
                <label class="form-label-bold">Date range</label>
                <br />
                @Html.EditorFor(x => x.MinDate, new { title = "From", style = "font-weight:bold;" })
                @Html.EditorFor(x => x.MaxDate, new { title = "To", style = "font-weight:bold;" })
            </div>

            <div class="grid-row">
                <div class="column-full">
                    <br />
                    <button type="submit" name="@VM.BindAliasForActionName" class="button mobile-full-width" value="@VM.ActionSearch">Continue</button>
                </div>
            </div>
        </fieldset>
    </div>
}



@section ViewScripts{
    <script src="/public/dfeagiledevops-typeahead/dist/typeahead.bundle.min.js"></script>
    <script>
        window.localAuthorities = @Html.Json(Model.LocalAuthorities);
        window.sets = @Html.Json(Model.LocalAuthoritySets);
    </script>
}