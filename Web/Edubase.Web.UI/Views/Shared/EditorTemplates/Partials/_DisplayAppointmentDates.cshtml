@using Edubase.Services.Enums
@model Edubase.Web.UI.Areas.Governors.Models.GovernorViewModel

@{
    var isGovernorRole = EnumSets.eGovernanceProfessionalRoles.Contains(Model.GovernorRole);
    string dateAppointmentEndsTooltipMessage = isGovernorRole
        ? "A governance professional may have a fixed appointment. If this applies, enter the date their fixed appointment is due to end. If there is not a fixed appointment, leave this field blank until their appointment ends and then add the date their appointment ended date."
        : null;

    var disableStartDate = bool.TryParse(ViewData["disableStartDate"]?.ToString(), out var parsedDisableStartDate)
        ? parsedDisableStartDate
        : false;

    var showReactivationWarning = bool.TryParse(ViewData["reactivationWarning"]?.ToString(), out var parsedReactivationWarning)
        ? parsedReactivationWarning
        : false;

    var editorPrefix = ViewData["editorPrefix"]?.ToString();
}

@if (Model.DisplayPolicy.AppointmentStartDate)
{
    var startDateSaveRecord = isGovernorRole ? "(required to save record)" : "";
    var detail = disableStartDate ? "(based on current governor's end date)" : startDateSaveRecord;
    var title = $"Date of appointment {detail}";

    @Html.EditorFor(model => model.AppointmentStartDate, new {
        title,
        @readonly = disableStartDate,
        ClassPrefix = "start-date",
        editorPrefix
    })
}

@if (Model.DisplayPolicy.AppointmentEndDate)
{
    var titleText = Model.GovernorRole == eLookupGovernorRole.Member
        ? "Date stepped down"
        : isGovernorRole
            ? "Date appointment ended"
            : "Date term ends";

    @Html.EditorFor(model => model.AppointmentEndDate, new {
        title = titleText,
        tooltipText = dateAppointmentEndsTooltipMessage,
        showReactivationWarning
    })
}
