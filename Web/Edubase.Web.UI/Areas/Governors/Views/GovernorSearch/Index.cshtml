@using Edubase.Common;
@model GovernorSearchViewModel
@{
    ViewBag.Title = string.Format("Governor search results");
    ViewBag.PageClass = "search-results";
    ViewBag.HideLogo = true;

    var gSearch = Request.QueryString["gsearch"];
}

<div class="grid-row">
    <div class="column-full results-heading">
        <div class="breadcrumbs">            
            @Html.ActionLink("Back to find a governor", "Index", "Search", new { area = "", SelectedTab = "Governors", gsearch = gSearch }, null)                        
        </div>
        <h1 class="heading-xlarge">Search results</h1>
        <a class="download-link @(Model.Count > 5000 ? "prevent-download": "")" href="@Url.Action("PrepareDownload", "GovernorSearch", new {area = "Governors"})?@Url.CurrentQueryString()">Download these search results</a>
            <p>
                We found <span class="heading-xlarge count">@Model.Count</span> governor@(Model.Count == 1 ? "" : "s") 
                
                @if (Model.GovernorSearchModel.Forename.Clean() != null ||
                     Model.GovernorSearchModel.Surname.Clean() != null ||
                     Model.SelectedRoleIds.Any())
                {
                    <text>matching</text>

                    if (Model.GovernorSearchModel.Forename.Clean() != null)
                    {
                        <text>first name &lsquo;<span class="bold-small">@Model.GovernorSearchModel.Forename</span>&rsquo;</text>

                    }

                    if (Model.GovernorSearchModel.Surname.Clean() != null)
                    {
                        if (Model.GovernorSearchModel.Forename.Clean() != null)
                        {
                            <text>, </text>
                        }
                        <text>last name &lsquo;<span class="bold-small">@Model.GovernorSearchModel.Surname</span>&rsquo;</text>
                    }

                    if (Model.SelectedRoleIds.Any())
                    {
                        if (Model.GovernorSearchModel.Surname.Clean() != null || Model.GovernorSearchModel.Forename.Clean() != null)
                        {
                            <text>and </text>
                        }
                        else
                        {
                            <text>for </text>
                        }
                        <text>roles <span class="governor-roles">@Html.Raw(Model.RoleNames)</span></text>
                    }
                }
                
            </p>
        </div>
</div>

<div class="grid-row">

    <div class="column-third">
        <div class="filter-form" id="filter-form">

            <div id="EditSearchCollapsible"
                 class="button-as-link js-collapsible selected mbl js-track"
                 data-track="search-results||edit-search"
                 aria-controls="EditSearchCollapse"
                 role="button">
                <a class="help-toggle" href="@Url.Action("Index", "Search", new { area = "", SelectedTab = "Governors" })">Edit search</a>
            </div>

            <div id="EditSearchCollapse" aria-expanded="true" class="blanket-container">
                <div class="blanket"></div>
                <div class="filter-divider"></div>
                <form method="get" action="@Url.Action("Index", "GovernorSearch", new { area = "Governors" })">

                    <div class="govuk-option-select js-collapsible"
                         id="option-select-sort-by">
                        <div class="container-head js-container-head">
                            <div class="option-select-label">Sort by</div>
                            <div class="js-selected-counter"></div>
                        </div>
                        <select class="form-control trigger-result-update" name="SortBy">
                            <option value="a" @Html.Conditional(Model.SortOption == Edubase.Services.Enums.eSortBy.NameAlphabeticalAZ, "selected")>alphabetical a-z</option>
                            <option value="z" @Html.Conditional(Model.SortOption == Edubase.Services.Enums.eSortBy.NameAlphabeticalZA, "selected")>alphabetical z-a</option>
                        </select>
                    </div>

                    <div class="govuk-option-select js-collapsible" id="option-select-role-type">
                        <div class="container-head js-container-head">
                            <div class="option-select-label">Role</div>
                            <div class="js-selected-counter"></div>
                        </div>
                        <a href="#" class="clear-selections">Clear</a>
                        <div class="options-container" id="">
                            <div class="js-auto-height-inner">
                                <fieldset>
                                    <span class="visuallyhidden">- changing the selection will refresh the results</span>
                                    <legend class="visuallyhidden">Select an option below to filter the results</legend>
                                    @foreach (var item in Model.GovernorRoles.OrderBy(x => x.Name))
                                    {
                                        <div class="filter-wrapper">
                                            <input name="@GovernorSearchViewModel.BIND_ALIAS_ROLE_ID" class="trigger-result-update filter-input" value="@item.Id" id="role_@item.Id" type="checkbox" @Html.Conditional(Model.SelectedRoleIds.Contains(item.Id), "checked")/>
                                            <label for="role_@item.Id" class="filter-radio">
                                                @item
                                            </label>
                                        </div>
                                        
                                    }
                                </fieldset>
                            </div>
                        </div>
                    </div>
                    
                    <div class="govuk-option-select js-collapsible" id="option-select-group-type">
                        <div class="container-head js-container-head">
                            <div class="option-select-label">Establishment/group type</div>
                            <div class="js-selected-counter"></div>
                        </div>
                        <a href="#" class="clear-selections">Clear</a>
                        <div class="options-container" id="">
                            <div class="js-auto-height-inner">
                                <fieldset>
                                    <span class="visuallyhidden">- changing the selection will refresh the results</span>
                                    <legend class="visuallyhidden">Select an option below to filter the results</legend>
                                    @foreach (var item in Model.GovernorTypeFlags.OrderBy(x => x.Name))
                                    {
                                        <div class="filter-wrapper">
                                            <input name="g" class="trigger-result-update filter-input" value="@item.Id" id="group-type_@item.Id" type="checkbox" @Html.Conditional(Model.SelectedGovernorTypeFlagIds.Contains(item.Id), "checked") />
                                            <label for="group-type_@item.Id" class="filter-radio">
                                                @item
                                            </label>
                                        </div>                                        
                                    }
                                </fieldset>
                            </div>
                        </div>
                    </div>

                    <input type="submit" value="Update" class="button edubase-filter-submit" id="filter-submit" />
                    @Html.HiddenFor(!Model.GovernorSearchModel.Forename.IsEmpty(), x => x.GovernorSearchModel.Forename)
                    @Html.HiddenFor(!Model.GovernorSearchModel.Surname.IsEmpty(), x => x.GovernorSearchModel.Surname)
                    @Html.HiddenFor(Model.GovernorSearchModel.IncludeHistoric, x => x.GovernorSearchModel.IncludeHistoric)
                </form>
            </div>

        </div>
    </div>

    <div class="column-two-thirds" id="results-container">

        @{Html.RenderPartial("Partials/_GovernorSearchResults");}

    </div>

</div>