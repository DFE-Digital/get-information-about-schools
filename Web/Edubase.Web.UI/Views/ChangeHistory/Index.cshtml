@model ChangeHistoryViewModel
@{
    ViewBag.Title = "Edubase: search change history";
    ViewBag.bodyClasses = "search-changes";
}
<div class="breadcrumbs">
    <ul>
        <li>
            @Html.ActionLink("Home", "Index", "Search", new { area = "" }, null)
        </li>
        <li>
            @Html.ActionLink("Tools", "Index", "Tools", new { area = "" }, null)
        </li>
    </ul>
</div>

<div class="grid-row" id="change-history-app">
    <div class="column-full">
        <h1 class="heading-large">Change history</h1>
    </div>
    @using (Html.BeginRouteForm("ChangeHistorySearch", FormMethod.Get))
    {
        <div class="column-full" style="display:@(Model.Results == null ? "" : "none");">
            
            <div class="button-row">
                <input type="submit" class="button" value="Apply filters" />
                @Html.RouteLink("Clear filters", "ChangeHistoryCriteria", null, new { @class = "button button-grey" })
            </div>

            <fieldset class="inline">
                <legend class="heading-small">Filter by establishment or group</legend>
                <div class="form-group">
                    <span class="radio-button-wrap">
                        <input id="searchtype-establishment" name="@nameof(Model.SearchType)" value="establishment" type="radio" @Html.Conditional(Model.SearchType == "establishment", "checked")>
                        <label class="edubase-button-radio" for="searchtype-establishment">
                            Establishment
                        </label>
                    </span>
                    <span class="radio-button-wrap">
                        <input id="searchtype-group" name="@nameof(Model.SearchType)" value="group" type="radio" @Html.Conditional(Model.SearchType == "group", "checked")>
                        <label class="edubase-button-radio" for="searchtype-group">
                            Group
                        </label>
                    </span>
                </div>
            </fieldset>

            <input type="submit" class="button" value="Update" id="update-search-type-selection" />

            <div id="establishment-search-filters" class="panel-indent" style="display:@(Model.SearchType != null ? "" : "none");">
                <div class="expander-panel open-expander">
                    <a href="#" class="panel-trigger heading-small">Date</a>
                    <div class="expander-panel-content">
                        <div class="form-group inline">
                            <span class="radio-button-wrap">
                                <input id="date-applied" name="date-search-type" value="applied" type="radio" v-model="dateType">
                                <label class="edubase-button-radio" for="date-applied">Applied</label>
                            </span>

                            <span class="radio-button-wrap">
                                <input id="date-approved" name="date-search-type" value="approved" type="radio" v-model="dateType">
                                <label class="edubase-button-radio" for="date-approved">Approved</label>
                            </span>

                            <span class="radio-button-wrap">
                                <input id="date-effective" name="date-search-type" value="effective" type="radio" v-model="dateType">
                                <label class="edubase-button-radio" for="date-effective">Effective</label>
                            </span>

                        </div>

                        <div class="form-group panel-indent">
                            <fieldset id="date-from" class="range-group">
                                <span v-bind:class="['error-message']" v-show="errorFromDate">Please enter the establishment opening date</span>
                                <legend>Changed date from</legend>
                                <span class="inline-form-control">
                                    <label for="fromdate-day">Day</label>
                                    <input class="form-control date-text-day" id="fromdate-day" type="text" v-model="fromDateDay">
                                </span>
                                <span class="inline-form-control">
                                    <label for="fromdate-month">Month</label>
                                    <input class="form-control date-text-month" id="fromdate-month" type="text" v-model="fromDateMonth">
                                </span>
                                <span class="inline-form-contol">
                                    <label for="fromdate-year">Year</label>
                                    <input class="form-control date-text-year" id="fromdate-year" type="text" v-model="fromDateYear">
                                </span>
                            </fieldset>
                            <fieldset id="date-to" class="range-group  range-group-to">
                                <span v-bind:class="['error-message']" v-show="errorToDate">Please enter the establishment opening date</span>
                                <legend>Changed date to</legend>
                                <span class="inline-form-control">
                                    <label for="todate-day">Day</label>
                                    <input class="form-control date-text-day" id="todate-day" type="text" v-model="toDateDay">

                                </span>
                                <span class="inline-form-control">
                                    <label for="todate-month">Month</label>
                                    <input class="form-control date-text-month" id="todate-month" type="text" v-model="toDateMonth">

                                </span>
                                <span class="inline-form-contol">
                                    <label for="todate-year">Year</label>
                                    <input class="form-control date-text-year" id="todate-year" type="text" v-model="toDateYear">
                                </span>
                            </fieldset>
                        </div>
                    </div>

                </div>
                <div class="expander-panel for-search-type-establishment" style="display:@(Model.SearchType == "establishment" ? "" : "none");">
                    <a href="#" class="panel-trigger heading-small">Establishment type</a>
                    <div class="expander-panel-content">

                        @foreach (var item in Model.EstablishmentTypes)
                        {
                            var name = ChangeHistoryViewModel.BIND_ALIAS_ESTABTYPEIDS;
                            <span class="checkbox-wrap">
                                <input id="@(name + "_" + item.Id)" name="@name" value="@item.Id" type="checkbox" @Html.Conditional(Model.SelectedEstablishmentTypeIds.Contains(item.Id), "checked") />
                                <label for="@(name + "_" + item.Id)" class="edubase-button-checkbox">@item.Name</label>
                            </span>
                        }

                    </div>

                </div>
                <div class="expander-panel for-search-type-establishment" style="display:@(Model.SearchType == "establishment" ? "" : "none");">
                    <a href="#" class="panel-trigger heading-small">Establishment fields</a>
                    <div class="expander-panel-content">
                        @foreach (var item in Model.EstablishmentFields)
                        {
                            var name = ChangeHistoryViewModel.BIND_ALIAS_FIELDS;
                            <span class="checkbox-wrap">
                                <input id="@(name + "_" + item.Key)" name="@name" value="@item.Key" type="checkbox" @Html.Conditional(Model.SelectedEstablishmentFields.Contains(item.Key), "checked") />
                                <label for="@(name + "_" + item.Key)" class="edubase-button-checkbox">@item.Text</label>
                            </span>
                        }
                    </div>
                </div>

                <div class="expander-panel for-search-type-group" style="display:@(Model.SearchType == "group" ? "" : "none");">
                    <a href="#" class="panel-trigger heading-small">Group type</a>
                    <div class="expander-panel-content">

                        @foreach (var item in Model.GroupTypes)
                        {
                            var name = ChangeHistoryViewModel.BIND_ALIAS_GROUPTYPEIDS;
                            <span class="checkbox-wrap">
                                <input id="@(name + "_" + item.Id)" name="@name" value="@item.Id" type="checkbox" @Html.Conditional(Model.SelectedGroupTypeIds.Contains(item.Id), "checked") />
                                <label for="@(name + "_" + item.Id)" class="edubase-button-checkbox">@item.Name</label>
                            </span>
                        }

                    </div>
                </div>
                <div class="expander-panel last-panel">
                    <a href="#" class="panel-trigger heading-small">Author and approver</a>
                    <div class="expander-panel-content">
                        <div class="column-third">
                            <div class="form-group">
                                <label class="form-label">Change suggested by</label>
                                <select id="change-suggested" class="form-control" v-model="changeSuggestedBy">
                                    <option value="0">Select user group</option>
                                    
                                </select>
                            </div>
                            <div class="form-group">
                                <label class="form-label">Change approved by</label>
                                <select id="change-approved" class="form-control" v-model="changeApprovedBy">
                                    <option value="0">Select user group</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>


            </div>

            <div class="button-row">
                <input type="submit" class="button" value="Apply filters" />
                @Html.RouteLink("Clear filters", "ChangeHistoryCriteria", null, new { @class = "button button-grey" })
            </div>
        </div>
        
        if (Model.Results != null)
        {
            <div class="column-full">
                <h2 class="heading-small">Download change history</h2>
                
                <div class="form-group padded-group">
                    <span class="radio-button-wrap">
                        <input id="download-csv" name="change-history-search-type" value="csv" type="radio" v-model="downloadType">
                        <label class="edubase-button-radio" for="download-csv">
                            Data in CSV format
                        </label>
                    </span>
                    <span class="radio-button-wrap">
                        <input id="download-xlsx" name="change-history-search-type" value="xlxs" type="radio" v-model="downloadType">
                        <label class="edubase-button-radio" for="download-xlsx">
                            Data in XLSX format
                        </label>
                    </span>
                </div>
                <input type="submit" class="button" value="Continue" />
            
                <div>
                    <p><button type="submit" name="@nameof(Model.ClearResults)" class="button-as-link" value="true">Show filters</button></p>
                    @Html.Partial("_GenericPagination", Model)
                </div>

                <div class="changes-list-wrapper">
                    <table class="edubase-table approval-changes" id="changes-table">
                        <thead>
                            <tr>
                                @if (Model.IsEstablishmentSearch)
                                {
                                    <th scope="col" class="cell-urn">
                                        <abbr title="Unique reference number">
                                            URN
                                        </abbr>
                                    </th>
                                    <th scope="col" class="cell-estab">Establishment</th>
                                }
                                else
                                {
                                    <th scope="col" class="cell-urn">
                                        <abbr title="Unique identifier">
                                            UId
                                        </abbr>
                                    </th>
                                    <th scope="col" class="cell-estab">Group</th>
                                }
                                <th scope="col" class="cell-edate">Date changed</th>
                                <th scope="col" class="cell-updatedfield">Updated field</th>
                                <th scope="col" class="cell-oldvalue">Old value</th>
                                <th scope="col" class="cell-newvalue">New value</th>
                                <th scope="col" class="cell-suggested">Suggested by</th>
                                <th scope="col" class="cell-edate">Approved by</th>
                            </tr>
                        </thead>
                        @if (Model.Results.Items.Any())
                        {
                            <tbody>
                                @foreach (var item in Model.Results.Items)
                                {
                                    <tr>
                                        @if (Model.IsEstablishmentSearch)
                                        {
                                            <td aria-label="URN"><a href="/establishment/details/@(item.EstablishmentUrn)">@(item.EstablishmentUrn)</a></td>
                                            <td aria-label="Establishment"><a href="/establishment/details/@(item.EstablishmentUrn)">@(item.EstablishmentName)</a></td>
                                        }
                                        else
                                        {
                                            <td aria-label="URN"><a href="/groups/group/details/@(item.GroupUId)">@(item.GroupUId)</a></td>
                                            <td aria-label="Group"><a href="/groups/group/details/@(item.GroupUId)">@(item.GroupName)</a></td>
                                        }
                                        <td aria-label="Date changed">@(item.DateChanged?.ToString("dd/MM/yyyy"))</td>
                                        <td aria-label="Updated field">@item.FieldName</td>
                                        <td aria-label="Old value">@item.OldValue</td>
                                        <td aria-label="New value">@item.NewValue</td>
                                        <td aria-label="Suggested by">@item.SuggesterName</td>
                                        <td aria-label="Approved by">@item.ApproverName</td>
                                    </tr>
                                }
                            </tbody>
                        }
                        else
                        {
                            <tbody>
                                <tr>
                                    <td colspan="9">
                                        <p> No items</p>
                                    </td>
                                </tr>
                            </tbody>
                        }
                    </table>
                </div>

            </div>
        }

        @*<div class="column-full" v-cloak v-show="availableDownload">
            <p>Your requested file is ready to download.</p>
            <ul>
                <li class="download-list-item">
                    <span class="icon-link-copy">
                        <a href="#"
                           target="_blank" rel="nofollow">{{downloadLinkText}}</a>
                    </span>
                    <span class="alternative-file-directions">
                        (Will download as a ZIP file. Open the ZIP to access its contents)
                    </span>
                </li>
            </ul>
            <button class="button button-grey" v-on:click="resultsView=true, availableDownload=false">Search results</button>
        </div>*@
    }
</div>


@section ViewScripts {


    <script>
        (function () {
            var panels = document.querySelectorAll('.expander-panel');

            Array.prototype.forEach.call(panels, function (el) {
                var trigger = el.querySelectorAll('.panel-trigger')[0];

                trigger.addEventListener('click', function (e) {
                    e.preventDefault();
                    el.classList.toggle('open-expander');
                });
            });

            $("#update-search-type-selection").hide();

            $("#searchtype-establishment,#searchtype-group").change(function () {
                $("#establishment-search-filters").show();
            });

            $("#searchtype-establishment").change(function () {
                $(".for-search-type-group").hide();
                $(".for-search-type-establishment").show();
            });

            $("#searchtype-group").change(function () {
                $(".for-search-type-establishment").hide();
                $(".for-search-type-group").show();
            });

        }());
    </script>
    

}
