@using Edubase.Services.Downloads.Models;
@model DownloadsViewModel
@{
    ViewBag.Title = "Downloads";
    ViewBag.HideLogo = true;
    ViewBag.SiteSection = "downloads";
    var downloadGroups = Model.GetFileDownloadGroups();
}

@section Head
{
    <meta name="robots" content="noindex,nofollow"/>
}

@section BackLink
{
    @Html.ActionLink("Home", "Index", "Search", new {area = ""}, new {@class = "govuk-back-link"})
}

<div class="govuk-grid-row">
    <div class="govuk-grid-column-full">
        <h1 class="govuk-heading-l">Downloads</h1>
    </div>
    <div class="govuk-grid-column-two-thirds">
        <p>
            This data is updated daily. The data fields and the order of the data fields can change in these downloads.
            If you need data in a prescribed format you should consider signing up for WebServices by submitting a
            <a href="https://form.education.gov.uk/en/AchieveForms/?form_uri=sandbox-publish://AF-Process-2b61dfcd-9296-4f6a-8a26-4671265cae67/AF-Stage-f3f5200e-e605-4a1b-ae6b-3536bc77305c/definition.json&redirectlink=/en&cancelRedirectLink=/en" target="_blank" rel="external">Service Request <span class="govuk-visually-hidden">Opens in new window</span></a>.
        </p>
    </div>
</div>

<div class="gias-tabs-wrapper">
    @if (Model.AreScheduledExtractsAvailable)
    {
        <div class="tab-wrap">
            <ul class="gias-tabs">
                <li class="gias-tabs__list-item">
                    <a href="#group-data" class="gias-tabs__tab">
                        Establishment &amp; group data
                    </a>
                </li>
                <li class="gias-tabs__list-item">
                    <a href="#scheduled-extracts" class="gias-tabs__tab">
                        Scheduled extracts
                    </a>
                </li>
            </ul>
        </div>
    }
    <div class="tab-content-wrapper gias-tabs-content">
        <div id="group-data" class="tab-content">
            <div class="govuk-grid-row">
                <div class="govuk-grid-column-two-thirds">
                    @foreach (var group in downloadGroups)
                    {
                        <h2 class="govuk-heading-m">@group.Heading</h2>
                        <p>@group.Paragraph</p>
                        foreach (var item in group.SubSections)
                        {
                            <h3 class="govuk-heading-s">@item.Heading</h3>
                            <ul class="govuk-list govuk-list--spaced">
                                @foreach (var file in item.Files)
                                {
                                    <li>
                                         @if (file.Item2.RequiresGeneration)
                                         {
                                             <a href="@Url.RouteUrl("GenerateDownload", new {id = file.Item2.Tag})" rel="nofollow" class="js-track" data-track="download-data-page|@file.Item2.Description)|download">
                                                 @file.Item1@Html.Conditional(file.Item2.FileSizeInBytes > 0, ", " + Html.FileSizeInMegabytes(file.Item2.FileSizeInBytes))
                                             </a>
                                         }
                                         else
                                         {
                                             <a href="@(file.Item2.AuthenticationRequired ? Url.RouteUrl("DownloadFile", new {id = file.Item2.Tag}) : file.Item2.Url)" target="_blank" rel="nofollow" class="js-track" data-track="download-data-page|@file.Item2.Description)|download">
                                                 @file.Item1@Html.Conditional(file.Item2.FileSizeInBytes > 0, ", " + Html.FileSizeInMegabytes(file.Item2.FileSizeInBytes)) <span class="govuk-visually-hidden">Opens in new window</span>
                                             </a>
                                         }
                                    </li>
                                }
                            </ul>
                        }
                    }
                </div>
            </div>
        </div>
        @if (Model.AreScheduledExtractsAvailable)
        {
            <div id="scheduled-extracts" class="tab-content">
                <div class="govuk-grid-row">
                    <div class="govuk-grid-column-full">
                        <p>
                            This is full data that can be found on Get information about schools. Not all files are date stamped, so it's a good idea to make a note of when you download the file.
                        </p>

                        @if (Model.ScheduledExtracts.PageCount > 1)
                        {
                            <div class="top-pagination">
                                @Html.Partial("_GenericPaginationV2", Model.ScheduledExtracts)
                            </div>
                        }

                        <table class="govuk-table gias-table retain-columns @(Model.ScheduledExtracts.PageCount > 1 ? "" : "no-pagination")">
                            <caption class="govuk-visually-hidden">Scheduled extracts files</caption>
                            <thead class="govuk-table__head">
                            <tr class="govuk-table__row">
                                <th scope="col" class="govuk-table__header">File</th>
                                <th scope="col" class="govuk-table__header govuk-table__header--numeric">ID</th>
                            </tr>
                            </thead>
                            <tbody class="govuk-table__body">
                            @foreach (var item in Model.ScheduledExtracts.Items)
                            {
                                <tr class="govuk-table__row">
                                    <td class="govuk-table__cell download-list-item">
                                        @Html.RouteLink(item.Name, "RequestScheduledExtract", new {id = item.Id}, new {rel = "nofollow"})
                                    </td>
                                    <td class="govuk-table__cell govuk-table__cell--numeric">
                                        @item.Id
                                    </td>
                                </tr>
                            }
                            </tbody>
                        </table>
                        @if (Model.ScheduledExtracts.PageCount > 1)
                        {
                            <div class="lower-pagination">
                                @Html.Partial("_GenericPaginationV2", Model.ScheduledExtracts)
                            </div>
                            @helpers.BackToTopLink()
                        }
                    </div>
                </div>
            </div>
        }

    </div>
</div>


@section ViewScripts
{
    <script src="/public/assets/scripts/build/downloads.js"></script>
}
